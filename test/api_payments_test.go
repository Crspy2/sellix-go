/*
Sellix Developers API

Testing PaymentsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package sellix

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/crspy2/sellix-go"
)

func Test_sellix_PaymentsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test PaymentsAPIService CompletePayment", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var uniqid string

		resp, httpRes, err := apiClient.PaymentsAPI.CompletePayment(context.Background(), uniqid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PaymentsAPIService CreatePayment", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.PaymentsAPI.CreatePayment(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PaymentsAPIService VoidPayment", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var uniqid string

		resp, httpRes, err := apiClient.PaymentsAPI.VoidPayment(context.Background(), uniqid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
