/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the CryptoTransactionAmlTx type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CryptoTransactionAmlTx{}

// CryptoTransactionAmlTx struct for CryptoTransactionAmlTx
type CryptoTransactionAmlTx struct {
	// AML transaction ID.
	Id *int32 `json:"id,omitempty"`
	// Shop ID linked to this AML transaction.
	ShopId *int32 `json:"shop_id,omitempty"`
	// Unique ID of the invoice this AML transaction is linked to.
	InvoiceId *string `json:"invoice_id,omitempty"`
	// Origin of the AML transaction.
	Origin *string `json:"origin,omitempty"`
	// Type of the AML transaction.
	Type *string `json:"type,omitempty"`
	// Asset of the AML transaction.
	Asset *string `json:"asset,omitempty"`
	// Blockchain of the AML transaction.
	Blockchain *string `json:"blockchain,omitempty"`
	// AML transaction hash.
	Hash *string `json:"hash,omitempty"`
	// AML transaction output type.
	OutputType *string `json:"output_type,omitempty"`
	// AML transaction output address.
	OutputAddress *string `json:"output_address,omitempty"`
	// AML transaction risk score.
	RiskScore *string `json:"risk_score,omitempty"`
	// AML transaction asset list.
	AssetList []string `json:"asset_list,omitempty"`
	// AML transaction error.
	Error *string `json:"error,omitempty"`
	// AML transaction evaluation detail.
	EvaluationDetail []string `json:"evaluation_detail,omitempty"`
	Contributions []CryptoTransactionAmlTxContributionsInner `json:"contributions,omitempty"`
	BlockchainInfo *CryptoTransactionAmlTxBlockchainInfo `json:"blockchain_info,omitempty"`
	ClusterEntities []AmlWalletClusterEntitiesInner `json:"cluster_entities,omitempty"`
	RiskScoreDetail *AmlWalletRiskScoreDetail `json:"risk_score_detail,omitempty"`
	// Timestamp for the AML transaction creation date
	CreatedAt *int32 `json:"created_at,omitempty"`
}

// NewCryptoTransactionAmlTx instantiates a new CryptoTransactionAmlTx object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCryptoTransactionAmlTx() *CryptoTransactionAmlTx {
	this := CryptoTransactionAmlTx{}
	return &this
}

// NewCryptoTransactionAmlTxWithDefaults instantiates a new CryptoTransactionAmlTx object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCryptoTransactionAmlTxWithDefaults() *CryptoTransactionAmlTx {
	this := CryptoTransactionAmlTx{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CryptoTransactionAmlTx) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoTransactionAmlTx) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CryptoTransactionAmlTx) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CryptoTransactionAmlTx) SetId(v int32) {
	o.Id = &v
}

// GetShopId returns the ShopId field value if set, zero value otherwise.
func (o *CryptoTransactionAmlTx) GetShopId() int32 {
	if o == nil || IsNil(o.ShopId) {
		var ret int32
		return ret
	}
	return *o.ShopId
}

// GetShopIdOk returns a tuple with the ShopId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoTransactionAmlTx) GetShopIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ShopId) {
		return nil, false
	}
	return o.ShopId, true
}

// HasShopId returns a boolean if a field has been set.
func (o *CryptoTransactionAmlTx) HasShopId() bool {
	if o != nil && !IsNil(o.ShopId) {
		return true
	}

	return false
}

// SetShopId gets a reference to the given int32 and assigns it to the ShopId field.
func (o *CryptoTransactionAmlTx) SetShopId(v int32) {
	o.ShopId = &v
}

// GetInvoiceId returns the InvoiceId field value if set, zero value otherwise.
func (o *CryptoTransactionAmlTx) GetInvoiceId() string {
	if o == nil || IsNil(o.InvoiceId) {
		var ret string
		return ret
	}
	return *o.InvoiceId
}

// GetInvoiceIdOk returns a tuple with the InvoiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoTransactionAmlTx) GetInvoiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceId) {
		return nil, false
	}
	return o.InvoiceId, true
}

// HasInvoiceId returns a boolean if a field has been set.
func (o *CryptoTransactionAmlTx) HasInvoiceId() bool {
	if o != nil && !IsNil(o.InvoiceId) {
		return true
	}

	return false
}

// SetInvoiceId gets a reference to the given string and assigns it to the InvoiceId field.
func (o *CryptoTransactionAmlTx) SetInvoiceId(v string) {
	o.InvoiceId = &v
}

// GetOrigin returns the Origin field value if set, zero value otherwise.
func (o *CryptoTransactionAmlTx) GetOrigin() string {
	if o == nil || IsNil(o.Origin) {
		var ret string
		return ret
	}
	return *o.Origin
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoTransactionAmlTx) GetOriginOk() (*string, bool) {
	if o == nil || IsNil(o.Origin) {
		return nil, false
	}
	return o.Origin, true
}

// HasOrigin returns a boolean if a field has been set.
func (o *CryptoTransactionAmlTx) HasOrigin() bool {
	if o != nil && !IsNil(o.Origin) {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given string and assigns it to the Origin field.
func (o *CryptoTransactionAmlTx) SetOrigin(v string) {
	o.Origin = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CryptoTransactionAmlTx) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoTransactionAmlTx) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CryptoTransactionAmlTx) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CryptoTransactionAmlTx) SetType(v string) {
	o.Type = &v
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *CryptoTransactionAmlTx) GetAsset() string {
	if o == nil || IsNil(o.Asset) {
		var ret string
		return ret
	}
	return *o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoTransactionAmlTx) GetAssetOk() (*string, bool) {
	if o == nil || IsNil(o.Asset) {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *CryptoTransactionAmlTx) HasAsset() bool {
	if o != nil && !IsNil(o.Asset) {
		return true
	}

	return false
}

// SetAsset gets a reference to the given string and assigns it to the Asset field.
func (o *CryptoTransactionAmlTx) SetAsset(v string) {
	o.Asset = &v
}

// GetBlockchain returns the Blockchain field value if set, zero value otherwise.
func (o *CryptoTransactionAmlTx) GetBlockchain() string {
	if o == nil || IsNil(o.Blockchain) {
		var ret string
		return ret
	}
	return *o.Blockchain
}

// GetBlockchainOk returns a tuple with the Blockchain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoTransactionAmlTx) GetBlockchainOk() (*string, bool) {
	if o == nil || IsNil(o.Blockchain) {
		return nil, false
	}
	return o.Blockchain, true
}

// HasBlockchain returns a boolean if a field has been set.
func (o *CryptoTransactionAmlTx) HasBlockchain() bool {
	if o != nil && !IsNil(o.Blockchain) {
		return true
	}

	return false
}

// SetBlockchain gets a reference to the given string and assigns it to the Blockchain field.
func (o *CryptoTransactionAmlTx) SetBlockchain(v string) {
	o.Blockchain = &v
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *CryptoTransactionAmlTx) GetHash() string {
	if o == nil || IsNil(o.Hash) {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoTransactionAmlTx) GetHashOk() (*string, bool) {
	if o == nil || IsNil(o.Hash) {
		return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *CryptoTransactionAmlTx) HasHash() bool {
	if o != nil && !IsNil(o.Hash) {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *CryptoTransactionAmlTx) SetHash(v string) {
	o.Hash = &v
}

// GetOutputType returns the OutputType field value if set, zero value otherwise.
func (o *CryptoTransactionAmlTx) GetOutputType() string {
	if o == nil || IsNil(o.OutputType) {
		var ret string
		return ret
	}
	return *o.OutputType
}

// GetOutputTypeOk returns a tuple with the OutputType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoTransactionAmlTx) GetOutputTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OutputType) {
		return nil, false
	}
	return o.OutputType, true
}

// HasOutputType returns a boolean if a field has been set.
func (o *CryptoTransactionAmlTx) HasOutputType() bool {
	if o != nil && !IsNil(o.OutputType) {
		return true
	}

	return false
}

// SetOutputType gets a reference to the given string and assigns it to the OutputType field.
func (o *CryptoTransactionAmlTx) SetOutputType(v string) {
	o.OutputType = &v
}

// GetOutputAddress returns the OutputAddress field value if set, zero value otherwise.
func (o *CryptoTransactionAmlTx) GetOutputAddress() string {
	if o == nil || IsNil(o.OutputAddress) {
		var ret string
		return ret
	}
	return *o.OutputAddress
}

// GetOutputAddressOk returns a tuple with the OutputAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoTransactionAmlTx) GetOutputAddressOk() (*string, bool) {
	if o == nil || IsNil(o.OutputAddress) {
		return nil, false
	}
	return o.OutputAddress, true
}

// HasOutputAddress returns a boolean if a field has been set.
func (o *CryptoTransactionAmlTx) HasOutputAddress() bool {
	if o != nil && !IsNil(o.OutputAddress) {
		return true
	}

	return false
}

// SetOutputAddress gets a reference to the given string and assigns it to the OutputAddress field.
func (o *CryptoTransactionAmlTx) SetOutputAddress(v string) {
	o.OutputAddress = &v
}

// GetRiskScore returns the RiskScore field value if set, zero value otherwise.
func (o *CryptoTransactionAmlTx) GetRiskScore() string {
	if o == nil || IsNil(o.RiskScore) {
		var ret string
		return ret
	}
	return *o.RiskScore
}

// GetRiskScoreOk returns a tuple with the RiskScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoTransactionAmlTx) GetRiskScoreOk() (*string, bool) {
	if o == nil || IsNil(o.RiskScore) {
		return nil, false
	}
	return o.RiskScore, true
}

// HasRiskScore returns a boolean if a field has been set.
func (o *CryptoTransactionAmlTx) HasRiskScore() bool {
	if o != nil && !IsNil(o.RiskScore) {
		return true
	}

	return false
}

// SetRiskScore gets a reference to the given string and assigns it to the RiskScore field.
func (o *CryptoTransactionAmlTx) SetRiskScore(v string) {
	o.RiskScore = &v
}

// GetAssetList returns the AssetList field value if set, zero value otherwise.
func (o *CryptoTransactionAmlTx) GetAssetList() []string {
	if o == nil || IsNil(o.AssetList) {
		var ret []string
		return ret
	}
	return o.AssetList
}

// GetAssetListOk returns a tuple with the AssetList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoTransactionAmlTx) GetAssetListOk() ([]string, bool) {
	if o == nil || IsNil(o.AssetList) {
		return nil, false
	}
	return o.AssetList, true
}

// HasAssetList returns a boolean if a field has been set.
func (o *CryptoTransactionAmlTx) HasAssetList() bool {
	if o != nil && !IsNil(o.AssetList) {
		return true
	}

	return false
}

// SetAssetList gets a reference to the given []string and assigns it to the AssetList field.
func (o *CryptoTransactionAmlTx) SetAssetList(v []string) {
	o.AssetList = v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *CryptoTransactionAmlTx) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoTransactionAmlTx) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *CryptoTransactionAmlTx) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *CryptoTransactionAmlTx) SetError(v string) {
	o.Error = &v
}

// GetEvaluationDetail returns the EvaluationDetail field value if set, zero value otherwise.
func (o *CryptoTransactionAmlTx) GetEvaluationDetail() []string {
	if o == nil || IsNil(o.EvaluationDetail) {
		var ret []string
		return ret
	}
	return o.EvaluationDetail
}

// GetEvaluationDetailOk returns a tuple with the EvaluationDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoTransactionAmlTx) GetEvaluationDetailOk() ([]string, bool) {
	if o == nil || IsNil(o.EvaluationDetail) {
		return nil, false
	}
	return o.EvaluationDetail, true
}

// HasEvaluationDetail returns a boolean if a field has been set.
func (o *CryptoTransactionAmlTx) HasEvaluationDetail() bool {
	if o != nil && !IsNil(o.EvaluationDetail) {
		return true
	}

	return false
}

// SetEvaluationDetail gets a reference to the given []string and assigns it to the EvaluationDetail field.
func (o *CryptoTransactionAmlTx) SetEvaluationDetail(v []string) {
	o.EvaluationDetail = v
}

// GetContributions returns the Contributions field value if set, zero value otherwise.
func (o *CryptoTransactionAmlTx) GetContributions() []CryptoTransactionAmlTxContributionsInner {
	if o == nil || IsNil(o.Contributions) {
		var ret []CryptoTransactionAmlTxContributionsInner
		return ret
	}
	return o.Contributions
}

// GetContributionsOk returns a tuple with the Contributions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoTransactionAmlTx) GetContributionsOk() ([]CryptoTransactionAmlTxContributionsInner, bool) {
	if o == nil || IsNil(o.Contributions) {
		return nil, false
	}
	return o.Contributions, true
}

// HasContributions returns a boolean if a field has been set.
func (o *CryptoTransactionAmlTx) HasContributions() bool {
	if o != nil && !IsNil(o.Contributions) {
		return true
	}

	return false
}

// SetContributions gets a reference to the given []CryptoTransactionAmlTxContributionsInner and assigns it to the Contributions field.
func (o *CryptoTransactionAmlTx) SetContributions(v []CryptoTransactionAmlTxContributionsInner) {
	o.Contributions = v
}

// GetBlockchainInfo returns the BlockchainInfo field value if set, zero value otherwise.
func (o *CryptoTransactionAmlTx) GetBlockchainInfo() CryptoTransactionAmlTxBlockchainInfo {
	if o == nil || IsNil(o.BlockchainInfo) {
		var ret CryptoTransactionAmlTxBlockchainInfo
		return ret
	}
	return *o.BlockchainInfo
}

// GetBlockchainInfoOk returns a tuple with the BlockchainInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoTransactionAmlTx) GetBlockchainInfoOk() (*CryptoTransactionAmlTxBlockchainInfo, bool) {
	if o == nil || IsNil(o.BlockchainInfo) {
		return nil, false
	}
	return o.BlockchainInfo, true
}

// HasBlockchainInfo returns a boolean if a field has been set.
func (o *CryptoTransactionAmlTx) HasBlockchainInfo() bool {
	if o != nil && !IsNil(o.BlockchainInfo) {
		return true
	}

	return false
}

// SetBlockchainInfo gets a reference to the given CryptoTransactionAmlTxBlockchainInfo and assigns it to the BlockchainInfo field.
func (o *CryptoTransactionAmlTx) SetBlockchainInfo(v CryptoTransactionAmlTxBlockchainInfo) {
	o.BlockchainInfo = &v
}

// GetClusterEntities returns the ClusterEntities field value if set, zero value otherwise.
func (o *CryptoTransactionAmlTx) GetClusterEntities() []AmlWalletClusterEntitiesInner {
	if o == nil || IsNil(o.ClusterEntities) {
		var ret []AmlWalletClusterEntitiesInner
		return ret
	}
	return o.ClusterEntities
}

// GetClusterEntitiesOk returns a tuple with the ClusterEntities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoTransactionAmlTx) GetClusterEntitiesOk() ([]AmlWalletClusterEntitiesInner, bool) {
	if o == nil || IsNil(o.ClusterEntities) {
		return nil, false
	}
	return o.ClusterEntities, true
}

// HasClusterEntities returns a boolean if a field has been set.
func (o *CryptoTransactionAmlTx) HasClusterEntities() bool {
	if o != nil && !IsNil(o.ClusterEntities) {
		return true
	}

	return false
}

// SetClusterEntities gets a reference to the given []AmlWalletClusterEntitiesInner and assigns it to the ClusterEntities field.
func (o *CryptoTransactionAmlTx) SetClusterEntities(v []AmlWalletClusterEntitiesInner) {
	o.ClusterEntities = v
}

// GetRiskScoreDetail returns the RiskScoreDetail field value if set, zero value otherwise.
func (o *CryptoTransactionAmlTx) GetRiskScoreDetail() AmlWalletRiskScoreDetail {
	if o == nil || IsNil(o.RiskScoreDetail) {
		var ret AmlWalletRiskScoreDetail
		return ret
	}
	return *o.RiskScoreDetail
}

// GetRiskScoreDetailOk returns a tuple with the RiskScoreDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoTransactionAmlTx) GetRiskScoreDetailOk() (*AmlWalletRiskScoreDetail, bool) {
	if o == nil || IsNil(o.RiskScoreDetail) {
		return nil, false
	}
	return o.RiskScoreDetail, true
}

// HasRiskScoreDetail returns a boolean if a field has been set.
func (o *CryptoTransactionAmlTx) HasRiskScoreDetail() bool {
	if o != nil && !IsNil(o.RiskScoreDetail) {
		return true
	}

	return false
}

// SetRiskScoreDetail gets a reference to the given AmlWalletRiskScoreDetail and assigns it to the RiskScoreDetail field.
func (o *CryptoTransactionAmlTx) SetRiskScoreDetail(v AmlWalletRiskScoreDetail) {
	o.RiskScoreDetail = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CryptoTransactionAmlTx) GetCreatedAt() int32 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoTransactionAmlTx) GetCreatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CryptoTransactionAmlTx) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *CryptoTransactionAmlTx) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

func (o CryptoTransactionAmlTx) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CryptoTransactionAmlTx) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ShopId) {
		toSerialize["shop_id"] = o.ShopId
	}
	if !IsNil(o.InvoiceId) {
		toSerialize["invoice_id"] = o.InvoiceId
	}
	if !IsNil(o.Origin) {
		toSerialize["origin"] = o.Origin
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Asset) {
		toSerialize["asset"] = o.Asset
	}
	if !IsNil(o.Blockchain) {
		toSerialize["blockchain"] = o.Blockchain
	}
	if !IsNil(o.Hash) {
		toSerialize["hash"] = o.Hash
	}
	if !IsNil(o.OutputType) {
		toSerialize["output_type"] = o.OutputType
	}
	if !IsNil(o.OutputAddress) {
		toSerialize["output_address"] = o.OutputAddress
	}
	if !IsNil(o.RiskScore) {
		toSerialize["risk_score"] = o.RiskScore
	}
	if !IsNil(o.AssetList) {
		toSerialize["asset_list"] = o.AssetList
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.EvaluationDetail) {
		toSerialize["evaluation_detail"] = o.EvaluationDetail
	}
	if !IsNil(o.Contributions) {
		toSerialize["contributions"] = o.Contributions
	}
	if !IsNil(o.BlockchainInfo) {
		toSerialize["blockchain_info"] = o.BlockchainInfo
	}
	if !IsNil(o.ClusterEntities) {
		toSerialize["cluster_entities"] = o.ClusterEntities
	}
	if !IsNil(o.RiskScoreDetail) {
		toSerialize["risk_score_detail"] = o.RiskScoreDetail
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	return toSerialize, nil
}

type NullableCryptoTransactionAmlTx struct {
	value *CryptoTransactionAmlTx
	isSet bool
}

func (v NullableCryptoTransactionAmlTx) Get() *CryptoTransactionAmlTx {
	return v.value
}

func (v *NullableCryptoTransactionAmlTx) Set(val *CryptoTransactionAmlTx) {
	v.value = val
	v.isSet = true
}

func (v NullableCryptoTransactionAmlTx) IsSet() bool {
	return v.isSet
}

func (v *NullableCryptoTransactionAmlTx) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCryptoTransactionAmlTx(val *CryptoTransactionAmlTx) *NullableCryptoTransactionAmlTx {
	return &NullableCryptoTransactionAmlTx{value: val, isSet: true}
}

func (v NullableCryptoTransactionAmlTx) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCryptoTransactionAmlTx) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


