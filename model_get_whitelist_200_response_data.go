/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the GetWhitelist200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetWhitelist200ResponseData{}

// GetWhitelist200ResponseData struct for GetWhitelist200ResponseData
type GetWhitelist200ResponseData struct {
	Whitelist *Whitelist `json:"whitelist,omitempty"`
}

// NewGetWhitelist200ResponseData instantiates a new GetWhitelist200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetWhitelist200ResponseData() *GetWhitelist200ResponseData {
	this := GetWhitelist200ResponseData{}
	return &this
}

// NewGetWhitelist200ResponseDataWithDefaults instantiates a new GetWhitelist200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetWhitelist200ResponseDataWithDefaults() *GetWhitelist200ResponseData {
	this := GetWhitelist200ResponseData{}
	return &this
}

// GetWhitelist returns the Whitelist field value if set, zero value otherwise.
func (o *GetWhitelist200ResponseData) GetWhitelist() Whitelist {
	if o == nil || IsNil(o.Whitelist) {
		var ret Whitelist
		return ret
	}
	return *o.Whitelist
}

// GetWhitelistOk returns a tuple with the Whitelist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWhitelist200ResponseData) GetWhitelistOk() (*Whitelist, bool) {
	if o == nil || IsNil(o.Whitelist) {
		return nil, false
	}
	return o.Whitelist, true
}

// HasWhitelist returns a boolean if a field has been set.
func (o *GetWhitelist200ResponseData) HasWhitelist() bool {
	if o != nil && !IsNil(o.Whitelist) {
		return true
	}

	return false
}

// SetWhitelist gets a reference to the given Whitelist and assigns it to the Whitelist field.
func (o *GetWhitelist200ResponseData) SetWhitelist(v Whitelist) {
	o.Whitelist = &v
}

func (o GetWhitelist200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetWhitelist200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Whitelist) {
		toSerialize["whitelist"] = o.Whitelist
	}
	return toSerialize, nil
}

type NullableGetWhitelist200ResponseData struct {
	value *GetWhitelist200ResponseData
	isSet bool
}

func (v NullableGetWhitelist200ResponseData) Get() *GetWhitelist200ResponseData {
	return v.value
}

func (v *NullableGetWhitelist200ResponseData) Set(val *GetWhitelist200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetWhitelist200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetWhitelist200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetWhitelist200ResponseData(val *GetWhitelist200ResponseData) *NullableGetWhitelist200ResponseData {
	return &NullableGetWhitelist200ResponseData{value: val, isSet: true}
}

func (v NullableGetWhitelist200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetWhitelist200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


