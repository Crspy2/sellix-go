/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the CreatePaymentRequestCart type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreatePaymentRequestCart{}

// CreatePaymentRequestCart Other than product_id, a cart object can be specified if multiple products need to be purchased through the API.
type CreatePaymentRequestCart struct {
	Products []CreatePaymentRequestCartProductsInner `json:"products,omitempty"`
}

// NewCreatePaymentRequestCart instantiates a new CreatePaymentRequestCart object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePaymentRequestCart() *CreatePaymentRequestCart {
	this := CreatePaymentRequestCart{}
	return &this
}

// NewCreatePaymentRequestCartWithDefaults instantiates a new CreatePaymentRequestCart object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePaymentRequestCartWithDefaults() *CreatePaymentRequestCart {
	this := CreatePaymentRequestCart{}
	return &this
}

// GetProducts returns the Products field value if set, zero value otherwise.
func (o *CreatePaymentRequestCart) GetProducts() []CreatePaymentRequestCartProductsInner {
	if o == nil || IsNil(o.Products) {
		var ret []CreatePaymentRequestCartProductsInner
		return ret
	}
	return o.Products
}

// GetProductsOk returns a tuple with the Products field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentRequestCart) GetProductsOk() ([]CreatePaymentRequestCartProductsInner, bool) {
	if o == nil || IsNil(o.Products) {
		return nil, false
	}
	return o.Products, true
}

// HasProducts returns a boolean if a field has been set.
func (o *CreatePaymentRequestCart) HasProducts() bool {
	if o != nil && !IsNil(o.Products) {
		return true
	}

	return false
}

// SetProducts gets a reference to the given []CreatePaymentRequestCartProductsInner and assigns it to the Products field.
func (o *CreatePaymentRequestCart) SetProducts(v []CreatePaymentRequestCartProductsInner) {
	o.Products = v
}

func (o CreatePaymentRequestCart) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreatePaymentRequestCart) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Products) {
		toSerialize["products"] = o.Products
	}
	return toSerialize, nil
}

type NullableCreatePaymentRequestCart struct {
	value *CreatePaymentRequestCart
	isSet bool
}

func (v NullableCreatePaymentRequestCart) Get() *CreatePaymentRequestCart {
	return v.value
}

func (v *NullableCreatePaymentRequestCart) Set(val *CreatePaymentRequestCart) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePaymentRequestCart) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePaymentRequestCart) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePaymentRequestCart(val *CreatePaymentRequestCart) *NullableCreatePaymentRequestCart {
	return &NullableCreatePaymentRequestCart{value: val, isSet: true}
}

func (v NullableCreatePaymentRequestCart) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePaymentRequestCart) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


