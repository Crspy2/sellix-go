/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the LegacySubscriptionInvoice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LegacySubscriptionInvoice{}

// LegacySubscriptionInvoice struct for LegacySubscriptionInvoice
type LegacySubscriptionInvoice struct {
	// ID of the resource.
	Id *int32 `json:"id,omitempty"`
	// Unique ID of the resource, used as reference across the API.
	Uniqid *string `json:"uniqid,omitempty"`
	// The Id of the legacy subscription
	RecurringBillingId *string `json:"recurring_billing_id,omitempty"`
	// Invoice total, unit_price*quantity where quantity is applicable.
	Total *float64 `json:"total,omitempty"`
	// Invoice total in the currency chosen.
	TotalDisplay *float64 `json:"total_display,omitempty"`
	// Exchange rate between currency chosen and USD.
	ExchangeRate *float64 `json:"exchange_rate,omitempty"`
	// Exchange rate between the cryptocurrency chosen (if any) and USD.
	CryptoExchangeRate *float64 `json:"crypto_exchange_rate,omitempty"`
	Currency *Currency `json:"currency,omitempty"`
	// The shop ID to which this invoice belongs.
	ShopId *int32 `json:"shop_id,omitempty"`
	// Unique ID of the product linked to this invoice, if any.
	ProductId *string `json:"product_id,omitempty"`
	Gateway *Gateway `json:"gateway,omitempty"`
	// If gateway is PAYPAL, a paypal_apm (PayPal Alternative Payment Method) can be specified. To retrieve the available PayPal APM for a specific customer session, please refer to the PayPal SDK using window.paypal.FUNDING and fundingSource to filter out available methods. You can also use our documentation on how to process white_label payments.
	PaypalApm *string `json:"paypal_apm,omitempty"`
	// Stripe Alternative Payment Method name, such as iDEAL, used if gateway is STRIPE.
	StripeApm *string `json:"stripe_apm,omitempty"`
	// Qauntity of product purchased.
	Quantity *int32 `json:"quantity,omitempty"`
	// Unique ID of the coupon, if used, for the discount.
	CouponId *string `json:"coupon_id,omitempty"`
	// Status of the invoice.
	Status *string `json:"status,omitempty"`
	// If CART_PARTIAL_OUT_OF_STOCK, the invoice has been completed but some products in the cart were out of stock.
	StatusDetails *string `json:"status_details,omitempty"`
	// If the invoice is VOIDED and the product (or all the products in the cart) were out of stock, this additional status is set.
	VoidDetails *string `json:"void_details,omitempty"`
	// If a coupon or volume_discount is used, the discount value presents the total amount of discount over the total cost of the invoice.
	Discount *float64 `json:"discount,omitempty"`
	// Timestamp for the creation of the invoice.
	CreatedAt *int32 `json:"created_at,omitempty"`
	// Date, available if the blacklist has been edited.
	UpdatedAt *int32 `json:"updated_at,omitempty"`
	// Cryptocurrency amount converted based on crypto_exchange_rate.
	CryptoAmount *float64 `json:"crypto_amount,omitempty"`
	// Cryptocurrency amount received, paid by the customer.
	CryptoReceived *float64 `json:"crypto_received,omitempty"`
	// Crypto confirmations needed to process the invoice.
	CryptoConfirmationsNeeded *int32 `json:"crypto_confirmations_needed,omitempty"`
	// Whether the customer used a VPN or proxy when purchasing the subscription
	IsVpnOrProxy *bool `json:"is_vpn_or_proxy,omitempty"`
	// If true, this invoice has been created through the Developers API.
	DeveloperInvoice *bool `json:"developer_invoice,omitempty"`
	// If true and gateway is PAYPAL, the product will be shipped to the PayPal email on record instead of the customer email.
	PaypalEmailDelivery *bool `json:"paypal_email_delivery,omitempty"`
	// Whether or not a fee was billed to the customer
	FeeBilled *bool `json:"fee_billed,omitempty"`
	// Whether or not the payout is scheduled for the cryptocurrency
	CryptoScheduledPayout *bool `json:"crypto_scheduled_payout,omitempty"`
	// Whether or not to support credit cards on PayPal
	ShopPaypalCreditCard *bool `json:"shop_paypal_credit_card,omitempty"`
	// Whether or not to deliver the product to the PayPal email address
	ShopForcePaypalEmailDelivery *bool `json:"shop_force_paypal_email_delivery,omitempty"`
	// This field is updated after the invoice is completed with the fee taken by PayPal over the invoice total.
	PaypalFee *int32 `json:"paypal_fee,omitempty"`
	// What cut does Sellix take out of the total. To learn more about Sellix fees please refer to https://sellix.io/fees.
	FeePercentage *int32 `json:"fee_percentage,omitempty"`
	// DEPRECATED: Day value, number.
	// Deprecated
	DayValue *int32 `json:"day_value,omitempty"`
	// DEPRECATED: Year number.
	// Deprecated
	Year *int32 `json:"year,omitempty"`
	// User ID of the user who updated the invoice.
	UpdatedBy *int32 `json:"updated_by,omitempty"`
}

// NewLegacySubscriptionInvoice instantiates a new LegacySubscriptionInvoice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLegacySubscriptionInvoice() *LegacySubscriptionInvoice {
	this := LegacySubscriptionInvoice{}
	return &this
}

// NewLegacySubscriptionInvoiceWithDefaults instantiates a new LegacySubscriptionInvoice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLegacySubscriptionInvoiceWithDefaults() *LegacySubscriptionInvoice {
	this := LegacySubscriptionInvoice{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *LegacySubscriptionInvoice) SetId(v int32) {
	o.Id = &v
}

// GetUniqid returns the Uniqid field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetUniqid() string {
	if o == nil || IsNil(o.Uniqid) {
		var ret string
		return ret
	}
	return *o.Uniqid
}

// GetUniqidOk returns a tuple with the Uniqid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetUniqidOk() (*string, bool) {
	if o == nil || IsNil(o.Uniqid) {
		return nil, false
	}
	return o.Uniqid, true
}

// HasUniqid returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasUniqid() bool {
	if o != nil && !IsNil(o.Uniqid) {
		return true
	}

	return false
}

// SetUniqid gets a reference to the given string and assigns it to the Uniqid field.
func (o *LegacySubscriptionInvoice) SetUniqid(v string) {
	o.Uniqid = &v
}

// GetRecurringBillingId returns the RecurringBillingId field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetRecurringBillingId() string {
	if o == nil || IsNil(o.RecurringBillingId) {
		var ret string
		return ret
	}
	return *o.RecurringBillingId
}

// GetRecurringBillingIdOk returns a tuple with the RecurringBillingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetRecurringBillingIdOk() (*string, bool) {
	if o == nil || IsNil(o.RecurringBillingId) {
		return nil, false
	}
	return o.RecurringBillingId, true
}

// HasRecurringBillingId returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasRecurringBillingId() bool {
	if o != nil && !IsNil(o.RecurringBillingId) {
		return true
	}

	return false
}

// SetRecurringBillingId gets a reference to the given string and assigns it to the RecurringBillingId field.
func (o *LegacySubscriptionInvoice) SetRecurringBillingId(v string) {
	o.RecurringBillingId = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetTotal() float64 {
	if o == nil || IsNil(o.Total) {
		var ret float64
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetTotalOk() (*float64, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given float64 and assigns it to the Total field.
func (o *LegacySubscriptionInvoice) SetTotal(v float64) {
	o.Total = &v
}

// GetTotalDisplay returns the TotalDisplay field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetTotalDisplay() float64 {
	if o == nil || IsNil(o.TotalDisplay) {
		var ret float64
		return ret
	}
	return *o.TotalDisplay
}

// GetTotalDisplayOk returns a tuple with the TotalDisplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetTotalDisplayOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalDisplay) {
		return nil, false
	}
	return o.TotalDisplay, true
}

// HasTotalDisplay returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasTotalDisplay() bool {
	if o != nil && !IsNil(o.TotalDisplay) {
		return true
	}

	return false
}

// SetTotalDisplay gets a reference to the given float64 and assigns it to the TotalDisplay field.
func (o *LegacySubscriptionInvoice) SetTotalDisplay(v float64) {
	o.TotalDisplay = &v
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetExchangeRate() float64 {
	if o == nil || IsNil(o.ExchangeRate) {
		var ret float64
		return ret
	}
	return *o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetExchangeRateOk() (*float64, bool) {
	if o == nil || IsNil(o.ExchangeRate) {
		return nil, false
	}
	return o.ExchangeRate, true
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasExchangeRate() bool {
	if o != nil && !IsNil(o.ExchangeRate) {
		return true
	}

	return false
}

// SetExchangeRate gets a reference to the given float64 and assigns it to the ExchangeRate field.
func (o *LegacySubscriptionInvoice) SetExchangeRate(v float64) {
	o.ExchangeRate = &v
}

// GetCryptoExchangeRate returns the CryptoExchangeRate field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetCryptoExchangeRate() float64 {
	if o == nil || IsNil(o.CryptoExchangeRate) {
		var ret float64
		return ret
	}
	return *o.CryptoExchangeRate
}

// GetCryptoExchangeRateOk returns a tuple with the CryptoExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetCryptoExchangeRateOk() (*float64, bool) {
	if o == nil || IsNil(o.CryptoExchangeRate) {
		return nil, false
	}
	return o.CryptoExchangeRate, true
}

// HasCryptoExchangeRate returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasCryptoExchangeRate() bool {
	if o != nil && !IsNil(o.CryptoExchangeRate) {
		return true
	}

	return false
}

// SetCryptoExchangeRate gets a reference to the given float64 and assigns it to the CryptoExchangeRate field.
func (o *LegacySubscriptionInvoice) SetCryptoExchangeRate(v float64) {
	o.CryptoExchangeRate = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetCurrency() Currency {
	if o == nil || IsNil(o.Currency) {
		var ret Currency
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given Currency and assigns it to the Currency field.
func (o *LegacySubscriptionInvoice) SetCurrency(v Currency) {
	o.Currency = &v
}

// GetShopId returns the ShopId field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetShopId() int32 {
	if o == nil || IsNil(o.ShopId) {
		var ret int32
		return ret
	}
	return *o.ShopId
}

// GetShopIdOk returns a tuple with the ShopId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetShopIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ShopId) {
		return nil, false
	}
	return o.ShopId, true
}

// HasShopId returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasShopId() bool {
	if o != nil && !IsNil(o.ShopId) {
		return true
	}

	return false
}

// SetShopId gets a reference to the given int32 and assigns it to the ShopId field.
func (o *LegacySubscriptionInvoice) SetShopId(v int32) {
	o.ShopId = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *LegacySubscriptionInvoice) SetProductId(v string) {
	o.ProductId = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetGateway() Gateway {
	if o == nil || IsNil(o.Gateway) {
		var ret Gateway
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetGatewayOk() (*Gateway, bool) {
	if o == nil || IsNil(o.Gateway) {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasGateway() bool {
	if o != nil && !IsNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given Gateway and assigns it to the Gateway field.
func (o *LegacySubscriptionInvoice) SetGateway(v Gateway) {
	o.Gateway = &v
}

// GetPaypalApm returns the PaypalApm field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetPaypalApm() string {
	if o == nil || IsNil(o.PaypalApm) {
		var ret string
		return ret
	}
	return *o.PaypalApm
}

// GetPaypalApmOk returns a tuple with the PaypalApm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetPaypalApmOk() (*string, bool) {
	if o == nil || IsNil(o.PaypalApm) {
		return nil, false
	}
	return o.PaypalApm, true
}

// HasPaypalApm returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasPaypalApm() bool {
	if o != nil && !IsNil(o.PaypalApm) {
		return true
	}

	return false
}

// SetPaypalApm gets a reference to the given string and assigns it to the PaypalApm field.
func (o *LegacySubscriptionInvoice) SetPaypalApm(v string) {
	o.PaypalApm = &v
}

// GetStripeApm returns the StripeApm field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetStripeApm() string {
	if o == nil || IsNil(o.StripeApm) {
		var ret string
		return ret
	}
	return *o.StripeApm
}

// GetStripeApmOk returns a tuple with the StripeApm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetStripeApmOk() (*string, bool) {
	if o == nil || IsNil(o.StripeApm) {
		return nil, false
	}
	return o.StripeApm, true
}

// HasStripeApm returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasStripeApm() bool {
	if o != nil && !IsNil(o.StripeApm) {
		return true
	}

	return false
}

// SetStripeApm gets a reference to the given string and assigns it to the StripeApm field.
func (o *LegacySubscriptionInvoice) SetStripeApm(v string) {
	o.StripeApm = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *LegacySubscriptionInvoice) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetCouponId returns the CouponId field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetCouponId() string {
	if o == nil || IsNil(o.CouponId) {
		var ret string
		return ret
	}
	return *o.CouponId
}

// GetCouponIdOk returns a tuple with the CouponId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetCouponIdOk() (*string, bool) {
	if o == nil || IsNil(o.CouponId) {
		return nil, false
	}
	return o.CouponId, true
}

// HasCouponId returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasCouponId() bool {
	if o != nil && !IsNil(o.CouponId) {
		return true
	}

	return false
}

// SetCouponId gets a reference to the given string and assigns it to the CouponId field.
func (o *LegacySubscriptionInvoice) SetCouponId(v string) {
	o.CouponId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *LegacySubscriptionInvoice) SetStatus(v string) {
	o.Status = &v
}

// GetStatusDetails returns the StatusDetails field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetStatusDetails() string {
	if o == nil || IsNil(o.StatusDetails) {
		var ret string
		return ret
	}
	return *o.StatusDetails
}

// GetStatusDetailsOk returns a tuple with the StatusDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetStatusDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.StatusDetails) {
		return nil, false
	}
	return o.StatusDetails, true
}

// HasStatusDetails returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasStatusDetails() bool {
	if o != nil && !IsNil(o.StatusDetails) {
		return true
	}

	return false
}

// SetStatusDetails gets a reference to the given string and assigns it to the StatusDetails field.
func (o *LegacySubscriptionInvoice) SetStatusDetails(v string) {
	o.StatusDetails = &v
}

// GetVoidDetails returns the VoidDetails field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetVoidDetails() string {
	if o == nil || IsNil(o.VoidDetails) {
		var ret string
		return ret
	}
	return *o.VoidDetails
}

// GetVoidDetailsOk returns a tuple with the VoidDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetVoidDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.VoidDetails) {
		return nil, false
	}
	return o.VoidDetails, true
}

// HasVoidDetails returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasVoidDetails() bool {
	if o != nil && !IsNil(o.VoidDetails) {
		return true
	}

	return false
}

// SetVoidDetails gets a reference to the given string and assigns it to the VoidDetails field.
func (o *LegacySubscriptionInvoice) SetVoidDetails(v string) {
	o.VoidDetails = &v
}

// GetDiscount returns the Discount field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetDiscount() float64 {
	if o == nil || IsNil(o.Discount) {
		var ret float64
		return ret
	}
	return *o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetDiscountOk() (*float64, bool) {
	if o == nil || IsNil(o.Discount) {
		return nil, false
	}
	return o.Discount, true
}

// HasDiscount returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasDiscount() bool {
	if o != nil && !IsNil(o.Discount) {
		return true
	}

	return false
}

// SetDiscount gets a reference to the given float64 and assigns it to the Discount field.
func (o *LegacySubscriptionInvoice) SetDiscount(v float64) {
	o.Discount = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetCreatedAt() int32 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetCreatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *LegacySubscriptionInvoice) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetUpdatedAt() int32 {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *LegacySubscriptionInvoice) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

// GetCryptoAmount returns the CryptoAmount field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetCryptoAmount() float64 {
	if o == nil || IsNil(o.CryptoAmount) {
		var ret float64
		return ret
	}
	return *o.CryptoAmount
}

// GetCryptoAmountOk returns a tuple with the CryptoAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetCryptoAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CryptoAmount) {
		return nil, false
	}
	return o.CryptoAmount, true
}

// HasCryptoAmount returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasCryptoAmount() bool {
	if o != nil && !IsNil(o.CryptoAmount) {
		return true
	}

	return false
}

// SetCryptoAmount gets a reference to the given float64 and assigns it to the CryptoAmount field.
func (o *LegacySubscriptionInvoice) SetCryptoAmount(v float64) {
	o.CryptoAmount = &v
}

// GetCryptoReceived returns the CryptoReceived field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetCryptoReceived() float64 {
	if o == nil || IsNil(o.CryptoReceived) {
		var ret float64
		return ret
	}
	return *o.CryptoReceived
}

// GetCryptoReceivedOk returns a tuple with the CryptoReceived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetCryptoReceivedOk() (*float64, bool) {
	if o == nil || IsNil(o.CryptoReceived) {
		return nil, false
	}
	return o.CryptoReceived, true
}

// HasCryptoReceived returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasCryptoReceived() bool {
	if o != nil && !IsNil(o.CryptoReceived) {
		return true
	}

	return false
}

// SetCryptoReceived gets a reference to the given float64 and assigns it to the CryptoReceived field.
func (o *LegacySubscriptionInvoice) SetCryptoReceived(v float64) {
	o.CryptoReceived = &v
}

// GetCryptoConfirmationsNeeded returns the CryptoConfirmationsNeeded field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetCryptoConfirmationsNeeded() int32 {
	if o == nil || IsNil(o.CryptoConfirmationsNeeded) {
		var ret int32
		return ret
	}
	return *o.CryptoConfirmationsNeeded
}

// GetCryptoConfirmationsNeededOk returns a tuple with the CryptoConfirmationsNeeded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetCryptoConfirmationsNeededOk() (*int32, bool) {
	if o == nil || IsNil(o.CryptoConfirmationsNeeded) {
		return nil, false
	}
	return o.CryptoConfirmationsNeeded, true
}

// HasCryptoConfirmationsNeeded returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasCryptoConfirmationsNeeded() bool {
	if o != nil && !IsNil(o.CryptoConfirmationsNeeded) {
		return true
	}

	return false
}

// SetCryptoConfirmationsNeeded gets a reference to the given int32 and assigns it to the CryptoConfirmationsNeeded field.
func (o *LegacySubscriptionInvoice) SetCryptoConfirmationsNeeded(v int32) {
	o.CryptoConfirmationsNeeded = &v
}

// GetIsVpnOrProxy returns the IsVpnOrProxy field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetIsVpnOrProxy() bool {
	if o == nil || IsNil(o.IsVpnOrProxy) {
		var ret bool
		return ret
	}
	return *o.IsVpnOrProxy
}

// GetIsVpnOrProxyOk returns a tuple with the IsVpnOrProxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetIsVpnOrProxyOk() (*bool, bool) {
	if o == nil || IsNil(o.IsVpnOrProxy) {
		return nil, false
	}
	return o.IsVpnOrProxy, true
}

// HasIsVpnOrProxy returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasIsVpnOrProxy() bool {
	if o != nil && !IsNil(o.IsVpnOrProxy) {
		return true
	}

	return false
}

// SetIsVpnOrProxy gets a reference to the given bool and assigns it to the IsVpnOrProxy field.
func (o *LegacySubscriptionInvoice) SetIsVpnOrProxy(v bool) {
	o.IsVpnOrProxy = &v
}

// GetDeveloperInvoice returns the DeveloperInvoice field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetDeveloperInvoice() bool {
	if o == nil || IsNil(o.DeveloperInvoice) {
		var ret bool
		return ret
	}
	return *o.DeveloperInvoice
}

// GetDeveloperInvoiceOk returns a tuple with the DeveloperInvoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetDeveloperInvoiceOk() (*bool, bool) {
	if o == nil || IsNil(o.DeveloperInvoice) {
		return nil, false
	}
	return o.DeveloperInvoice, true
}

// HasDeveloperInvoice returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasDeveloperInvoice() bool {
	if o != nil && !IsNil(o.DeveloperInvoice) {
		return true
	}

	return false
}

// SetDeveloperInvoice gets a reference to the given bool and assigns it to the DeveloperInvoice field.
func (o *LegacySubscriptionInvoice) SetDeveloperInvoice(v bool) {
	o.DeveloperInvoice = &v
}

// GetPaypalEmailDelivery returns the PaypalEmailDelivery field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetPaypalEmailDelivery() bool {
	if o == nil || IsNil(o.PaypalEmailDelivery) {
		var ret bool
		return ret
	}
	return *o.PaypalEmailDelivery
}

// GetPaypalEmailDeliveryOk returns a tuple with the PaypalEmailDelivery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetPaypalEmailDeliveryOk() (*bool, bool) {
	if o == nil || IsNil(o.PaypalEmailDelivery) {
		return nil, false
	}
	return o.PaypalEmailDelivery, true
}

// HasPaypalEmailDelivery returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasPaypalEmailDelivery() bool {
	if o != nil && !IsNil(o.PaypalEmailDelivery) {
		return true
	}

	return false
}

// SetPaypalEmailDelivery gets a reference to the given bool and assigns it to the PaypalEmailDelivery field.
func (o *LegacySubscriptionInvoice) SetPaypalEmailDelivery(v bool) {
	o.PaypalEmailDelivery = &v
}

// GetFeeBilled returns the FeeBilled field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetFeeBilled() bool {
	if o == nil || IsNil(o.FeeBilled) {
		var ret bool
		return ret
	}
	return *o.FeeBilled
}

// GetFeeBilledOk returns a tuple with the FeeBilled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetFeeBilledOk() (*bool, bool) {
	if o == nil || IsNil(o.FeeBilled) {
		return nil, false
	}
	return o.FeeBilled, true
}

// HasFeeBilled returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasFeeBilled() bool {
	if o != nil && !IsNil(o.FeeBilled) {
		return true
	}

	return false
}

// SetFeeBilled gets a reference to the given bool and assigns it to the FeeBilled field.
func (o *LegacySubscriptionInvoice) SetFeeBilled(v bool) {
	o.FeeBilled = &v
}

// GetCryptoScheduledPayout returns the CryptoScheduledPayout field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetCryptoScheduledPayout() bool {
	if o == nil || IsNil(o.CryptoScheduledPayout) {
		var ret bool
		return ret
	}
	return *o.CryptoScheduledPayout
}

// GetCryptoScheduledPayoutOk returns a tuple with the CryptoScheduledPayout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetCryptoScheduledPayoutOk() (*bool, bool) {
	if o == nil || IsNil(o.CryptoScheduledPayout) {
		return nil, false
	}
	return o.CryptoScheduledPayout, true
}

// HasCryptoScheduledPayout returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasCryptoScheduledPayout() bool {
	if o != nil && !IsNil(o.CryptoScheduledPayout) {
		return true
	}

	return false
}

// SetCryptoScheduledPayout gets a reference to the given bool and assigns it to the CryptoScheduledPayout field.
func (o *LegacySubscriptionInvoice) SetCryptoScheduledPayout(v bool) {
	o.CryptoScheduledPayout = &v
}

// GetShopPaypalCreditCard returns the ShopPaypalCreditCard field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetShopPaypalCreditCard() bool {
	if o == nil || IsNil(o.ShopPaypalCreditCard) {
		var ret bool
		return ret
	}
	return *o.ShopPaypalCreditCard
}

// GetShopPaypalCreditCardOk returns a tuple with the ShopPaypalCreditCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetShopPaypalCreditCardOk() (*bool, bool) {
	if o == nil || IsNil(o.ShopPaypalCreditCard) {
		return nil, false
	}
	return o.ShopPaypalCreditCard, true
}

// HasShopPaypalCreditCard returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasShopPaypalCreditCard() bool {
	if o != nil && !IsNil(o.ShopPaypalCreditCard) {
		return true
	}

	return false
}

// SetShopPaypalCreditCard gets a reference to the given bool and assigns it to the ShopPaypalCreditCard field.
func (o *LegacySubscriptionInvoice) SetShopPaypalCreditCard(v bool) {
	o.ShopPaypalCreditCard = &v
}

// GetShopForcePaypalEmailDelivery returns the ShopForcePaypalEmailDelivery field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetShopForcePaypalEmailDelivery() bool {
	if o == nil || IsNil(o.ShopForcePaypalEmailDelivery) {
		var ret bool
		return ret
	}
	return *o.ShopForcePaypalEmailDelivery
}

// GetShopForcePaypalEmailDeliveryOk returns a tuple with the ShopForcePaypalEmailDelivery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetShopForcePaypalEmailDeliveryOk() (*bool, bool) {
	if o == nil || IsNil(o.ShopForcePaypalEmailDelivery) {
		return nil, false
	}
	return o.ShopForcePaypalEmailDelivery, true
}

// HasShopForcePaypalEmailDelivery returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasShopForcePaypalEmailDelivery() bool {
	if o != nil && !IsNil(o.ShopForcePaypalEmailDelivery) {
		return true
	}

	return false
}

// SetShopForcePaypalEmailDelivery gets a reference to the given bool and assigns it to the ShopForcePaypalEmailDelivery field.
func (o *LegacySubscriptionInvoice) SetShopForcePaypalEmailDelivery(v bool) {
	o.ShopForcePaypalEmailDelivery = &v
}

// GetPaypalFee returns the PaypalFee field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetPaypalFee() int32 {
	if o == nil || IsNil(o.PaypalFee) {
		var ret int32
		return ret
	}
	return *o.PaypalFee
}

// GetPaypalFeeOk returns a tuple with the PaypalFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetPaypalFeeOk() (*int32, bool) {
	if o == nil || IsNil(o.PaypalFee) {
		return nil, false
	}
	return o.PaypalFee, true
}

// HasPaypalFee returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasPaypalFee() bool {
	if o != nil && !IsNil(o.PaypalFee) {
		return true
	}

	return false
}

// SetPaypalFee gets a reference to the given int32 and assigns it to the PaypalFee field.
func (o *LegacySubscriptionInvoice) SetPaypalFee(v int32) {
	o.PaypalFee = &v
}

// GetFeePercentage returns the FeePercentage field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetFeePercentage() int32 {
	if o == nil || IsNil(o.FeePercentage) {
		var ret int32
		return ret
	}
	return *o.FeePercentage
}

// GetFeePercentageOk returns a tuple with the FeePercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetFeePercentageOk() (*int32, bool) {
	if o == nil || IsNil(o.FeePercentage) {
		return nil, false
	}
	return o.FeePercentage, true
}

// HasFeePercentage returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasFeePercentage() bool {
	if o != nil && !IsNil(o.FeePercentage) {
		return true
	}

	return false
}

// SetFeePercentage gets a reference to the given int32 and assigns it to the FeePercentage field.
func (o *LegacySubscriptionInvoice) SetFeePercentage(v int32) {
	o.FeePercentage = &v
}

// GetDayValue returns the DayValue field value if set, zero value otherwise.
// Deprecated
func (o *LegacySubscriptionInvoice) GetDayValue() int32 {
	if o == nil || IsNil(o.DayValue) {
		var ret int32
		return ret
	}
	return *o.DayValue
}

// GetDayValueOk returns a tuple with the DayValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *LegacySubscriptionInvoice) GetDayValueOk() (*int32, bool) {
	if o == nil || IsNil(o.DayValue) {
		return nil, false
	}
	return o.DayValue, true
}

// HasDayValue returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasDayValue() bool {
	if o != nil && !IsNil(o.DayValue) {
		return true
	}

	return false
}

// SetDayValue gets a reference to the given int32 and assigns it to the DayValue field.
// Deprecated
func (o *LegacySubscriptionInvoice) SetDayValue(v int32) {
	o.DayValue = &v
}

// GetYear returns the Year field value if set, zero value otherwise.
// Deprecated
func (o *LegacySubscriptionInvoice) GetYear() int32 {
	if o == nil || IsNil(o.Year) {
		var ret int32
		return ret
	}
	return *o.Year
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *LegacySubscriptionInvoice) GetYearOk() (*int32, bool) {
	if o == nil || IsNil(o.Year) {
		return nil, false
	}
	return o.Year, true
}

// HasYear returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasYear() bool {
	if o != nil && !IsNil(o.Year) {
		return true
	}

	return false
}

// SetYear gets a reference to the given int32 and assigns it to the Year field.
// Deprecated
func (o *LegacySubscriptionInvoice) SetYear(v int32) {
	o.Year = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *LegacySubscriptionInvoice) GetUpdatedBy() int32 {
	if o == nil || IsNil(o.UpdatedBy) {
		var ret int32
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacySubscriptionInvoice) GetUpdatedByOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdatedBy) {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *LegacySubscriptionInvoice) HasUpdatedBy() bool {
	if o != nil && !IsNil(o.UpdatedBy) {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given int32 and assigns it to the UpdatedBy field.
func (o *LegacySubscriptionInvoice) SetUpdatedBy(v int32) {
	o.UpdatedBy = &v
}

func (o LegacySubscriptionInvoice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LegacySubscriptionInvoice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Uniqid) {
		toSerialize["uniqid"] = o.Uniqid
	}
	if !IsNil(o.RecurringBillingId) {
		toSerialize["recurring_billing_id"] = o.RecurringBillingId
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.TotalDisplay) {
		toSerialize["total_display"] = o.TotalDisplay
	}
	if !IsNil(o.ExchangeRate) {
		toSerialize["exchange_rate"] = o.ExchangeRate
	}
	if !IsNil(o.CryptoExchangeRate) {
		toSerialize["crypto_exchange_rate"] = o.CryptoExchangeRate
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.ShopId) {
		toSerialize["shop_id"] = o.ShopId
	}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	if !IsNil(o.PaypalApm) {
		toSerialize["paypal_apm"] = o.PaypalApm
	}
	if !IsNil(o.StripeApm) {
		toSerialize["stripe_apm"] = o.StripeApm
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.CouponId) {
		toSerialize["coupon_id"] = o.CouponId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusDetails) {
		toSerialize["status_details"] = o.StatusDetails
	}
	if !IsNil(o.VoidDetails) {
		toSerialize["void_details"] = o.VoidDetails
	}
	if !IsNil(o.Discount) {
		toSerialize["discount"] = o.Discount
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.CryptoAmount) {
		toSerialize["crypto_amount"] = o.CryptoAmount
	}
	if !IsNil(o.CryptoReceived) {
		toSerialize["crypto_received"] = o.CryptoReceived
	}
	if !IsNil(o.CryptoConfirmationsNeeded) {
		toSerialize["crypto_confirmations_needed"] = o.CryptoConfirmationsNeeded
	}
	if !IsNil(o.IsVpnOrProxy) {
		toSerialize["is_vpn_or_proxy"] = o.IsVpnOrProxy
	}
	if !IsNil(o.DeveloperInvoice) {
		toSerialize["developer_invoice"] = o.DeveloperInvoice
	}
	if !IsNil(o.PaypalEmailDelivery) {
		toSerialize["paypal_email_delivery"] = o.PaypalEmailDelivery
	}
	if !IsNil(o.FeeBilled) {
		toSerialize["fee_billed"] = o.FeeBilled
	}
	if !IsNil(o.CryptoScheduledPayout) {
		toSerialize["crypto_scheduled_payout"] = o.CryptoScheduledPayout
	}
	if !IsNil(o.ShopPaypalCreditCard) {
		toSerialize["shop_paypal_credit_card"] = o.ShopPaypalCreditCard
	}
	if !IsNil(o.ShopForcePaypalEmailDelivery) {
		toSerialize["shop_force_paypal_email_delivery"] = o.ShopForcePaypalEmailDelivery
	}
	if !IsNil(o.PaypalFee) {
		toSerialize["paypal_fee"] = o.PaypalFee
	}
	if !IsNil(o.FeePercentage) {
		toSerialize["fee_percentage"] = o.FeePercentage
	}
	if !IsNil(o.DayValue) {
		toSerialize["day_value"] = o.DayValue
	}
	if !IsNil(o.Year) {
		toSerialize["year"] = o.Year
	}
	if !IsNil(o.UpdatedBy) {
		toSerialize["updated_by"] = o.UpdatedBy
	}
	return toSerialize, nil
}

type NullableLegacySubscriptionInvoice struct {
	value *LegacySubscriptionInvoice
	isSet bool
}

func (v NullableLegacySubscriptionInvoice) Get() *LegacySubscriptionInvoice {
	return v.value
}

func (v *NullableLegacySubscriptionInvoice) Set(val *LegacySubscriptionInvoice) {
	v.value = val
	v.isSet = true
}

func (v NullableLegacySubscriptionInvoice) IsSet() bool {
	return v.isSet
}

func (v *NullableLegacySubscriptionInvoice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLegacySubscriptionInvoice(val *LegacySubscriptionInvoice) *NullableLegacySubscriptionInvoice {
	return &NullableLegacySubscriptionInvoice{value: val, isSet: true}
}

func (v NullableLegacySubscriptionInvoice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLegacySubscriptionInvoice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


