/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ProductPlanSubscription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductPlanSubscription{}

// ProductPlanSubscription struct for ProductPlanSubscription
type ProductPlanSubscription struct {
	// The internal shop ID to which this resource belongs.
	ShopId *int32 `json:"shop_id,omitempty"`
	// The ID of the customer who purchased the subscription plan
	CustomerId *string `json:"customer_id,omitempty"`
	// The unique ID of the subscription plan
	ProductSubscriptionUniqid *string `json:"product_subscription_uniqid,omitempty"`
	// The internal ID of the subscription product
	ProductId *int32 `json:"product_id,omitempty"`
	// The external ID of the subscription product
	ProductUniqid *string `json:"product_uniqid,omitempty"`
	// The external ID of the subscription product plan
	ProductPlanUniqid *string `json:"product_plan_uniqid,omitempty"`
	// The internal ID of the subscription plan
	Id *int32 `json:"id,omitempty"`
	// The unique ID of the subscription plan
	Uniqid *string `json:"uniqid,omitempty"`
	// The internal ID of the product subscription
	ProductSubscriptionId *int32 `json:"product_subscription_id,omitempty"`
	// The internal ID of the product plan
	ProductPlanId *int32 `json:"product_plan_id,omitempty"`
	// The internal ID of the payment interval
	PaymentIntervalId *int32 `json:"payment_interval_id,omitempty"`
	// The status of the subscription
	Status *string `json:"status,omitempty"`
	// The date-time object of the subscription start date
	StartDate *time.Time `json:"start_date,omitempty"`
	// The date-time object of the subscription end date
	EndDate *time.Time `json:"end_date,omitempty"`
	// The internal ID of the payment method
	PaymentMethodId *int32 `json:"payment_method_id,omitempty"`
	// How the invoice was created
	Origin *string `json:"origin,omitempty"`
	Gateway *Gateway `json:"gateway,omitempty"`
	Currency *Currency `json:"currency,omitempty"`
	Blockchain *Blockchain `json:"blockchain,omitempty"`
	// PayPal Alternative Payment Method name, such as iDEAL, used if gateway is PAYPAL.
	PaypalApm *string `json:"paypal_apm,omitempty"`
	// Whether or not the invoices will be sent to PayPal email
	PaypalEmailDelivery *bool `json:"paypal_email_delivery,omitempty"`
	// Stripe Alternative Payment Method name, such as iDEAL, used if gateway is STRIPE.
	StripeApm *string `json:"stripe_apm,omitempty"`
	// DEPRECATED: If gateway is LEX_HOLDINGS_GROUP, method to be used for the customer to pay.
	// Deprecated
	LexPaymentMethod *string `json:"lex_payment_method,omitempty"`
	// If a coupon has been applied, its ID.
	CouponId *string `json:"coupon_id,omitempty"`
	ProductAddons *map[string]string `json:"product_addons,omitempty"`
	// key-value JSON having as key the custom field name and as value the custom field value inserted by the customer. Custom fields can both be used as inputs from the customers but also as metadata for invoices, letting you pass hidden fields for internal referencing.
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	// If true, this invoice has been created through the Developers API.
	DeveloperInvoice *bool `json:"developer_invoice,omitempty"`
	// If a product_id is not passed through the Developers API, a title must be specified.
	DeveloperTitle *string `json:"developer_title,omitempty"`
	// Additional webhook URL to which updates regarding this invoice will be sent.
	DeveloperWebhook *string `json:"developer_webhook,omitempty"`
	// If present, the customer will be redirected to this URL after the invoice has been paid.
	DeveloperReturnUrl *string `json:"developer_return_url,omitempty"`
	// Whether or not the invoice has received developer confirmation
	DeveloperConfirmations *bool `json:"developer_confirmations,omitempty"`
	// Arbitraty value set for development
	DeveloperValue *int32 `json:"developer_value,omitempty"`
	// Identifier for the payment link used to pay this invoice.
	PaymentLinkId *string `json:"payment_link_id,omitempty"`
	// Whether or not the purchase was made in a Sellixmarketplace
	IsMarketplace *bool `json:"is_marketplace,omitempty"`
	PayoutConfirmation map[string]interface{} `json:"payout_confirmation,omitempty"`
	// Comma separated list of gateways accepted for this invoice.
	GatewaysAccepted *string `json:"gateways_accepted,omitempty"`
	TaxData *ProductPlanSubscriptionTaxData `json:"tax_data,omitempty"`
	// ID of the discord account linked to the purchase at checkout
	DiscordId *string `json:"discord_id,omitempty"`
	// Oauth access token for the linked discord account
	DiscordCustomerToken *string `json:"discord_customer_token,omitempty"`
	// Oauth refresh token used to extend access to the linked discord account
	DiscordCustomerRefreshToken *string `json:"discord_customer_refresh_token,omitempty"`
	// Expiration timestamp for the discord customer oauth access
	DiscordCustomerTokenExpiresAt *int32 `json:"discord_customer_token_expires_at,omitempty"`
	// Whether or not the discord integration for the product has been removed
	DiscordIntegrationRemoved *bool `json:"discord_integration_removed,omitempty"`
	// ID of the telegram account linked to the purchase at checkout
	TelegramUserId *string `json:"telegram_user_id,omitempty"`
	// ID of the telegram group the account should be added to after payment confirmation
	TelegramGroupId *string `json:"telegram_group_id,omitempty"`
	// Whether or not the telegram integration for the product has been removed
	TelegramIntegrationRemoved *bool `json:"telegram_integration_removed,omitempty"`
	// The ID fo the customer who receives affiliate revenue from this purchase
	AffiliateRevenueCustomerId *string `json:"affiliate_revenue_customer_id,omitempty"`
	// The amount of affiliate revenue used
	AffiliateRevenueUsed *int32 `json:"affiliate_revenue_used,omitempty"`
	AffilitaeRevenueUsedCurrency *Currency `json:"affilitae_revenue_used_currency,omitempty"`
	// The type of affiliate revenue used
	AffiliateRevenueUsedType *string `json:"affiliate_revenue_used_type,omitempty"`
	// Whether or not the subscription's start has been processed
	StartEventProcessed *bool `json:"start_event_processed,omitempty"`
	// Whether or not the subscription's expiration event has been triggered
	EndEventProcessed *bool `json:"end_event_processed,omitempty"`
	// Timestamp for the creation of the query.
	CreatedAt *int32 `json:"created_at,omitempty"`
	// Date, available if the query has been updated.
	UpdatedAt *int32 `json:"updated_at,omitempty"`
	Intervals []PaymentInterval `json:"intervals,omitempty"`
	// The stock of the subscription plan
	Stock *int32 `json:"stock,omitempty"`
	// The price of the subscription plan
	Price *float32 `json:"price,omitempty"`
	// The default discount applied to this plan
	PriceDiscount *float32 `json:"price_discount,omitempty"`
	// Whether a trial period is enabled for the subscription plan.
	TrialPeriod *int32 `json:"trial_period,omitempty"`
	// How many intervals should pass before the customer is invoiced
	RecurringIntervalCount *int32 `json:"recurring_interval_count,omitempty"`
}

// NewProductPlanSubscription instantiates a new ProductPlanSubscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductPlanSubscription() *ProductPlanSubscription {
	this := ProductPlanSubscription{}
	return &this
}

// NewProductPlanSubscriptionWithDefaults instantiates a new ProductPlanSubscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductPlanSubscriptionWithDefaults() *ProductPlanSubscription {
	this := ProductPlanSubscription{}
	return &this
}

// GetShopId returns the ShopId field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetShopId() int32 {
	if o == nil || IsNil(o.ShopId) {
		var ret int32
		return ret
	}
	return *o.ShopId
}

// GetShopIdOk returns a tuple with the ShopId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetShopIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ShopId) {
		return nil, false
	}
	return o.ShopId, true
}

// HasShopId returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasShopId() bool {
	if o != nil && !IsNil(o.ShopId) {
		return true
	}

	return false
}

// SetShopId gets a reference to the given int32 and assigns it to the ShopId field.
func (o *ProductPlanSubscription) SetShopId(v int32) {
	o.ShopId = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId) {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *ProductPlanSubscription) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetProductSubscriptionUniqid returns the ProductSubscriptionUniqid field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetProductSubscriptionUniqid() string {
	if o == nil || IsNil(o.ProductSubscriptionUniqid) {
		var ret string
		return ret
	}
	return *o.ProductSubscriptionUniqid
}

// GetProductSubscriptionUniqidOk returns a tuple with the ProductSubscriptionUniqid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetProductSubscriptionUniqidOk() (*string, bool) {
	if o == nil || IsNil(o.ProductSubscriptionUniqid) {
		return nil, false
	}
	return o.ProductSubscriptionUniqid, true
}

// HasProductSubscriptionUniqid returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasProductSubscriptionUniqid() bool {
	if o != nil && !IsNil(o.ProductSubscriptionUniqid) {
		return true
	}

	return false
}

// SetProductSubscriptionUniqid gets a reference to the given string and assigns it to the ProductSubscriptionUniqid field.
func (o *ProductPlanSubscription) SetProductSubscriptionUniqid(v string) {
	o.ProductSubscriptionUniqid = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetProductId() int32 {
	if o == nil || IsNil(o.ProductId) {
		var ret int32
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetProductIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given int32 and assigns it to the ProductId field.
func (o *ProductPlanSubscription) SetProductId(v int32) {
	o.ProductId = &v
}

// GetProductUniqid returns the ProductUniqid field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetProductUniqid() string {
	if o == nil || IsNil(o.ProductUniqid) {
		var ret string
		return ret
	}
	return *o.ProductUniqid
}

// GetProductUniqidOk returns a tuple with the ProductUniqid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetProductUniqidOk() (*string, bool) {
	if o == nil || IsNil(o.ProductUniqid) {
		return nil, false
	}
	return o.ProductUniqid, true
}

// HasProductUniqid returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasProductUniqid() bool {
	if o != nil && !IsNil(o.ProductUniqid) {
		return true
	}

	return false
}

// SetProductUniqid gets a reference to the given string and assigns it to the ProductUniqid field.
func (o *ProductPlanSubscription) SetProductUniqid(v string) {
	o.ProductUniqid = &v
}

// GetProductPlanUniqid returns the ProductPlanUniqid field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetProductPlanUniqid() string {
	if o == nil || IsNil(o.ProductPlanUniqid) {
		var ret string
		return ret
	}
	return *o.ProductPlanUniqid
}

// GetProductPlanUniqidOk returns a tuple with the ProductPlanUniqid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetProductPlanUniqidOk() (*string, bool) {
	if o == nil || IsNil(o.ProductPlanUniqid) {
		return nil, false
	}
	return o.ProductPlanUniqid, true
}

// HasProductPlanUniqid returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasProductPlanUniqid() bool {
	if o != nil && !IsNil(o.ProductPlanUniqid) {
		return true
	}

	return false
}

// SetProductPlanUniqid gets a reference to the given string and assigns it to the ProductPlanUniqid field.
func (o *ProductPlanSubscription) SetProductPlanUniqid(v string) {
	o.ProductPlanUniqid = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ProductPlanSubscription) SetId(v int32) {
	o.Id = &v
}

// GetUniqid returns the Uniqid field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetUniqid() string {
	if o == nil || IsNil(o.Uniqid) {
		var ret string
		return ret
	}
	return *o.Uniqid
}

// GetUniqidOk returns a tuple with the Uniqid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetUniqidOk() (*string, bool) {
	if o == nil || IsNil(o.Uniqid) {
		return nil, false
	}
	return o.Uniqid, true
}

// HasUniqid returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasUniqid() bool {
	if o != nil && !IsNil(o.Uniqid) {
		return true
	}

	return false
}

// SetUniqid gets a reference to the given string and assigns it to the Uniqid field.
func (o *ProductPlanSubscription) SetUniqid(v string) {
	o.Uniqid = &v
}

// GetProductSubscriptionId returns the ProductSubscriptionId field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetProductSubscriptionId() int32 {
	if o == nil || IsNil(o.ProductSubscriptionId) {
		var ret int32
		return ret
	}
	return *o.ProductSubscriptionId
}

// GetProductSubscriptionIdOk returns a tuple with the ProductSubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetProductSubscriptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProductSubscriptionId) {
		return nil, false
	}
	return o.ProductSubscriptionId, true
}

// HasProductSubscriptionId returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasProductSubscriptionId() bool {
	if o != nil && !IsNil(o.ProductSubscriptionId) {
		return true
	}

	return false
}

// SetProductSubscriptionId gets a reference to the given int32 and assigns it to the ProductSubscriptionId field.
func (o *ProductPlanSubscription) SetProductSubscriptionId(v int32) {
	o.ProductSubscriptionId = &v
}

// GetProductPlanId returns the ProductPlanId field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetProductPlanId() int32 {
	if o == nil || IsNil(o.ProductPlanId) {
		var ret int32
		return ret
	}
	return *o.ProductPlanId
}

// GetProductPlanIdOk returns a tuple with the ProductPlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetProductPlanIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProductPlanId) {
		return nil, false
	}
	return o.ProductPlanId, true
}

// HasProductPlanId returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasProductPlanId() bool {
	if o != nil && !IsNil(o.ProductPlanId) {
		return true
	}

	return false
}

// SetProductPlanId gets a reference to the given int32 and assigns it to the ProductPlanId field.
func (o *ProductPlanSubscription) SetProductPlanId(v int32) {
	o.ProductPlanId = &v
}

// GetPaymentIntervalId returns the PaymentIntervalId field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetPaymentIntervalId() int32 {
	if o == nil || IsNil(o.PaymentIntervalId) {
		var ret int32
		return ret
	}
	return *o.PaymentIntervalId
}

// GetPaymentIntervalIdOk returns a tuple with the PaymentIntervalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetPaymentIntervalIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PaymentIntervalId) {
		return nil, false
	}
	return o.PaymentIntervalId, true
}

// HasPaymentIntervalId returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasPaymentIntervalId() bool {
	if o != nil && !IsNil(o.PaymentIntervalId) {
		return true
	}

	return false
}

// SetPaymentIntervalId gets a reference to the given int32 and assigns it to the PaymentIntervalId field.
func (o *ProductPlanSubscription) SetPaymentIntervalId(v int32) {
	o.PaymentIntervalId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ProductPlanSubscription) SetStatus(v string) {
	o.Status = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *ProductPlanSubscription) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *ProductPlanSubscription) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetPaymentMethodId returns the PaymentMethodId field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetPaymentMethodId() int32 {
	if o == nil || IsNil(o.PaymentMethodId) {
		var ret int32
		return ret
	}
	return *o.PaymentMethodId
}

// GetPaymentMethodIdOk returns a tuple with the PaymentMethodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetPaymentMethodIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PaymentMethodId) {
		return nil, false
	}
	return o.PaymentMethodId, true
}

// HasPaymentMethodId returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasPaymentMethodId() bool {
	if o != nil && !IsNil(o.PaymentMethodId) {
		return true
	}

	return false
}

// SetPaymentMethodId gets a reference to the given int32 and assigns it to the PaymentMethodId field.
func (o *ProductPlanSubscription) SetPaymentMethodId(v int32) {
	o.PaymentMethodId = &v
}

// GetOrigin returns the Origin field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetOrigin() string {
	if o == nil || IsNil(o.Origin) {
		var ret string
		return ret
	}
	return *o.Origin
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetOriginOk() (*string, bool) {
	if o == nil || IsNil(o.Origin) {
		return nil, false
	}
	return o.Origin, true
}

// HasOrigin returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasOrigin() bool {
	if o != nil && !IsNil(o.Origin) {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given string and assigns it to the Origin field.
func (o *ProductPlanSubscription) SetOrigin(v string) {
	o.Origin = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetGateway() Gateway {
	if o == nil || IsNil(o.Gateway) {
		var ret Gateway
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetGatewayOk() (*Gateway, bool) {
	if o == nil || IsNil(o.Gateway) {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasGateway() bool {
	if o != nil && !IsNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given Gateway and assigns it to the Gateway field.
func (o *ProductPlanSubscription) SetGateway(v Gateway) {
	o.Gateway = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetCurrency() Currency {
	if o == nil || IsNil(o.Currency) {
		var ret Currency
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given Currency and assigns it to the Currency field.
func (o *ProductPlanSubscription) SetCurrency(v Currency) {
	o.Currency = &v
}

// GetBlockchain returns the Blockchain field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetBlockchain() Blockchain {
	if o == nil || IsNil(o.Blockchain) {
		var ret Blockchain
		return ret
	}
	return *o.Blockchain
}

// GetBlockchainOk returns a tuple with the Blockchain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetBlockchainOk() (*Blockchain, bool) {
	if o == nil || IsNil(o.Blockchain) {
		return nil, false
	}
	return o.Blockchain, true
}

// HasBlockchain returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasBlockchain() bool {
	if o != nil && !IsNil(o.Blockchain) {
		return true
	}

	return false
}

// SetBlockchain gets a reference to the given Blockchain and assigns it to the Blockchain field.
func (o *ProductPlanSubscription) SetBlockchain(v Blockchain) {
	o.Blockchain = &v
}

// GetPaypalApm returns the PaypalApm field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetPaypalApm() string {
	if o == nil || IsNil(o.PaypalApm) {
		var ret string
		return ret
	}
	return *o.PaypalApm
}

// GetPaypalApmOk returns a tuple with the PaypalApm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetPaypalApmOk() (*string, bool) {
	if o == nil || IsNil(o.PaypalApm) {
		return nil, false
	}
	return o.PaypalApm, true
}

// HasPaypalApm returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasPaypalApm() bool {
	if o != nil && !IsNil(o.PaypalApm) {
		return true
	}

	return false
}

// SetPaypalApm gets a reference to the given string and assigns it to the PaypalApm field.
func (o *ProductPlanSubscription) SetPaypalApm(v string) {
	o.PaypalApm = &v
}

// GetPaypalEmailDelivery returns the PaypalEmailDelivery field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetPaypalEmailDelivery() bool {
	if o == nil || IsNil(o.PaypalEmailDelivery) {
		var ret bool
		return ret
	}
	return *o.PaypalEmailDelivery
}

// GetPaypalEmailDeliveryOk returns a tuple with the PaypalEmailDelivery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetPaypalEmailDeliveryOk() (*bool, bool) {
	if o == nil || IsNil(o.PaypalEmailDelivery) {
		return nil, false
	}
	return o.PaypalEmailDelivery, true
}

// HasPaypalEmailDelivery returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasPaypalEmailDelivery() bool {
	if o != nil && !IsNil(o.PaypalEmailDelivery) {
		return true
	}

	return false
}

// SetPaypalEmailDelivery gets a reference to the given bool and assigns it to the PaypalEmailDelivery field.
func (o *ProductPlanSubscription) SetPaypalEmailDelivery(v bool) {
	o.PaypalEmailDelivery = &v
}

// GetStripeApm returns the StripeApm field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetStripeApm() string {
	if o == nil || IsNil(o.StripeApm) {
		var ret string
		return ret
	}
	return *o.StripeApm
}

// GetStripeApmOk returns a tuple with the StripeApm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetStripeApmOk() (*string, bool) {
	if o == nil || IsNil(o.StripeApm) {
		return nil, false
	}
	return o.StripeApm, true
}

// HasStripeApm returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasStripeApm() bool {
	if o != nil && !IsNil(o.StripeApm) {
		return true
	}

	return false
}

// SetStripeApm gets a reference to the given string and assigns it to the StripeApm field.
func (o *ProductPlanSubscription) SetStripeApm(v string) {
	o.StripeApm = &v
}

// GetLexPaymentMethod returns the LexPaymentMethod field value if set, zero value otherwise.
// Deprecated
func (o *ProductPlanSubscription) GetLexPaymentMethod() string {
	if o == nil || IsNil(o.LexPaymentMethod) {
		var ret string
		return ret
	}
	return *o.LexPaymentMethod
}

// GetLexPaymentMethodOk returns a tuple with the LexPaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ProductPlanSubscription) GetLexPaymentMethodOk() (*string, bool) {
	if o == nil || IsNil(o.LexPaymentMethod) {
		return nil, false
	}
	return o.LexPaymentMethod, true
}

// HasLexPaymentMethod returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasLexPaymentMethod() bool {
	if o != nil && !IsNil(o.LexPaymentMethod) {
		return true
	}

	return false
}

// SetLexPaymentMethod gets a reference to the given string and assigns it to the LexPaymentMethod field.
// Deprecated
func (o *ProductPlanSubscription) SetLexPaymentMethod(v string) {
	o.LexPaymentMethod = &v
}

// GetCouponId returns the CouponId field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetCouponId() string {
	if o == nil || IsNil(o.CouponId) {
		var ret string
		return ret
	}
	return *o.CouponId
}

// GetCouponIdOk returns a tuple with the CouponId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetCouponIdOk() (*string, bool) {
	if o == nil || IsNil(o.CouponId) {
		return nil, false
	}
	return o.CouponId, true
}

// HasCouponId returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasCouponId() bool {
	if o != nil && !IsNil(o.CouponId) {
		return true
	}

	return false
}

// SetCouponId gets a reference to the given string and assigns it to the CouponId field.
func (o *ProductPlanSubscription) SetCouponId(v string) {
	o.CouponId = &v
}

// GetProductAddons returns the ProductAddons field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetProductAddons() map[string]string {
	if o == nil || IsNil(o.ProductAddons) {
		var ret map[string]string
		return ret
	}
	return *o.ProductAddons
}

// GetProductAddonsOk returns a tuple with the ProductAddons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetProductAddonsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ProductAddons) {
		return nil, false
	}
	return o.ProductAddons, true
}

// HasProductAddons returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasProductAddons() bool {
	if o != nil && !IsNil(o.ProductAddons) {
		return true
	}

	return false
}

// SetProductAddons gets a reference to the given map[string]string and assigns it to the ProductAddons field.
func (o *ProductPlanSubscription) SetProductAddons(v map[string]string) {
	o.ProductAddons = &v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *ProductPlanSubscription) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetDeveloperInvoice returns the DeveloperInvoice field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetDeveloperInvoice() bool {
	if o == nil || IsNil(o.DeveloperInvoice) {
		var ret bool
		return ret
	}
	return *o.DeveloperInvoice
}

// GetDeveloperInvoiceOk returns a tuple with the DeveloperInvoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetDeveloperInvoiceOk() (*bool, bool) {
	if o == nil || IsNil(o.DeveloperInvoice) {
		return nil, false
	}
	return o.DeveloperInvoice, true
}

// HasDeveloperInvoice returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasDeveloperInvoice() bool {
	if o != nil && !IsNil(o.DeveloperInvoice) {
		return true
	}

	return false
}

// SetDeveloperInvoice gets a reference to the given bool and assigns it to the DeveloperInvoice field.
func (o *ProductPlanSubscription) SetDeveloperInvoice(v bool) {
	o.DeveloperInvoice = &v
}

// GetDeveloperTitle returns the DeveloperTitle field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetDeveloperTitle() string {
	if o == nil || IsNil(o.DeveloperTitle) {
		var ret string
		return ret
	}
	return *o.DeveloperTitle
}

// GetDeveloperTitleOk returns a tuple with the DeveloperTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetDeveloperTitleOk() (*string, bool) {
	if o == nil || IsNil(o.DeveloperTitle) {
		return nil, false
	}
	return o.DeveloperTitle, true
}

// HasDeveloperTitle returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasDeveloperTitle() bool {
	if o != nil && !IsNil(o.DeveloperTitle) {
		return true
	}

	return false
}

// SetDeveloperTitle gets a reference to the given string and assigns it to the DeveloperTitle field.
func (o *ProductPlanSubscription) SetDeveloperTitle(v string) {
	o.DeveloperTitle = &v
}

// GetDeveloperWebhook returns the DeveloperWebhook field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetDeveloperWebhook() string {
	if o == nil || IsNil(o.DeveloperWebhook) {
		var ret string
		return ret
	}
	return *o.DeveloperWebhook
}

// GetDeveloperWebhookOk returns a tuple with the DeveloperWebhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetDeveloperWebhookOk() (*string, bool) {
	if o == nil || IsNil(o.DeveloperWebhook) {
		return nil, false
	}
	return o.DeveloperWebhook, true
}

// HasDeveloperWebhook returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasDeveloperWebhook() bool {
	if o != nil && !IsNil(o.DeveloperWebhook) {
		return true
	}

	return false
}

// SetDeveloperWebhook gets a reference to the given string and assigns it to the DeveloperWebhook field.
func (o *ProductPlanSubscription) SetDeveloperWebhook(v string) {
	o.DeveloperWebhook = &v
}

// GetDeveloperReturnUrl returns the DeveloperReturnUrl field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetDeveloperReturnUrl() string {
	if o == nil || IsNil(o.DeveloperReturnUrl) {
		var ret string
		return ret
	}
	return *o.DeveloperReturnUrl
}

// GetDeveloperReturnUrlOk returns a tuple with the DeveloperReturnUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetDeveloperReturnUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DeveloperReturnUrl) {
		return nil, false
	}
	return o.DeveloperReturnUrl, true
}

// HasDeveloperReturnUrl returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasDeveloperReturnUrl() bool {
	if o != nil && !IsNil(o.DeveloperReturnUrl) {
		return true
	}

	return false
}

// SetDeveloperReturnUrl gets a reference to the given string and assigns it to the DeveloperReturnUrl field.
func (o *ProductPlanSubscription) SetDeveloperReturnUrl(v string) {
	o.DeveloperReturnUrl = &v
}

// GetDeveloperConfirmations returns the DeveloperConfirmations field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetDeveloperConfirmations() bool {
	if o == nil || IsNil(o.DeveloperConfirmations) {
		var ret bool
		return ret
	}
	return *o.DeveloperConfirmations
}

// GetDeveloperConfirmationsOk returns a tuple with the DeveloperConfirmations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetDeveloperConfirmationsOk() (*bool, bool) {
	if o == nil || IsNil(o.DeveloperConfirmations) {
		return nil, false
	}
	return o.DeveloperConfirmations, true
}

// HasDeveloperConfirmations returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasDeveloperConfirmations() bool {
	if o != nil && !IsNil(o.DeveloperConfirmations) {
		return true
	}

	return false
}

// SetDeveloperConfirmations gets a reference to the given bool and assigns it to the DeveloperConfirmations field.
func (o *ProductPlanSubscription) SetDeveloperConfirmations(v bool) {
	o.DeveloperConfirmations = &v
}

// GetDeveloperValue returns the DeveloperValue field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetDeveloperValue() int32 {
	if o == nil || IsNil(o.DeveloperValue) {
		var ret int32
		return ret
	}
	return *o.DeveloperValue
}

// GetDeveloperValueOk returns a tuple with the DeveloperValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetDeveloperValueOk() (*int32, bool) {
	if o == nil || IsNil(o.DeveloperValue) {
		return nil, false
	}
	return o.DeveloperValue, true
}

// HasDeveloperValue returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasDeveloperValue() bool {
	if o != nil && !IsNil(o.DeveloperValue) {
		return true
	}

	return false
}

// SetDeveloperValue gets a reference to the given int32 and assigns it to the DeveloperValue field.
func (o *ProductPlanSubscription) SetDeveloperValue(v int32) {
	o.DeveloperValue = &v
}

// GetPaymentLinkId returns the PaymentLinkId field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetPaymentLinkId() string {
	if o == nil || IsNil(o.PaymentLinkId) {
		var ret string
		return ret
	}
	return *o.PaymentLinkId
}

// GetPaymentLinkIdOk returns a tuple with the PaymentLinkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetPaymentLinkIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentLinkId) {
		return nil, false
	}
	return o.PaymentLinkId, true
}

// HasPaymentLinkId returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasPaymentLinkId() bool {
	if o != nil && !IsNil(o.PaymentLinkId) {
		return true
	}

	return false
}

// SetPaymentLinkId gets a reference to the given string and assigns it to the PaymentLinkId field.
func (o *ProductPlanSubscription) SetPaymentLinkId(v string) {
	o.PaymentLinkId = &v
}

// GetIsMarketplace returns the IsMarketplace field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetIsMarketplace() bool {
	if o == nil || IsNil(o.IsMarketplace) {
		var ret bool
		return ret
	}
	return *o.IsMarketplace
}

// GetIsMarketplaceOk returns a tuple with the IsMarketplace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetIsMarketplaceOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMarketplace) {
		return nil, false
	}
	return o.IsMarketplace, true
}

// HasIsMarketplace returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasIsMarketplace() bool {
	if o != nil && !IsNil(o.IsMarketplace) {
		return true
	}

	return false
}

// SetIsMarketplace gets a reference to the given bool and assigns it to the IsMarketplace field.
func (o *ProductPlanSubscription) SetIsMarketplace(v bool) {
	o.IsMarketplace = &v
}

// GetPayoutConfirmation returns the PayoutConfirmation field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetPayoutConfirmation() map[string]interface{} {
	if o == nil || IsNil(o.PayoutConfirmation) {
		var ret map[string]interface{}
		return ret
	}
	return o.PayoutConfirmation
}

// GetPayoutConfirmationOk returns a tuple with the PayoutConfirmation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetPayoutConfirmationOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.PayoutConfirmation) {
		return map[string]interface{}{}, false
	}
	return o.PayoutConfirmation, true
}

// HasPayoutConfirmation returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasPayoutConfirmation() bool {
	if o != nil && !IsNil(o.PayoutConfirmation) {
		return true
	}

	return false
}

// SetPayoutConfirmation gets a reference to the given map[string]interface{} and assigns it to the PayoutConfirmation field.
func (o *ProductPlanSubscription) SetPayoutConfirmation(v map[string]interface{}) {
	o.PayoutConfirmation = v
}

// GetGatewaysAccepted returns the GatewaysAccepted field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetGatewaysAccepted() string {
	if o == nil || IsNil(o.GatewaysAccepted) {
		var ret string
		return ret
	}
	return *o.GatewaysAccepted
}

// GetGatewaysAcceptedOk returns a tuple with the GatewaysAccepted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetGatewaysAcceptedOk() (*string, bool) {
	if o == nil || IsNil(o.GatewaysAccepted) {
		return nil, false
	}
	return o.GatewaysAccepted, true
}

// HasGatewaysAccepted returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasGatewaysAccepted() bool {
	if o != nil && !IsNil(o.GatewaysAccepted) {
		return true
	}

	return false
}

// SetGatewaysAccepted gets a reference to the given string and assigns it to the GatewaysAccepted field.
func (o *ProductPlanSubscription) SetGatewaysAccepted(v string) {
	o.GatewaysAccepted = &v
}

// GetTaxData returns the TaxData field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetTaxData() ProductPlanSubscriptionTaxData {
	if o == nil || IsNil(o.TaxData) {
		var ret ProductPlanSubscriptionTaxData
		return ret
	}
	return *o.TaxData
}

// GetTaxDataOk returns a tuple with the TaxData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetTaxDataOk() (*ProductPlanSubscriptionTaxData, bool) {
	if o == nil || IsNil(o.TaxData) {
		return nil, false
	}
	return o.TaxData, true
}

// HasTaxData returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasTaxData() bool {
	if o != nil && !IsNil(o.TaxData) {
		return true
	}

	return false
}

// SetTaxData gets a reference to the given ProductPlanSubscriptionTaxData and assigns it to the TaxData field.
func (o *ProductPlanSubscription) SetTaxData(v ProductPlanSubscriptionTaxData) {
	o.TaxData = &v
}

// GetDiscordId returns the DiscordId field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetDiscordId() string {
	if o == nil || IsNil(o.DiscordId) {
		var ret string
		return ret
	}
	return *o.DiscordId
}

// GetDiscordIdOk returns a tuple with the DiscordId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetDiscordIdOk() (*string, bool) {
	if o == nil || IsNil(o.DiscordId) {
		return nil, false
	}
	return o.DiscordId, true
}

// HasDiscordId returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasDiscordId() bool {
	if o != nil && !IsNil(o.DiscordId) {
		return true
	}

	return false
}

// SetDiscordId gets a reference to the given string and assigns it to the DiscordId field.
func (o *ProductPlanSubscription) SetDiscordId(v string) {
	o.DiscordId = &v
}

// GetDiscordCustomerToken returns the DiscordCustomerToken field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetDiscordCustomerToken() string {
	if o == nil || IsNil(o.DiscordCustomerToken) {
		var ret string
		return ret
	}
	return *o.DiscordCustomerToken
}

// GetDiscordCustomerTokenOk returns a tuple with the DiscordCustomerToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetDiscordCustomerTokenOk() (*string, bool) {
	if o == nil || IsNil(o.DiscordCustomerToken) {
		return nil, false
	}
	return o.DiscordCustomerToken, true
}

// HasDiscordCustomerToken returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasDiscordCustomerToken() bool {
	if o != nil && !IsNil(o.DiscordCustomerToken) {
		return true
	}

	return false
}

// SetDiscordCustomerToken gets a reference to the given string and assigns it to the DiscordCustomerToken field.
func (o *ProductPlanSubscription) SetDiscordCustomerToken(v string) {
	o.DiscordCustomerToken = &v
}

// GetDiscordCustomerRefreshToken returns the DiscordCustomerRefreshToken field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetDiscordCustomerRefreshToken() string {
	if o == nil || IsNil(o.DiscordCustomerRefreshToken) {
		var ret string
		return ret
	}
	return *o.DiscordCustomerRefreshToken
}

// GetDiscordCustomerRefreshTokenOk returns a tuple with the DiscordCustomerRefreshToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetDiscordCustomerRefreshTokenOk() (*string, bool) {
	if o == nil || IsNil(o.DiscordCustomerRefreshToken) {
		return nil, false
	}
	return o.DiscordCustomerRefreshToken, true
}

// HasDiscordCustomerRefreshToken returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasDiscordCustomerRefreshToken() bool {
	if o != nil && !IsNil(o.DiscordCustomerRefreshToken) {
		return true
	}

	return false
}

// SetDiscordCustomerRefreshToken gets a reference to the given string and assigns it to the DiscordCustomerRefreshToken field.
func (o *ProductPlanSubscription) SetDiscordCustomerRefreshToken(v string) {
	o.DiscordCustomerRefreshToken = &v
}

// GetDiscordCustomerTokenExpiresAt returns the DiscordCustomerTokenExpiresAt field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetDiscordCustomerTokenExpiresAt() int32 {
	if o == nil || IsNil(o.DiscordCustomerTokenExpiresAt) {
		var ret int32
		return ret
	}
	return *o.DiscordCustomerTokenExpiresAt
}

// GetDiscordCustomerTokenExpiresAtOk returns a tuple with the DiscordCustomerTokenExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetDiscordCustomerTokenExpiresAtOk() (*int32, bool) {
	if o == nil || IsNil(o.DiscordCustomerTokenExpiresAt) {
		return nil, false
	}
	return o.DiscordCustomerTokenExpiresAt, true
}

// HasDiscordCustomerTokenExpiresAt returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasDiscordCustomerTokenExpiresAt() bool {
	if o != nil && !IsNil(o.DiscordCustomerTokenExpiresAt) {
		return true
	}

	return false
}

// SetDiscordCustomerTokenExpiresAt gets a reference to the given int32 and assigns it to the DiscordCustomerTokenExpiresAt field.
func (o *ProductPlanSubscription) SetDiscordCustomerTokenExpiresAt(v int32) {
	o.DiscordCustomerTokenExpiresAt = &v
}

// GetDiscordIntegrationRemoved returns the DiscordIntegrationRemoved field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetDiscordIntegrationRemoved() bool {
	if o == nil || IsNil(o.DiscordIntegrationRemoved) {
		var ret bool
		return ret
	}
	return *o.DiscordIntegrationRemoved
}

// GetDiscordIntegrationRemovedOk returns a tuple with the DiscordIntegrationRemoved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetDiscordIntegrationRemovedOk() (*bool, bool) {
	if o == nil || IsNil(o.DiscordIntegrationRemoved) {
		return nil, false
	}
	return o.DiscordIntegrationRemoved, true
}

// HasDiscordIntegrationRemoved returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasDiscordIntegrationRemoved() bool {
	if o != nil && !IsNil(o.DiscordIntegrationRemoved) {
		return true
	}

	return false
}

// SetDiscordIntegrationRemoved gets a reference to the given bool and assigns it to the DiscordIntegrationRemoved field.
func (o *ProductPlanSubscription) SetDiscordIntegrationRemoved(v bool) {
	o.DiscordIntegrationRemoved = &v
}

// GetTelegramUserId returns the TelegramUserId field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetTelegramUserId() string {
	if o == nil || IsNil(o.TelegramUserId) {
		var ret string
		return ret
	}
	return *o.TelegramUserId
}

// GetTelegramUserIdOk returns a tuple with the TelegramUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetTelegramUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.TelegramUserId) {
		return nil, false
	}
	return o.TelegramUserId, true
}

// HasTelegramUserId returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasTelegramUserId() bool {
	if o != nil && !IsNil(o.TelegramUserId) {
		return true
	}

	return false
}

// SetTelegramUserId gets a reference to the given string and assigns it to the TelegramUserId field.
func (o *ProductPlanSubscription) SetTelegramUserId(v string) {
	o.TelegramUserId = &v
}

// GetTelegramGroupId returns the TelegramGroupId field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetTelegramGroupId() string {
	if o == nil || IsNil(o.TelegramGroupId) {
		var ret string
		return ret
	}
	return *o.TelegramGroupId
}

// GetTelegramGroupIdOk returns a tuple with the TelegramGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetTelegramGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.TelegramGroupId) {
		return nil, false
	}
	return o.TelegramGroupId, true
}

// HasTelegramGroupId returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasTelegramGroupId() bool {
	if o != nil && !IsNil(o.TelegramGroupId) {
		return true
	}

	return false
}

// SetTelegramGroupId gets a reference to the given string and assigns it to the TelegramGroupId field.
func (o *ProductPlanSubscription) SetTelegramGroupId(v string) {
	o.TelegramGroupId = &v
}

// GetTelegramIntegrationRemoved returns the TelegramIntegrationRemoved field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetTelegramIntegrationRemoved() bool {
	if o == nil || IsNil(o.TelegramIntegrationRemoved) {
		var ret bool
		return ret
	}
	return *o.TelegramIntegrationRemoved
}

// GetTelegramIntegrationRemovedOk returns a tuple with the TelegramIntegrationRemoved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetTelegramIntegrationRemovedOk() (*bool, bool) {
	if o == nil || IsNil(o.TelegramIntegrationRemoved) {
		return nil, false
	}
	return o.TelegramIntegrationRemoved, true
}

// HasTelegramIntegrationRemoved returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasTelegramIntegrationRemoved() bool {
	if o != nil && !IsNil(o.TelegramIntegrationRemoved) {
		return true
	}

	return false
}

// SetTelegramIntegrationRemoved gets a reference to the given bool and assigns it to the TelegramIntegrationRemoved field.
func (o *ProductPlanSubscription) SetTelegramIntegrationRemoved(v bool) {
	o.TelegramIntegrationRemoved = &v
}

// GetAffiliateRevenueCustomerId returns the AffiliateRevenueCustomerId field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetAffiliateRevenueCustomerId() string {
	if o == nil || IsNil(o.AffiliateRevenueCustomerId) {
		var ret string
		return ret
	}
	return *o.AffiliateRevenueCustomerId
}

// GetAffiliateRevenueCustomerIdOk returns a tuple with the AffiliateRevenueCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetAffiliateRevenueCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.AffiliateRevenueCustomerId) {
		return nil, false
	}
	return o.AffiliateRevenueCustomerId, true
}

// HasAffiliateRevenueCustomerId returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasAffiliateRevenueCustomerId() bool {
	if o != nil && !IsNil(o.AffiliateRevenueCustomerId) {
		return true
	}

	return false
}

// SetAffiliateRevenueCustomerId gets a reference to the given string and assigns it to the AffiliateRevenueCustomerId field.
func (o *ProductPlanSubscription) SetAffiliateRevenueCustomerId(v string) {
	o.AffiliateRevenueCustomerId = &v
}

// GetAffiliateRevenueUsed returns the AffiliateRevenueUsed field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetAffiliateRevenueUsed() int32 {
	if o == nil || IsNil(o.AffiliateRevenueUsed) {
		var ret int32
		return ret
	}
	return *o.AffiliateRevenueUsed
}

// GetAffiliateRevenueUsedOk returns a tuple with the AffiliateRevenueUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetAffiliateRevenueUsedOk() (*int32, bool) {
	if o == nil || IsNil(o.AffiliateRevenueUsed) {
		return nil, false
	}
	return o.AffiliateRevenueUsed, true
}

// HasAffiliateRevenueUsed returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasAffiliateRevenueUsed() bool {
	if o != nil && !IsNil(o.AffiliateRevenueUsed) {
		return true
	}

	return false
}

// SetAffiliateRevenueUsed gets a reference to the given int32 and assigns it to the AffiliateRevenueUsed field.
func (o *ProductPlanSubscription) SetAffiliateRevenueUsed(v int32) {
	o.AffiliateRevenueUsed = &v
}

// GetAffilitaeRevenueUsedCurrency returns the AffilitaeRevenueUsedCurrency field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetAffilitaeRevenueUsedCurrency() Currency {
	if o == nil || IsNil(o.AffilitaeRevenueUsedCurrency) {
		var ret Currency
		return ret
	}
	return *o.AffilitaeRevenueUsedCurrency
}

// GetAffilitaeRevenueUsedCurrencyOk returns a tuple with the AffilitaeRevenueUsedCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetAffilitaeRevenueUsedCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.AffilitaeRevenueUsedCurrency) {
		return nil, false
	}
	return o.AffilitaeRevenueUsedCurrency, true
}

// HasAffilitaeRevenueUsedCurrency returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasAffilitaeRevenueUsedCurrency() bool {
	if o != nil && !IsNil(o.AffilitaeRevenueUsedCurrency) {
		return true
	}

	return false
}

// SetAffilitaeRevenueUsedCurrency gets a reference to the given Currency and assigns it to the AffilitaeRevenueUsedCurrency field.
func (o *ProductPlanSubscription) SetAffilitaeRevenueUsedCurrency(v Currency) {
	o.AffilitaeRevenueUsedCurrency = &v
}

// GetAffiliateRevenueUsedType returns the AffiliateRevenueUsedType field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetAffiliateRevenueUsedType() string {
	if o == nil || IsNil(o.AffiliateRevenueUsedType) {
		var ret string
		return ret
	}
	return *o.AffiliateRevenueUsedType
}

// GetAffiliateRevenueUsedTypeOk returns a tuple with the AffiliateRevenueUsedType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetAffiliateRevenueUsedTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AffiliateRevenueUsedType) {
		return nil, false
	}
	return o.AffiliateRevenueUsedType, true
}

// HasAffiliateRevenueUsedType returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasAffiliateRevenueUsedType() bool {
	if o != nil && !IsNil(o.AffiliateRevenueUsedType) {
		return true
	}

	return false
}

// SetAffiliateRevenueUsedType gets a reference to the given string and assigns it to the AffiliateRevenueUsedType field.
func (o *ProductPlanSubscription) SetAffiliateRevenueUsedType(v string) {
	o.AffiliateRevenueUsedType = &v
}

// GetStartEventProcessed returns the StartEventProcessed field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetStartEventProcessed() bool {
	if o == nil || IsNil(o.StartEventProcessed) {
		var ret bool
		return ret
	}
	return *o.StartEventProcessed
}

// GetStartEventProcessedOk returns a tuple with the StartEventProcessed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetStartEventProcessedOk() (*bool, bool) {
	if o == nil || IsNil(o.StartEventProcessed) {
		return nil, false
	}
	return o.StartEventProcessed, true
}

// HasStartEventProcessed returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasStartEventProcessed() bool {
	if o != nil && !IsNil(o.StartEventProcessed) {
		return true
	}

	return false
}

// SetStartEventProcessed gets a reference to the given bool and assigns it to the StartEventProcessed field.
func (o *ProductPlanSubscription) SetStartEventProcessed(v bool) {
	o.StartEventProcessed = &v
}

// GetEndEventProcessed returns the EndEventProcessed field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetEndEventProcessed() bool {
	if o == nil || IsNil(o.EndEventProcessed) {
		var ret bool
		return ret
	}
	return *o.EndEventProcessed
}

// GetEndEventProcessedOk returns a tuple with the EndEventProcessed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetEndEventProcessedOk() (*bool, bool) {
	if o == nil || IsNil(o.EndEventProcessed) {
		return nil, false
	}
	return o.EndEventProcessed, true
}

// HasEndEventProcessed returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasEndEventProcessed() bool {
	if o != nil && !IsNil(o.EndEventProcessed) {
		return true
	}

	return false
}

// SetEndEventProcessed gets a reference to the given bool and assigns it to the EndEventProcessed field.
func (o *ProductPlanSubscription) SetEndEventProcessed(v bool) {
	o.EndEventProcessed = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetCreatedAt() int32 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetCreatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *ProductPlanSubscription) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetUpdatedAt() int32 {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *ProductPlanSubscription) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

// GetIntervals returns the Intervals field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetIntervals() []PaymentInterval {
	if o == nil || IsNil(o.Intervals) {
		var ret []PaymentInterval
		return ret
	}
	return o.Intervals
}

// GetIntervalsOk returns a tuple with the Intervals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetIntervalsOk() ([]PaymentInterval, bool) {
	if o == nil || IsNil(o.Intervals) {
		return nil, false
	}
	return o.Intervals, true
}

// HasIntervals returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasIntervals() bool {
	if o != nil && !IsNil(o.Intervals) {
		return true
	}

	return false
}

// SetIntervals gets a reference to the given []PaymentInterval and assigns it to the Intervals field.
func (o *ProductPlanSubscription) SetIntervals(v []PaymentInterval) {
	o.Intervals = v
}

// GetStock returns the Stock field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetStock() int32 {
	if o == nil || IsNil(o.Stock) {
		var ret int32
		return ret
	}
	return *o.Stock
}

// GetStockOk returns a tuple with the Stock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetStockOk() (*int32, bool) {
	if o == nil || IsNil(o.Stock) {
		return nil, false
	}
	return o.Stock, true
}

// HasStock returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasStock() bool {
	if o != nil && !IsNil(o.Stock) {
		return true
	}

	return false
}

// SetStock gets a reference to the given int32 and assigns it to the Stock field.
func (o *ProductPlanSubscription) SetStock(v int32) {
	o.Stock = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetPrice() float32 {
	if o == nil || IsNil(o.Price) {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *ProductPlanSubscription) SetPrice(v float32) {
	o.Price = &v
}

// GetPriceDiscount returns the PriceDiscount field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetPriceDiscount() float32 {
	if o == nil || IsNil(o.PriceDiscount) {
		var ret float32
		return ret
	}
	return *o.PriceDiscount
}

// GetPriceDiscountOk returns a tuple with the PriceDiscount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetPriceDiscountOk() (*float32, bool) {
	if o == nil || IsNil(o.PriceDiscount) {
		return nil, false
	}
	return o.PriceDiscount, true
}

// HasPriceDiscount returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasPriceDiscount() bool {
	if o != nil && !IsNil(o.PriceDiscount) {
		return true
	}

	return false
}

// SetPriceDiscount gets a reference to the given float32 and assigns it to the PriceDiscount field.
func (o *ProductPlanSubscription) SetPriceDiscount(v float32) {
	o.PriceDiscount = &v
}

// GetTrialPeriod returns the TrialPeriod field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetTrialPeriod() int32 {
	if o == nil || IsNil(o.TrialPeriod) {
		var ret int32
		return ret
	}
	return *o.TrialPeriod
}

// GetTrialPeriodOk returns a tuple with the TrialPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetTrialPeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.TrialPeriod) {
		return nil, false
	}
	return o.TrialPeriod, true
}

// HasTrialPeriod returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasTrialPeriod() bool {
	if o != nil && !IsNil(o.TrialPeriod) {
		return true
	}

	return false
}

// SetTrialPeriod gets a reference to the given int32 and assigns it to the TrialPeriod field.
func (o *ProductPlanSubscription) SetTrialPeriod(v int32) {
	o.TrialPeriod = &v
}

// GetRecurringIntervalCount returns the RecurringIntervalCount field value if set, zero value otherwise.
func (o *ProductPlanSubscription) GetRecurringIntervalCount() int32 {
	if o == nil || IsNil(o.RecurringIntervalCount) {
		var ret int32
		return ret
	}
	return *o.RecurringIntervalCount
}

// GetRecurringIntervalCountOk returns a tuple with the RecurringIntervalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPlanSubscription) GetRecurringIntervalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.RecurringIntervalCount) {
		return nil, false
	}
	return o.RecurringIntervalCount, true
}

// HasRecurringIntervalCount returns a boolean if a field has been set.
func (o *ProductPlanSubscription) HasRecurringIntervalCount() bool {
	if o != nil && !IsNil(o.RecurringIntervalCount) {
		return true
	}

	return false
}

// SetRecurringIntervalCount gets a reference to the given int32 and assigns it to the RecurringIntervalCount field.
func (o *ProductPlanSubscription) SetRecurringIntervalCount(v int32) {
	o.RecurringIntervalCount = &v
}

func (o ProductPlanSubscription) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductPlanSubscription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShopId) {
		toSerialize["shop_id"] = o.ShopId
	}
	if !IsNil(o.CustomerId) {
		toSerialize["customer_id"] = o.CustomerId
	}
	if !IsNil(o.ProductSubscriptionUniqid) {
		toSerialize["product_subscription_uniqid"] = o.ProductSubscriptionUniqid
	}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.ProductUniqid) {
		toSerialize["product_uniqid"] = o.ProductUniqid
	}
	if !IsNil(o.ProductPlanUniqid) {
		toSerialize["product_plan_uniqid"] = o.ProductPlanUniqid
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Uniqid) {
		toSerialize["uniqid"] = o.Uniqid
	}
	if !IsNil(o.ProductSubscriptionId) {
		toSerialize["product_subscription_id"] = o.ProductSubscriptionId
	}
	if !IsNil(o.ProductPlanId) {
		toSerialize["product_plan_id"] = o.ProductPlanId
	}
	if !IsNil(o.PaymentIntervalId) {
		toSerialize["payment_interval_id"] = o.PaymentIntervalId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StartDate) {
		toSerialize["start_date"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["end_date"] = o.EndDate
	}
	if !IsNil(o.PaymentMethodId) {
		toSerialize["payment_method_id"] = o.PaymentMethodId
	}
	if !IsNil(o.Origin) {
		toSerialize["origin"] = o.Origin
	}
	if !IsNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Blockchain) {
		toSerialize["blockchain"] = o.Blockchain
	}
	if !IsNil(o.PaypalApm) {
		toSerialize["paypal_apm"] = o.PaypalApm
	}
	if !IsNil(o.PaypalEmailDelivery) {
		toSerialize["paypal_email_delivery"] = o.PaypalEmailDelivery
	}
	if !IsNil(o.StripeApm) {
		toSerialize["stripe_apm"] = o.StripeApm
	}
	if !IsNil(o.LexPaymentMethod) {
		toSerialize["lex_payment_method"] = o.LexPaymentMethod
	}
	if !IsNil(o.CouponId) {
		toSerialize["coupon_id"] = o.CouponId
	}
	if !IsNil(o.ProductAddons) {
		toSerialize["product_addons"] = o.ProductAddons
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if !IsNil(o.DeveloperInvoice) {
		toSerialize["developer_invoice"] = o.DeveloperInvoice
	}
	if !IsNil(o.DeveloperTitle) {
		toSerialize["developer_title"] = o.DeveloperTitle
	}
	if !IsNil(o.DeveloperWebhook) {
		toSerialize["developer_webhook"] = o.DeveloperWebhook
	}
	if !IsNil(o.DeveloperReturnUrl) {
		toSerialize["developer_return_url"] = o.DeveloperReturnUrl
	}
	if !IsNil(o.DeveloperConfirmations) {
		toSerialize["developer_confirmations"] = o.DeveloperConfirmations
	}
	if !IsNil(o.DeveloperValue) {
		toSerialize["developer_value"] = o.DeveloperValue
	}
	if !IsNil(o.PaymentLinkId) {
		toSerialize["payment_link_id"] = o.PaymentLinkId
	}
	if !IsNil(o.IsMarketplace) {
		toSerialize["is_marketplace"] = o.IsMarketplace
	}
	if !IsNil(o.PayoutConfirmation) {
		toSerialize["payout_confirmation"] = o.PayoutConfirmation
	}
	if !IsNil(o.GatewaysAccepted) {
		toSerialize["gateways_accepted"] = o.GatewaysAccepted
	}
	if !IsNil(o.TaxData) {
		toSerialize["tax_data"] = o.TaxData
	}
	if !IsNil(o.DiscordId) {
		toSerialize["discord_id"] = o.DiscordId
	}
	if !IsNil(o.DiscordCustomerToken) {
		toSerialize["discord_customer_token"] = o.DiscordCustomerToken
	}
	if !IsNil(o.DiscordCustomerRefreshToken) {
		toSerialize["discord_customer_refresh_token"] = o.DiscordCustomerRefreshToken
	}
	if !IsNil(o.DiscordCustomerTokenExpiresAt) {
		toSerialize["discord_customer_token_expires_at"] = o.DiscordCustomerTokenExpiresAt
	}
	if !IsNil(o.DiscordIntegrationRemoved) {
		toSerialize["discord_integration_removed"] = o.DiscordIntegrationRemoved
	}
	if !IsNil(o.TelegramUserId) {
		toSerialize["telegram_user_id"] = o.TelegramUserId
	}
	if !IsNil(o.TelegramGroupId) {
		toSerialize["telegram_group_id"] = o.TelegramGroupId
	}
	if !IsNil(o.TelegramIntegrationRemoved) {
		toSerialize["telegram_integration_removed"] = o.TelegramIntegrationRemoved
	}
	if !IsNil(o.AffiliateRevenueCustomerId) {
		toSerialize["affiliate_revenue_customer_id"] = o.AffiliateRevenueCustomerId
	}
	if !IsNil(o.AffiliateRevenueUsed) {
		toSerialize["affiliate_revenue_used"] = o.AffiliateRevenueUsed
	}
	if !IsNil(o.AffilitaeRevenueUsedCurrency) {
		toSerialize["affilitae_revenue_used_currency"] = o.AffilitaeRevenueUsedCurrency
	}
	if !IsNil(o.AffiliateRevenueUsedType) {
		toSerialize["affiliate_revenue_used_type"] = o.AffiliateRevenueUsedType
	}
	if !IsNil(o.StartEventProcessed) {
		toSerialize["start_event_processed"] = o.StartEventProcessed
	}
	if !IsNil(o.EndEventProcessed) {
		toSerialize["end_event_processed"] = o.EndEventProcessed
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Intervals) {
		toSerialize["intervals"] = o.Intervals
	}
	if !IsNil(o.Stock) {
		toSerialize["stock"] = o.Stock
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.PriceDiscount) {
		toSerialize["price_discount"] = o.PriceDiscount
	}
	if !IsNil(o.TrialPeriod) {
		toSerialize["trial_period"] = o.TrialPeriod
	}
	if !IsNil(o.RecurringIntervalCount) {
		toSerialize["recurring_interval_count"] = o.RecurringIntervalCount
	}
	return toSerialize, nil
}

type NullableProductPlanSubscription struct {
	value *ProductPlanSubscription
	isSet bool
}

func (v NullableProductPlanSubscription) Get() *ProductPlanSubscription {
	return v.value
}

func (v *NullableProductPlanSubscription) Set(val *ProductPlanSubscription) {
	v.value = val
	v.isSet = true
}

func (v NullableProductPlanSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableProductPlanSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductPlanSubscription(val *ProductPlanSubscription) *NullableProductPlanSubscription {
	return &NullableProductPlanSubscription{value: val, isSet: true}
}

func (v NullableProductPlanSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductPlanSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


