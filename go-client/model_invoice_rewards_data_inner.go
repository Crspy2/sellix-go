/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the InvoiceRewardsDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceRewardsDataInner{}

// InvoiceRewardsDataInner struct for InvoiceRewardsDataInner
type InvoiceRewardsDataInner struct {
	Clause *string `json:"clause,omitempty"`
	ClauseValue *string `json:"clause_value,omitempty"`
	ClauseCurrency *Currency `json:"clause_currency,omitempty"`
	Action *string `json:"action,omitempty"`
	ActionValue *string `json:"action_value,omitempty"`
	ActionCurrency *Currency `json:"action_currency,omitempty"`
	ActionSendProductVariant *string `json:"action_send_product_variant,omitempty"`
	// Creation date of the invoice.
	CreatedAt *int32 `json:"created_at,omitempty"`
	// Timestamp for when resource was last updated.
	UpdatedAt *int32 `json:"updated_at,omitempty"`
	Log map[string]interface{} `json:"log,omitempty"`
	RewardInfo map[string]interface{} `json:"reward_info,omitempty"`
}

// NewInvoiceRewardsDataInner instantiates a new InvoiceRewardsDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceRewardsDataInner() *InvoiceRewardsDataInner {
	this := InvoiceRewardsDataInner{}
	return &this
}

// NewInvoiceRewardsDataInnerWithDefaults instantiates a new InvoiceRewardsDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceRewardsDataInnerWithDefaults() *InvoiceRewardsDataInner {
	this := InvoiceRewardsDataInner{}
	return &this
}

// GetClause returns the Clause field value if set, zero value otherwise.
func (o *InvoiceRewardsDataInner) GetClause() string {
	if o == nil || IsNil(o.Clause) {
		var ret string
		return ret
	}
	return *o.Clause
}

// GetClauseOk returns a tuple with the Clause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRewardsDataInner) GetClauseOk() (*string, bool) {
	if o == nil || IsNil(o.Clause) {
		return nil, false
	}
	return o.Clause, true
}

// HasClause returns a boolean if a field has been set.
func (o *InvoiceRewardsDataInner) HasClause() bool {
	if o != nil && !IsNil(o.Clause) {
		return true
	}

	return false
}

// SetClause gets a reference to the given string and assigns it to the Clause field.
func (o *InvoiceRewardsDataInner) SetClause(v string) {
	o.Clause = &v
}

// GetClauseValue returns the ClauseValue field value if set, zero value otherwise.
func (o *InvoiceRewardsDataInner) GetClauseValue() string {
	if o == nil || IsNil(o.ClauseValue) {
		var ret string
		return ret
	}
	return *o.ClauseValue
}

// GetClauseValueOk returns a tuple with the ClauseValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRewardsDataInner) GetClauseValueOk() (*string, bool) {
	if o == nil || IsNil(o.ClauseValue) {
		return nil, false
	}
	return o.ClauseValue, true
}

// HasClauseValue returns a boolean if a field has been set.
func (o *InvoiceRewardsDataInner) HasClauseValue() bool {
	if o != nil && !IsNil(o.ClauseValue) {
		return true
	}

	return false
}

// SetClauseValue gets a reference to the given string and assigns it to the ClauseValue field.
func (o *InvoiceRewardsDataInner) SetClauseValue(v string) {
	o.ClauseValue = &v
}

// GetClauseCurrency returns the ClauseCurrency field value if set, zero value otherwise.
func (o *InvoiceRewardsDataInner) GetClauseCurrency() Currency {
	if o == nil || IsNil(o.ClauseCurrency) {
		var ret Currency
		return ret
	}
	return *o.ClauseCurrency
}

// GetClauseCurrencyOk returns a tuple with the ClauseCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRewardsDataInner) GetClauseCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.ClauseCurrency) {
		return nil, false
	}
	return o.ClauseCurrency, true
}

// HasClauseCurrency returns a boolean if a field has been set.
func (o *InvoiceRewardsDataInner) HasClauseCurrency() bool {
	if o != nil && !IsNil(o.ClauseCurrency) {
		return true
	}

	return false
}

// SetClauseCurrency gets a reference to the given Currency and assigns it to the ClauseCurrency field.
func (o *InvoiceRewardsDataInner) SetClauseCurrency(v Currency) {
	o.ClauseCurrency = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *InvoiceRewardsDataInner) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRewardsDataInner) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *InvoiceRewardsDataInner) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *InvoiceRewardsDataInner) SetAction(v string) {
	o.Action = &v
}

// GetActionValue returns the ActionValue field value if set, zero value otherwise.
func (o *InvoiceRewardsDataInner) GetActionValue() string {
	if o == nil || IsNil(o.ActionValue) {
		var ret string
		return ret
	}
	return *o.ActionValue
}

// GetActionValueOk returns a tuple with the ActionValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRewardsDataInner) GetActionValueOk() (*string, bool) {
	if o == nil || IsNil(o.ActionValue) {
		return nil, false
	}
	return o.ActionValue, true
}

// HasActionValue returns a boolean if a field has been set.
func (o *InvoiceRewardsDataInner) HasActionValue() bool {
	if o != nil && !IsNil(o.ActionValue) {
		return true
	}

	return false
}

// SetActionValue gets a reference to the given string and assigns it to the ActionValue field.
func (o *InvoiceRewardsDataInner) SetActionValue(v string) {
	o.ActionValue = &v
}

// GetActionCurrency returns the ActionCurrency field value if set, zero value otherwise.
func (o *InvoiceRewardsDataInner) GetActionCurrency() Currency {
	if o == nil || IsNil(o.ActionCurrency) {
		var ret Currency
		return ret
	}
	return *o.ActionCurrency
}

// GetActionCurrencyOk returns a tuple with the ActionCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRewardsDataInner) GetActionCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.ActionCurrency) {
		return nil, false
	}
	return o.ActionCurrency, true
}

// HasActionCurrency returns a boolean if a field has been set.
func (o *InvoiceRewardsDataInner) HasActionCurrency() bool {
	if o != nil && !IsNil(o.ActionCurrency) {
		return true
	}

	return false
}

// SetActionCurrency gets a reference to the given Currency and assigns it to the ActionCurrency field.
func (o *InvoiceRewardsDataInner) SetActionCurrency(v Currency) {
	o.ActionCurrency = &v
}

// GetActionSendProductVariant returns the ActionSendProductVariant field value if set, zero value otherwise.
func (o *InvoiceRewardsDataInner) GetActionSendProductVariant() string {
	if o == nil || IsNil(o.ActionSendProductVariant) {
		var ret string
		return ret
	}
	return *o.ActionSendProductVariant
}

// GetActionSendProductVariantOk returns a tuple with the ActionSendProductVariant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRewardsDataInner) GetActionSendProductVariantOk() (*string, bool) {
	if o == nil || IsNil(o.ActionSendProductVariant) {
		return nil, false
	}
	return o.ActionSendProductVariant, true
}

// HasActionSendProductVariant returns a boolean if a field has been set.
func (o *InvoiceRewardsDataInner) HasActionSendProductVariant() bool {
	if o != nil && !IsNil(o.ActionSendProductVariant) {
		return true
	}

	return false
}

// SetActionSendProductVariant gets a reference to the given string and assigns it to the ActionSendProductVariant field.
func (o *InvoiceRewardsDataInner) SetActionSendProductVariant(v string) {
	o.ActionSendProductVariant = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *InvoiceRewardsDataInner) GetCreatedAt() int32 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRewardsDataInner) GetCreatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *InvoiceRewardsDataInner) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *InvoiceRewardsDataInner) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *InvoiceRewardsDataInner) GetUpdatedAt() int32 {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRewardsDataInner) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *InvoiceRewardsDataInner) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *InvoiceRewardsDataInner) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

// GetLog returns the Log field value if set, zero value otherwise.
func (o *InvoiceRewardsDataInner) GetLog() map[string]interface{} {
	if o == nil || IsNil(o.Log) {
		var ret map[string]interface{}
		return ret
	}
	return o.Log
}

// GetLogOk returns a tuple with the Log field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRewardsDataInner) GetLogOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Log) {
		return map[string]interface{}{}, false
	}
	return o.Log, true
}

// HasLog returns a boolean if a field has been set.
func (o *InvoiceRewardsDataInner) HasLog() bool {
	if o != nil && !IsNil(o.Log) {
		return true
	}

	return false
}

// SetLog gets a reference to the given map[string]interface{} and assigns it to the Log field.
func (o *InvoiceRewardsDataInner) SetLog(v map[string]interface{}) {
	o.Log = v
}

// GetRewardInfo returns the RewardInfo field value if set, zero value otherwise.
func (o *InvoiceRewardsDataInner) GetRewardInfo() map[string]interface{} {
	if o == nil || IsNil(o.RewardInfo) {
		var ret map[string]interface{}
		return ret
	}
	return o.RewardInfo
}

// GetRewardInfoOk returns a tuple with the RewardInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRewardsDataInner) GetRewardInfoOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.RewardInfo) {
		return map[string]interface{}{}, false
	}
	return o.RewardInfo, true
}

// HasRewardInfo returns a boolean if a field has been set.
func (o *InvoiceRewardsDataInner) HasRewardInfo() bool {
	if o != nil && !IsNil(o.RewardInfo) {
		return true
	}

	return false
}

// SetRewardInfo gets a reference to the given map[string]interface{} and assigns it to the RewardInfo field.
func (o *InvoiceRewardsDataInner) SetRewardInfo(v map[string]interface{}) {
	o.RewardInfo = v
}

func (o InvoiceRewardsDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceRewardsDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Clause) {
		toSerialize["clause"] = o.Clause
	}
	if !IsNil(o.ClauseValue) {
		toSerialize["clause_value"] = o.ClauseValue
	}
	if !IsNil(o.ClauseCurrency) {
		toSerialize["clause_currency"] = o.ClauseCurrency
	}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.ActionValue) {
		toSerialize["action_value"] = o.ActionValue
	}
	if !IsNil(o.ActionCurrency) {
		toSerialize["action_currency"] = o.ActionCurrency
	}
	if !IsNil(o.ActionSendProductVariant) {
		toSerialize["action_send_product_variant"] = o.ActionSendProductVariant
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Log) {
		toSerialize["log"] = o.Log
	}
	if !IsNil(o.RewardInfo) {
		toSerialize["reward_info"] = o.RewardInfo
	}
	return toSerialize, nil
}

type NullableInvoiceRewardsDataInner struct {
	value *InvoiceRewardsDataInner
	isSet bool
}

func (v NullableInvoiceRewardsDataInner) Get() *InvoiceRewardsDataInner {
	return v.value
}

func (v *NullableInvoiceRewardsDataInner) Set(val *InvoiceRewardsDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceRewardsDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceRewardsDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceRewardsDataInner(val *InvoiceRewardsDataInner) *NullableInvoiceRewardsDataInner {
	return &NullableInvoiceRewardsDataInner{value: val, isSet: true}
}

func (v NullableInvoiceRewardsDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceRewardsDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


