/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Invoice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Invoice{}

// Invoice struct for Invoice
type Invoice struct {
	// ID of the resource.
	Id *int32 `json:"id,omitempty"`
	// Unique ID of the resource, used as reference across the API.
	Uniqid *string `json:"uniqid,omitempty"`
	// Unique ID of the recurring bill.
	RecurringBillingId *string `json:"recurring_billing_id,omitempty"`
	// DEPRECATED
	PayoutConfiguration *string `json:"payout_configuration,omitempty"`
	// An internal Sellix secret used for completing tasks with our internal API
	Secret *string `json:"secret,omitempty"`
	// Invoice type. For subscriptions, the invoice type is PRODUCT_SUBSCRIPTION as SUBSCRIPTION is reserved for Sellix-own plans.
	Type *string `json:"type,omitempty"`
	// Product type.
	Subtype *string `json:"subtype,omitempty"`
	// How the invoice was created
	Origin *string `json:"origin,omitempty"`
	// Invoice total, unit_price*quantity where quantity is applicable.
	Total *float64 `json:"total,omitempty"`
	// Invoice total in the currency chosen.
	TotalDisplay *float64 `json:"total_display,omitempty"`
	ProductVariants []ProductVariant `json:"product_variants,omitempty"`
	// Exchange rate between currency chosen and USD.
	ExchangeRate *float64 `json:"exchange_rate,omitempty"`
	// Exchange rate between the cryptocurrency chosen (if any) and USD.
	CryptoExchangeRate *float64 `json:"crypto_exchange_rate,omitempty"`
	Currency *Currency `json:"currency,omitempty"`
	// The shop ID to which this invoice belongs.
	ShopId *int32 `json:"shop_id,omitempty"`
	// DEPRECATED: Unique id of the image attachment for this merchant with the image extension included.
	ShopImageName *string `json:"shop_image_name,omitempty"`
	// Where the image is stored in Sellix's self-hosted CDN.
	ShopImageStorage *string `json:"shop_image_storage,omitempty"`
	// The cloudflare image ID of this product, replaces image_attachment and image_name. Format https://imagedelivery.net/95QNzrEeP7RU5l5WdbyrKw/<cloudflare_image_id>/<variant_name> where variant_name can be shopItem, avatar, icon, imageAvatarFeedback, public, productImageCart.
	CloudflareImageId *string `json:"cloudflare_image_id,omitempty"`
	// Name of the merchant.
	Name *string `json:"name,omitempty"`
	// Email of the customer.
	CustomerEmail *string `json:"customer_email,omitempty"`
	// ID of the customer.
	CustomerId *string `json:"customer_id,omitempty"`
	// ID of the affiliate
	AffliateRevenueCustomerId *string `json:"affliate_revenue_customer_id,omitempty"`
	// If true and gateway is PAYPAL, the product will be shipped to the PayPal email on record instead of the customer email.
	PaypalEmailDelivery *bool `json:"paypal_email_delivery,omitempty"`
	// Unique ID of the product linked to this invoice, if any.
	ProductId *string `json:"product_id,omitempty"`
	// Product title.
	ProductTitle *string `json:"product_title,omitempty"`
	// Product type.
	ProductType *string `json:"product_type,omitempty"`
	// Field reserved for Sellix-own plans. Unique ID of the subscription purchased.
	SubscriptionId *int32 `json:"subscription_id,omitempty"`
	// Field reserved for Sellix-own plans. Time, in seconds, of the subscription purchased.
	SubscriptionTime *int32 `json:"subscription_time,omitempty"`
	Gateway *Gateway `json:"gateway,omitempty"`
	Blockchain *Blockchain `json:"blockchain,omitempty"`
	// PayPal Alternative Payment Method name, such as iDEAL, used if gateway is PAYPAL.
	PaypalApm *string `json:"paypal_apm,omitempty"`
	// Stripe Alternative Payment Method name, such as iDEAL, used if gateway is STRIPE.
	StripeApm *string `json:"stripe_apm,omitempty"`
	// Merchant PayPal email.
	PaypalEmail *string `json:"paypal_email,omitempty"`
	// This field contains the PayPal order ID.
	PaypalOrderId *string `json:"paypal_order_id,omitempty"`
	// This field is updated after the invoice is completed with the PayPal's email used for the purchase.
	PaypalPayerEmail *string `json:"paypal_payer_email,omitempty"`
	// This field is updated after the invoice is completed with the fee taken by PayPal over the invoice total.
	PaypalFee *string `json:"paypal_fee,omitempty"`
	// ID of the paypal subscription.
	PaypalSubscriptionId *int32 `json:"paypal_subscription_id,omitempty"`
	// Link for the merchant to purchase the subscription from.
	PaypalSubscriptionLink *int32 `json:"paypal_subscription_link,omitempty"`
	// DEPRECATED
	LexOrderId *string `json:"lex_order_id,omitempty"`
	// DEPRECATED
	LexPaymentMethod *string `json:"lex_payment_method,omitempty"`
	// DEPRECATED
	PaydashPaymentID *string `json:"paydash_paymentID,omitempty"`
	// DEPRECATED
	VirtualPaymentsId *string `json:"virtual_payments_id,omitempty"`
	// Client secret used to create the STRIPE paymentIntent.
	StripeClientSecret *string `json:"stripe_client_secret,omitempty"`
	// If the invoice type is PRODUCT_SUBSCRIPTION or SUBSCRIPTION, refers to the STRIPE price ID.
	StripePriceId *string `json:"stripe_price_id,omitempty"`
	// Merchant Skrill email.
	SkrillEmail *string `json:"skrill_email,omitempty"`
	// Skrill unique ID linked to the invoice.
	SkrillSid *string `json:"skrill_sid,omitempty"`
	// Skrill link to redirect the customer to.
	SkrillLink *string `json:"skrill_link,omitempty"`
	// PerfectMoney payment ID linked to the invoice.
	PerfectmoneyId *string `json:"perfectmoney_id,omitempty"`
	// ID for binance invoice
	BinanceInvoiceId *string `json:"binance_invoice_id,omitempty"`
	// Full Binance QRCODE string
	BinanceQrcode *string `json:"binance_qrcode,omitempty"`
	// Checkout URL for Binance invoice
	BinanceCheckoutUrl *string `json:"binance_checkout_url,omitempty"`
	// Cryptocurrency address linked to this invoice.
	CryptoAddress *string `json:"crypto_address,omitempty"`
	// Cryptocurrency amount converted based on crypto_exchange_rate.
	CryptoAmount *float64 `json:"crypto_amount,omitempty"`
	// Cryptocurrency amount received, paid by the customer.
	CryptoReceived *float64 `json:"crypto_received,omitempty"`
	// URI used to create the QRCODE.
	CryptoUri *string `json:"crypto_uri,omitempty"`
	// Crypto confirmations needed to process the invoice.
	CryptoConfirmationsNeeded *int32 `json:"crypto_confirmations_needed,omitempty"`
	// If true, a scheduled payout for this invoice's cryptocurrency address has been sent.
	CryptoScheduledPayout *bool `json:"crypto_scheduled_payout,omitempty"`
	// If true, an instant payout for this invoice's cryptocurrency address has been sent.
	CryptoPayout *bool `json:"crypto_payout,omitempty"`
	// If true, the Sellix fee_percentage has already been collected.
	FeeBilled *bool `json:"fee_billed,omitempty"`
	// If invoice type is MONTHLY_BILL, contains a breakdown of the fees that need to be collected.
	BillInfo map[string]interface{} `json:"bill_info,omitempty"`
	// Full CashApp QRCODE string.
	CashappQrcode *string `json:"cashapp_qrcode,omitempty"`
	// Unique note for the customer to leave in the CashApp payment.
	CashappNote *string `json:"cashapp_note,omitempty"`
	// CashApp cashtag used to create the QRCODE.
	CashappCashtag *string `json:"cashapp_cashtag,omitempty"`
	// Customer country.
	Country *string `json:"country,omitempty"`
	// Customer location.
	Location *string `json:"location,omitempty"`
	// Customer IP.
	Ip *string `json:"ip,omitempty"`
	// If true, a VPN or Proxy has been detected.
	IsVpnOrProxy *bool `json:"is_vpn_or_proxy,omitempty"`
	// Customer User Agent.
	UserAgent *string `json:"user_agent,omitempty"`
	// Qauntity of product purchased.
	Quantity *int32 `json:"quantity,omitempty"`
	// Unique ID of the coupon, if used, for the discount.
	CouponId *string `json:"coupon_id,omitempty"`
	// key-value JSON having as key the custom field name and as value the custom field value inserted by the customer. Custom fields can both be used as inputs from the customers but also as metadata for invoices, letting you pass hidden fields for internal referencing.
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	// If true, this invoice has been created through the Developers API.
	DeveloperInvoice *bool `json:"developer_invoice,omitempty"`
	// If a product_id is not passed through the Developers API, a title must be specified.
	DeveloperTitle *string `json:"developer_title,omitempty"`
	// Additional webhook URL to which updates regarding this invoice will be sent.
	DeveloperWebhook *string `json:"developer_webhook,omitempty"`
	// If present, the customer will be redirected to this URL after the invoice has been paid.
	DeveloperReturnUrl *string `json:"developer_return_url,omitempty"`
	// Status of the invoice.
	Status *string `json:"status,omitempty"`
	// If CART_PARTIAL_OUT_OF_STOCK, the invoice has been completed but some products in the cart were out of stock.
	StatusDetails *string `json:"status_details,omitempty"`
	// If the invoice is VOIDED and the product (or all the products in the cart) were out of stock, this additional status is set.
	VoidDetails *string `json:"void_details,omitempty"`
	// If a coupon or volume_discount is used, the discount value presents the total amount of discount over the total cost of the invoice.
	Discount *float64 `json:"discount,omitempty"`
	// What cut does Sellix take out of the total. To learn more about Sellix fees please refer to https://sellix.io/fees.
	FeePercentage *int32 `json:"fee_percentage,omitempty"`
	FeeBreakdown *FeeBreakdown `json:"fee_breakdown,omitempty"`
	// Representation of how discount was applied to invoice
	DiscountBreakdown map[string]interface{} `json:"discount_breakdown,omitempty"`
	// DEPRECATED: Day value, number.
	// Deprecated
	DayValue *int32 `json:"day_value,omitempty"`
	// DEPRECATED: First three letters of the day name.
	// Deprecated
	Day *string `json:"day,omitempty"`
	// DEPRECATED: First three letters of the month name.
	// Deprecated
	Month *string `json:"month,omitempty"`
	// DEPRECATED: Year number.
	// Deprecated
	Year *int32 `json:"year,omitempty"`
	ProductAddons []ProductAddonsInner `json:"product_addons,omitempty"`
	BundleConfig []BundleConfig `json:"bundle_config,omitempty"`
	// Timestamp for the creation of the invoice.
	CreatedAt *int32 `json:"created_at,omitempty"`
	// Date, available if the blacklist has been edited.
	UpdatedAt *int32 `json:"updated_at,omitempty"`
	// User ID of the user who updated the invoice.
	UpdatedBy *int32 `json:"updated_by,omitempty"`
	ApprovedAddress *ApprovedAddress `json:"approved_address,omitempty"`
	// If the product type is SERVICE, this field contains additional details on the type of service provided by the merchant.
	ServiceText *string `json:"service_text,omitempty"`
	IpInfo *IpInfo `json:"ip_info,omitempty"`
	// Webhook responses for this invoice.
	Webhooks []Webhook `json:"webhooks,omitempty"`
	RewardsData []InvoiceRewardsDataInner `json:"rewards_data,omitempty"`
	PaypalDispute *PaypalDispute `json:"paypal_dispute,omitempty"`
	ProductDownloads []ProductDownload `json:"product_downloads,omitempty"`
	// The ID for the payment link, if invoice was created by a payment link
	PaymentLinkId *string `json:"payment_link_id,omitempty"`
	// Whether or not cashapp email is configured
	CashappEmailConfigured *bool `json:"cashapp_email_configured,omitempty"`
	// True if the product is of type LICENSE
	License *bool `json:"license,omitempty"`
	// Additional details on the invoice status change.
	StatusHistory []InvoiceStatus `json:"status_history,omitempty"`
	AmlWallets []AmlWallet `json:"aml_wallets,omitempty"`
	// Crypto transactions received to fulfill this invoice.
	CryptoTransactions []CryptoTransaction `json:"crypto_transactions,omitempty"`
	Product *Product `json:"product,omitempty"`
	TotalConversions interface{} `json:"total_conversions,omitempty"`
	// What Sellix theme the shop is set to.
	Theme *string `json:"theme,omitempty"`
	// 1 if darkmode is enabled, 0 if it is disabled.
	DarkMode *int32 `json:"dark_mode,omitempty"`
	CryptoMode interface{} `json:"crypto_mode,omitempty"`
	// gateways available for the update invoice Developers API.
	GatewaysAvailable []string `json:"gateways_available,omitempty"`
	// The country the shop is opperated in
	CountryRegulations *string `json:"country_regulations,omitempty"`
	AvailableStripeApm *InvoiceAvailableStripeApm `json:"available_stripe_apm,omitempty"`
	// If product type is SERIALS, provide the serials linked to this invoice.
	Serials []string `json:"serials,omitempty"`
	ShopPaymentGatewaysFees []GatewayFees `json:"shop_payment_gateways_fees,omitempty"`
	// If true, the merchant has enabled purchase with Credit Card through PayPal.
	ShopPaypalCreditCard *bool `json:"shop_paypal_credit_card,omitempty"`
	// If true, the merchant has enabled invoice shipment to the PayPal customer email.
	ShopForcePaypalEmailDelivery *bool `json:"shop_force_paypal_email_delivery,omitempty"`
	ShopWalletconnectId interface{} `json:"shop_walletconnect_id,omitempty"`
	// The original return url of the order.
	OriginalDeveloperReturnUrl *string `json:"original_developer_return_url,omitempty"`
	RatesSnapshot *InvoiceRatesSnapshot `json:"rates_snapshot,omitempty"`
	VoidTimes []InvoiceVoidTimesInner `json:"void_times,omitempty"`
}

// NewInvoice instantiates a new Invoice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoice() *Invoice {
	this := Invoice{}
	return &this
}

// NewInvoiceWithDefaults instantiates a new Invoice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceWithDefaults() *Invoice {
	this := Invoice{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Invoice) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Invoice) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Invoice) SetId(v int32) {
	o.Id = &v
}

// GetUniqid returns the Uniqid field value if set, zero value otherwise.
func (o *Invoice) GetUniqid() string {
	if o == nil || IsNil(o.Uniqid) {
		var ret string
		return ret
	}
	return *o.Uniqid
}

// GetUniqidOk returns a tuple with the Uniqid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetUniqidOk() (*string, bool) {
	if o == nil || IsNil(o.Uniqid) {
		return nil, false
	}
	return o.Uniqid, true
}

// HasUniqid returns a boolean if a field has been set.
func (o *Invoice) HasUniqid() bool {
	if o != nil && !IsNil(o.Uniqid) {
		return true
	}

	return false
}

// SetUniqid gets a reference to the given string and assigns it to the Uniqid field.
func (o *Invoice) SetUniqid(v string) {
	o.Uniqid = &v
}

// GetRecurringBillingId returns the RecurringBillingId field value if set, zero value otherwise.
func (o *Invoice) GetRecurringBillingId() string {
	if o == nil || IsNil(o.RecurringBillingId) {
		var ret string
		return ret
	}
	return *o.RecurringBillingId
}

// GetRecurringBillingIdOk returns a tuple with the RecurringBillingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetRecurringBillingIdOk() (*string, bool) {
	if o == nil || IsNil(o.RecurringBillingId) {
		return nil, false
	}
	return o.RecurringBillingId, true
}

// HasRecurringBillingId returns a boolean if a field has been set.
func (o *Invoice) HasRecurringBillingId() bool {
	if o != nil && !IsNil(o.RecurringBillingId) {
		return true
	}

	return false
}

// SetRecurringBillingId gets a reference to the given string and assigns it to the RecurringBillingId field.
func (o *Invoice) SetRecurringBillingId(v string) {
	o.RecurringBillingId = &v
}

// GetPayoutConfiguration returns the PayoutConfiguration field value if set, zero value otherwise.
func (o *Invoice) GetPayoutConfiguration() string {
	if o == nil || IsNil(o.PayoutConfiguration) {
		var ret string
		return ret
	}
	return *o.PayoutConfiguration
}

// GetPayoutConfigurationOk returns a tuple with the PayoutConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetPayoutConfigurationOk() (*string, bool) {
	if o == nil || IsNil(o.PayoutConfiguration) {
		return nil, false
	}
	return o.PayoutConfiguration, true
}

// HasPayoutConfiguration returns a boolean if a field has been set.
func (o *Invoice) HasPayoutConfiguration() bool {
	if o != nil && !IsNil(o.PayoutConfiguration) {
		return true
	}

	return false
}

// SetPayoutConfiguration gets a reference to the given string and assigns it to the PayoutConfiguration field.
func (o *Invoice) SetPayoutConfiguration(v string) {
	o.PayoutConfiguration = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *Invoice) GetSecret() string {
	if o == nil || IsNil(o.Secret) {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetSecretOk() (*string, bool) {
	if o == nil || IsNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *Invoice) HasSecret() bool {
	if o != nil && !IsNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *Invoice) SetSecret(v string) {
	o.Secret = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Invoice) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Invoice) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Invoice) SetType(v string) {
	o.Type = &v
}

// GetSubtype returns the Subtype field value if set, zero value otherwise.
func (o *Invoice) GetSubtype() string {
	if o == nil || IsNil(o.Subtype) {
		var ret string
		return ret
	}
	return *o.Subtype
}

// GetSubtypeOk returns a tuple with the Subtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetSubtypeOk() (*string, bool) {
	if o == nil || IsNil(o.Subtype) {
		return nil, false
	}
	return o.Subtype, true
}

// HasSubtype returns a boolean if a field has been set.
func (o *Invoice) HasSubtype() bool {
	if o != nil && !IsNil(o.Subtype) {
		return true
	}

	return false
}

// SetSubtype gets a reference to the given string and assigns it to the Subtype field.
func (o *Invoice) SetSubtype(v string) {
	o.Subtype = &v
}

// GetOrigin returns the Origin field value if set, zero value otherwise.
func (o *Invoice) GetOrigin() string {
	if o == nil || IsNil(o.Origin) {
		var ret string
		return ret
	}
	return *o.Origin
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetOriginOk() (*string, bool) {
	if o == nil || IsNil(o.Origin) {
		return nil, false
	}
	return o.Origin, true
}

// HasOrigin returns a boolean if a field has been set.
func (o *Invoice) HasOrigin() bool {
	if o != nil && !IsNil(o.Origin) {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given string and assigns it to the Origin field.
func (o *Invoice) SetOrigin(v string) {
	o.Origin = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *Invoice) GetTotal() float64 {
	if o == nil || IsNil(o.Total) {
		var ret float64
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetTotalOk() (*float64, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *Invoice) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given float64 and assigns it to the Total field.
func (o *Invoice) SetTotal(v float64) {
	o.Total = &v
}

// GetTotalDisplay returns the TotalDisplay field value if set, zero value otherwise.
func (o *Invoice) GetTotalDisplay() float64 {
	if o == nil || IsNil(o.TotalDisplay) {
		var ret float64
		return ret
	}
	return *o.TotalDisplay
}

// GetTotalDisplayOk returns a tuple with the TotalDisplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetTotalDisplayOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalDisplay) {
		return nil, false
	}
	return o.TotalDisplay, true
}

// HasTotalDisplay returns a boolean if a field has been set.
func (o *Invoice) HasTotalDisplay() bool {
	if o != nil && !IsNil(o.TotalDisplay) {
		return true
	}

	return false
}

// SetTotalDisplay gets a reference to the given float64 and assigns it to the TotalDisplay field.
func (o *Invoice) SetTotalDisplay(v float64) {
	o.TotalDisplay = &v
}

// GetProductVariants returns the ProductVariants field value if set, zero value otherwise.
func (o *Invoice) GetProductVariants() []ProductVariant {
	if o == nil || IsNil(o.ProductVariants) {
		var ret []ProductVariant
		return ret
	}
	return o.ProductVariants
}

// GetProductVariantsOk returns a tuple with the ProductVariants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetProductVariantsOk() ([]ProductVariant, bool) {
	if o == nil || IsNil(o.ProductVariants) {
		return nil, false
	}
	return o.ProductVariants, true
}

// HasProductVariants returns a boolean if a field has been set.
func (o *Invoice) HasProductVariants() bool {
	if o != nil && !IsNil(o.ProductVariants) {
		return true
	}

	return false
}

// SetProductVariants gets a reference to the given []ProductVariant and assigns it to the ProductVariants field.
func (o *Invoice) SetProductVariants(v []ProductVariant) {
	o.ProductVariants = v
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise.
func (o *Invoice) GetExchangeRate() float64 {
	if o == nil || IsNil(o.ExchangeRate) {
		var ret float64
		return ret
	}
	return *o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetExchangeRateOk() (*float64, bool) {
	if o == nil || IsNil(o.ExchangeRate) {
		return nil, false
	}
	return o.ExchangeRate, true
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *Invoice) HasExchangeRate() bool {
	if o != nil && !IsNil(o.ExchangeRate) {
		return true
	}

	return false
}

// SetExchangeRate gets a reference to the given float64 and assigns it to the ExchangeRate field.
func (o *Invoice) SetExchangeRate(v float64) {
	o.ExchangeRate = &v
}

// GetCryptoExchangeRate returns the CryptoExchangeRate field value if set, zero value otherwise.
func (o *Invoice) GetCryptoExchangeRate() float64 {
	if o == nil || IsNil(o.CryptoExchangeRate) {
		var ret float64
		return ret
	}
	return *o.CryptoExchangeRate
}

// GetCryptoExchangeRateOk returns a tuple with the CryptoExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetCryptoExchangeRateOk() (*float64, bool) {
	if o == nil || IsNil(o.CryptoExchangeRate) {
		return nil, false
	}
	return o.CryptoExchangeRate, true
}

// HasCryptoExchangeRate returns a boolean if a field has been set.
func (o *Invoice) HasCryptoExchangeRate() bool {
	if o != nil && !IsNil(o.CryptoExchangeRate) {
		return true
	}

	return false
}

// SetCryptoExchangeRate gets a reference to the given float64 and assigns it to the CryptoExchangeRate field.
func (o *Invoice) SetCryptoExchangeRate(v float64) {
	o.CryptoExchangeRate = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *Invoice) GetCurrency() Currency {
	if o == nil || IsNil(o.Currency) {
		var ret Currency
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *Invoice) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given Currency and assigns it to the Currency field.
func (o *Invoice) SetCurrency(v Currency) {
	o.Currency = &v
}

// GetShopId returns the ShopId field value if set, zero value otherwise.
func (o *Invoice) GetShopId() int32 {
	if o == nil || IsNil(o.ShopId) {
		var ret int32
		return ret
	}
	return *o.ShopId
}

// GetShopIdOk returns a tuple with the ShopId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetShopIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ShopId) {
		return nil, false
	}
	return o.ShopId, true
}

// HasShopId returns a boolean if a field has been set.
func (o *Invoice) HasShopId() bool {
	if o != nil && !IsNil(o.ShopId) {
		return true
	}

	return false
}

// SetShopId gets a reference to the given int32 and assigns it to the ShopId field.
func (o *Invoice) SetShopId(v int32) {
	o.ShopId = &v
}

// GetShopImageName returns the ShopImageName field value if set, zero value otherwise.
func (o *Invoice) GetShopImageName() string {
	if o == nil || IsNil(o.ShopImageName) {
		var ret string
		return ret
	}
	return *o.ShopImageName
}

// GetShopImageNameOk returns a tuple with the ShopImageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetShopImageNameOk() (*string, bool) {
	if o == nil || IsNil(o.ShopImageName) {
		return nil, false
	}
	return o.ShopImageName, true
}

// HasShopImageName returns a boolean if a field has been set.
func (o *Invoice) HasShopImageName() bool {
	if o != nil && !IsNil(o.ShopImageName) {
		return true
	}

	return false
}

// SetShopImageName gets a reference to the given string and assigns it to the ShopImageName field.
func (o *Invoice) SetShopImageName(v string) {
	o.ShopImageName = &v
}

// GetShopImageStorage returns the ShopImageStorage field value if set, zero value otherwise.
func (o *Invoice) GetShopImageStorage() string {
	if o == nil || IsNil(o.ShopImageStorage) {
		var ret string
		return ret
	}
	return *o.ShopImageStorage
}

// GetShopImageStorageOk returns a tuple with the ShopImageStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetShopImageStorageOk() (*string, bool) {
	if o == nil || IsNil(o.ShopImageStorage) {
		return nil, false
	}
	return o.ShopImageStorage, true
}

// HasShopImageStorage returns a boolean if a field has been set.
func (o *Invoice) HasShopImageStorage() bool {
	if o != nil && !IsNil(o.ShopImageStorage) {
		return true
	}

	return false
}

// SetShopImageStorage gets a reference to the given string and assigns it to the ShopImageStorage field.
func (o *Invoice) SetShopImageStorage(v string) {
	o.ShopImageStorage = &v
}

// GetCloudflareImageId returns the CloudflareImageId field value if set, zero value otherwise.
func (o *Invoice) GetCloudflareImageId() string {
	if o == nil || IsNil(o.CloudflareImageId) {
		var ret string
		return ret
	}
	return *o.CloudflareImageId
}

// GetCloudflareImageIdOk returns a tuple with the CloudflareImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetCloudflareImageIdOk() (*string, bool) {
	if o == nil || IsNil(o.CloudflareImageId) {
		return nil, false
	}
	return o.CloudflareImageId, true
}

// HasCloudflareImageId returns a boolean if a field has been set.
func (o *Invoice) HasCloudflareImageId() bool {
	if o != nil && !IsNil(o.CloudflareImageId) {
		return true
	}

	return false
}

// SetCloudflareImageId gets a reference to the given string and assigns it to the CloudflareImageId field.
func (o *Invoice) SetCloudflareImageId(v string) {
	o.CloudflareImageId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Invoice) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Invoice) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Invoice) SetName(v string) {
	o.Name = &v
}

// GetCustomerEmail returns the CustomerEmail field value if set, zero value otherwise.
func (o *Invoice) GetCustomerEmail() string {
	if o == nil || IsNil(o.CustomerEmail) {
		var ret string
		return ret
	}
	return *o.CustomerEmail
}

// GetCustomerEmailOk returns a tuple with the CustomerEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetCustomerEmailOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerEmail) {
		return nil, false
	}
	return o.CustomerEmail, true
}

// HasCustomerEmail returns a boolean if a field has been set.
func (o *Invoice) HasCustomerEmail() bool {
	if o != nil && !IsNil(o.CustomerEmail) {
		return true
	}

	return false
}

// SetCustomerEmail gets a reference to the given string and assigns it to the CustomerEmail field.
func (o *Invoice) SetCustomerEmail(v string) {
	o.CustomerEmail = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *Invoice) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId) {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *Invoice) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *Invoice) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetAffliateRevenueCustomerId returns the AffliateRevenueCustomerId field value if set, zero value otherwise.
func (o *Invoice) GetAffliateRevenueCustomerId() string {
	if o == nil || IsNil(o.AffliateRevenueCustomerId) {
		var ret string
		return ret
	}
	return *o.AffliateRevenueCustomerId
}

// GetAffliateRevenueCustomerIdOk returns a tuple with the AffliateRevenueCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetAffliateRevenueCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.AffliateRevenueCustomerId) {
		return nil, false
	}
	return o.AffliateRevenueCustomerId, true
}

// HasAffliateRevenueCustomerId returns a boolean if a field has been set.
func (o *Invoice) HasAffliateRevenueCustomerId() bool {
	if o != nil && !IsNil(o.AffliateRevenueCustomerId) {
		return true
	}

	return false
}

// SetAffliateRevenueCustomerId gets a reference to the given string and assigns it to the AffliateRevenueCustomerId field.
func (o *Invoice) SetAffliateRevenueCustomerId(v string) {
	o.AffliateRevenueCustomerId = &v
}

// GetPaypalEmailDelivery returns the PaypalEmailDelivery field value if set, zero value otherwise.
func (o *Invoice) GetPaypalEmailDelivery() bool {
	if o == nil || IsNil(o.PaypalEmailDelivery) {
		var ret bool
		return ret
	}
	return *o.PaypalEmailDelivery
}

// GetPaypalEmailDeliveryOk returns a tuple with the PaypalEmailDelivery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetPaypalEmailDeliveryOk() (*bool, bool) {
	if o == nil || IsNil(o.PaypalEmailDelivery) {
		return nil, false
	}
	return o.PaypalEmailDelivery, true
}

// HasPaypalEmailDelivery returns a boolean if a field has been set.
func (o *Invoice) HasPaypalEmailDelivery() bool {
	if o != nil && !IsNil(o.PaypalEmailDelivery) {
		return true
	}

	return false
}

// SetPaypalEmailDelivery gets a reference to the given bool and assigns it to the PaypalEmailDelivery field.
func (o *Invoice) SetPaypalEmailDelivery(v bool) {
	o.PaypalEmailDelivery = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *Invoice) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *Invoice) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *Invoice) SetProductId(v string) {
	o.ProductId = &v
}

// GetProductTitle returns the ProductTitle field value if set, zero value otherwise.
func (o *Invoice) GetProductTitle() string {
	if o == nil || IsNil(o.ProductTitle) {
		var ret string
		return ret
	}
	return *o.ProductTitle
}

// GetProductTitleOk returns a tuple with the ProductTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetProductTitleOk() (*string, bool) {
	if o == nil || IsNil(o.ProductTitle) {
		return nil, false
	}
	return o.ProductTitle, true
}

// HasProductTitle returns a boolean if a field has been set.
func (o *Invoice) HasProductTitle() bool {
	if o != nil && !IsNil(o.ProductTitle) {
		return true
	}

	return false
}

// SetProductTitle gets a reference to the given string and assigns it to the ProductTitle field.
func (o *Invoice) SetProductTitle(v string) {
	o.ProductTitle = &v
}

// GetProductType returns the ProductType field value if set, zero value otherwise.
func (o *Invoice) GetProductType() string {
	if o == nil || IsNil(o.ProductType) {
		var ret string
		return ret
	}
	return *o.ProductType
}

// GetProductTypeOk returns a tuple with the ProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetProductTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProductType) {
		return nil, false
	}
	return o.ProductType, true
}

// HasProductType returns a boolean if a field has been set.
func (o *Invoice) HasProductType() bool {
	if o != nil && !IsNil(o.ProductType) {
		return true
	}

	return false
}

// SetProductType gets a reference to the given string and assigns it to the ProductType field.
func (o *Invoice) SetProductType(v string) {
	o.ProductType = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *Invoice) GetSubscriptionId() int32 {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret int32
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetSubscriptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *Invoice) HasSubscriptionId() bool {
	if o != nil && !IsNil(o.SubscriptionId) {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given int32 and assigns it to the SubscriptionId field.
func (o *Invoice) SetSubscriptionId(v int32) {
	o.SubscriptionId = &v
}

// GetSubscriptionTime returns the SubscriptionTime field value if set, zero value otherwise.
func (o *Invoice) GetSubscriptionTime() int32 {
	if o == nil || IsNil(o.SubscriptionTime) {
		var ret int32
		return ret
	}
	return *o.SubscriptionTime
}

// GetSubscriptionTimeOk returns a tuple with the SubscriptionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetSubscriptionTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.SubscriptionTime) {
		return nil, false
	}
	return o.SubscriptionTime, true
}

// HasSubscriptionTime returns a boolean if a field has been set.
func (o *Invoice) HasSubscriptionTime() bool {
	if o != nil && !IsNil(o.SubscriptionTime) {
		return true
	}

	return false
}

// SetSubscriptionTime gets a reference to the given int32 and assigns it to the SubscriptionTime field.
func (o *Invoice) SetSubscriptionTime(v int32) {
	o.SubscriptionTime = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *Invoice) GetGateway() Gateway {
	if o == nil || IsNil(o.Gateway) {
		var ret Gateway
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetGatewayOk() (*Gateway, bool) {
	if o == nil || IsNil(o.Gateway) {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *Invoice) HasGateway() bool {
	if o != nil && !IsNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given Gateway and assigns it to the Gateway field.
func (o *Invoice) SetGateway(v Gateway) {
	o.Gateway = &v
}

// GetBlockchain returns the Blockchain field value if set, zero value otherwise.
func (o *Invoice) GetBlockchain() Blockchain {
	if o == nil || IsNil(o.Blockchain) {
		var ret Blockchain
		return ret
	}
	return *o.Blockchain
}

// GetBlockchainOk returns a tuple with the Blockchain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetBlockchainOk() (*Blockchain, bool) {
	if o == nil || IsNil(o.Blockchain) {
		return nil, false
	}
	return o.Blockchain, true
}

// HasBlockchain returns a boolean if a field has been set.
func (o *Invoice) HasBlockchain() bool {
	if o != nil && !IsNil(o.Blockchain) {
		return true
	}

	return false
}

// SetBlockchain gets a reference to the given Blockchain and assigns it to the Blockchain field.
func (o *Invoice) SetBlockchain(v Blockchain) {
	o.Blockchain = &v
}

// GetPaypalApm returns the PaypalApm field value if set, zero value otherwise.
func (o *Invoice) GetPaypalApm() string {
	if o == nil || IsNil(o.PaypalApm) {
		var ret string
		return ret
	}
	return *o.PaypalApm
}

// GetPaypalApmOk returns a tuple with the PaypalApm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetPaypalApmOk() (*string, bool) {
	if o == nil || IsNil(o.PaypalApm) {
		return nil, false
	}
	return o.PaypalApm, true
}

// HasPaypalApm returns a boolean if a field has been set.
func (o *Invoice) HasPaypalApm() bool {
	if o != nil && !IsNil(o.PaypalApm) {
		return true
	}

	return false
}

// SetPaypalApm gets a reference to the given string and assigns it to the PaypalApm field.
func (o *Invoice) SetPaypalApm(v string) {
	o.PaypalApm = &v
}

// GetStripeApm returns the StripeApm field value if set, zero value otherwise.
func (o *Invoice) GetStripeApm() string {
	if o == nil || IsNil(o.StripeApm) {
		var ret string
		return ret
	}
	return *o.StripeApm
}

// GetStripeApmOk returns a tuple with the StripeApm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetStripeApmOk() (*string, bool) {
	if o == nil || IsNil(o.StripeApm) {
		return nil, false
	}
	return o.StripeApm, true
}

// HasStripeApm returns a boolean if a field has been set.
func (o *Invoice) HasStripeApm() bool {
	if o != nil && !IsNil(o.StripeApm) {
		return true
	}

	return false
}

// SetStripeApm gets a reference to the given string and assigns it to the StripeApm field.
func (o *Invoice) SetStripeApm(v string) {
	o.StripeApm = &v
}

// GetPaypalEmail returns the PaypalEmail field value if set, zero value otherwise.
func (o *Invoice) GetPaypalEmail() string {
	if o == nil || IsNil(o.PaypalEmail) {
		var ret string
		return ret
	}
	return *o.PaypalEmail
}

// GetPaypalEmailOk returns a tuple with the PaypalEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetPaypalEmailOk() (*string, bool) {
	if o == nil || IsNil(o.PaypalEmail) {
		return nil, false
	}
	return o.PaypalEmail, true
}

// HasPaypalEmail returns a boolean if a field has been set.
func (o *Invoice) HasPaypalEmail() bool {
	if o != nil && !IsNil(o.PaypalEmail) {
		return true
	}

	return false
}

// SetPaypalEmail gets a reference to the given string and assigns it to the PaypalEmail field.
func (o *Invoice) SetPaypalEmail(v string) {
	o.PaypalEmail = &v
}

// GetPaypalOrderId returns the PaypalOrderId field value if set, zero value otherwise.
func (o *Invoice) GetPaypalOrderId() string {
	if o == nil || IsNil(o.PaypalOrderId) {
		var ret string
		return ret
	}
	return *o.PaypalOrderId
}

// GetPaypalOrderIdOk returns a tuple with the PaypalOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetPaypalOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaypalOrderId) {
		return nil, false
	}
	return o.PaypalOrderId, true
}

// HasPaypalOrderId returns a boolean if a field has been set.
func (o *Invoice) HasPaypalOrderId() bool {
	if o != nil && !IsNil(o.PaypalOrderId) {
		return true
	}

	return false
}

// SetPaypalOrderId gets a reference to the given string and assigns it to the PaypalOrderId field.
func (o *Invoice) SetPaypalOrderId(v string) {
	o.PaypalOrderId = &v
}

// GetPaypalPayerEmail returns the PaypalPayerEmail field value if set, zero value otherwise.
func (o *Invoice) GetPaypalPayerEmail() string {
	if o == nil || IsNil(o.PaypalPayerEmail) {
		var ret string
		return ret
	}
	return *o.PaypalPayerEmail
}

// GetPaypalPayerEmailOk returns a tuple with the PaypalPayerEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetPaypalPayerEmailOk() (*string, bool) {
	if o == nil || IsNil(o.PaypalPayerEmail) {
		return nil, false
	}
	return o.PaypalPayerEmail, true
}

// HasPaypalPayerEmail returns a boolean if a field has been set.
func (o *Invoice) HasPaypalPayerEmail() bool {
	if o != nil && !IsNil(o.PaypalPayerEmail) {
		return true
	}

	return false
}

// SetPaypalPayerEmail gets a reference to the given string and assigns it to the PaypalPayerEmail field.
func (o *Invoice) SetPaypalPayerEmail(v string) {
	o.PaypalPayerEmail = &v
}

// GetPaypalFee returns the PaypalFee field value if set, zero value otherwise.
func (o *Invoice) GetPaypalFee() string {
	if o == nil || IsNil(o.PaypalFee) {
		var ret string
		return ret
	}
	return *o.PaypalFee
}

// GetPaypalFeeOk returns a tuple with the PaypalFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetPaypalFeeOk() (*string, bool) {
	if o == nil || IsNil(o.PaypalFee) {
		return nil, false
	}
	return o.PaypalFee, true
}

// HasPaypalFee returns a boolean if a field has been set.
func (o *Invoice) HasPaypalFee() bool {
	if o != nil && !IsNil(o.PaypalFee) {
		return true
	}

	return false
}

// SetPaypalFee gets a reference to the given string and assigns it to the PaypalFee field.
func (o *Invoice) SetPaypalFee(v string) {
	o.PaypalFee = &v
}

// GetPaypalSubscriptionId returns the PaypalSubscriptionId field value if set, zero value otherwise.
func (o *Invoice) GetPaypalSubscriptionId() int32 {
	if o == nil || IsNil(o.PaypalSubscriptionId) {
		var ret int32
		return ret
	}
	return *o.PaypalSubscriptionId
}

// GetPaypalSubscriptionIdOk returns a tuple with the PaypalSubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetPaypalSubscriptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PaypalSubscriptionId) {
		return nil, false
	}
	return o.PaypalSubscriptionId, true
}

// HasPaypalSubscriptionId returns a boolean if a field has been set.
func (o *Invoice) HasPaypalSubscriptionId() bool {
	if o != nil && !IsNil(o.PaypalSubscriptionId) {
		return true
	}

	return false
}

// SetPaypalSubscriptionId gets a reference to the given int32 and assigns it to the PaypalSubscriptionId field.
func (o *Invoice) SetPaypalSubscriptionId(v int32) {
	o.PaypalSubscriptionId = &v
}

// GetPaypalSubscriptionLink returns the PaypalSubscriptionLink field value if set, zero value otherwise.
func (o *Invoice) GetPaypalSubscriptionLink() int32 {
	if o == nil || IsNil(o.PaypalSubscriptionLink) {
		var ret int32
		return ret
	}
	return *o.PaypalSubscriptionLink
}

// GetPaypalSubscriptionLinkOk returns a tuple with the PaypalSubscriptionLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetPaypalSubscriptionLinkOk() (*int32, bool) {
	if o == nil || IsNil(o.PaypalSubscriptionLink) {
		return nil, false
	}
	return o.PaypalSubscriptionLink, true
}

// HasPaypalSubscriptionLink returns a boolean if a field has been set.
func (o *Invoice) HasPaypalSubscriptionLink() bool {
	if o != nil && !IsNil(o.PaypalSubscriptionLink) {
		return true
	}

	return false
}

// SetPaypalSubscriptionLink gets a reference to the given int32 and assigns it to the PaypalSubscriptionLink field.
func (o *Invoice) SetPaypalSubscriptionLink(v int32) {
	o.PaypalSubscriptionLink = &v
}

// GetLexOrderId returns the LexOrderId field value if set, zero value otherwise.
func (o *Invoice) GetLexOrderId() string {
	if o == nil || IsNil(o.LexOrderId) {
		var ret string
		return ret
	}
	return *o.LexOrderId
}

// GetLexOrderIdOk returns a tuple with the LexOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetLexOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.LexOrderId) {
		return nil, false
	}
	return o.LexOrderId, true
}

// HasLexOrderId returns a boolean if a field has been set.
func (o *Invoice) HasLexOrderId() bool {
	if o != nil && !IsNil(o.LexOrderId) {
		return true
	}

	return false
}

// SetLexOrderId gets a reference to the given string and assigns it to the LexOrderId field.
func (o *Invoice) SetLexOrderId(v string) {
	o.LexOrderId = &v
}

// GetLexPaymentMethod returns the LexPaymentMethod field value if set, zero value otherwise.
func (o *Invoice) GetLexPaymentMethod() string {
	if o == nil || IsNil(o.LexPaymentMethod) {
		var ret string
		return ret
	}
	return *o.LexPaymentMethod
}

// GetLexPaymentMethodOk returns a tuple with the LexPaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetLexPaymentMethodOk() (*string, bool) {
	if o == nil || IsNil(o.LexPaymentMethod) {
		return nil, false
	}
	return o.LexPaymentMethod, true
}

// HasLexPaymentMethod returns a boolean if a field has been set.
func (o *Invoice) HasLexPaymentMethod() bool {
	if o != nil && !IsNil(o.LexPaymentMethod) {
		return true
	}

	return false
}

// SetLexPaymentMethod gets a reference to the given string and assigns it to the LexPaymentMethod field.
func (o *Invoice) SetLexPaymentMethod(v string) {
	o.LexPaymentMethod = &v
}

// GetPaydashPaymentID returns the PaydashPaymentID field value if set, zero value otherwise.
func (o *Invoice) GetPaydashPaymentID() string {
	if o == nil || IsNil(o.PaydashPaymentID) {
		var ret string
		return ret
	}
	return *o.PaydashPaymentID
}

// GetPaydashPaymentIDOk returns a tuple with the PaydashPaymentID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetPaydashPaymentIDOk() (*string, bool) {
	if o == nil || IsNil(o.PaydashPaymentID) {
		return nil, false
	}
	return o.PaydashPaymentID, true
}

// HasPaydashPaymentID returns a boolean if a field has been set.
func (o *Invoice) HasPaydashPaymentID() bool {
	if o != nil && !IsNil(o.PaydashPaymentID) {
		return true
	}

	return false
}

// SetPaydashPaymentID gets a reference to the given string and assigns it to the PaydashPaymentID field.
func (o *Invoice) SetPaydashPaymentID(v string) {
	o.PaydashPaymentID = &v
}

// GetVirtualPaymentsId returns the VirtualPaymentsId field value if set, zero value otherwise.
func (o *Invoice) GetVirtualPaymentsId() string {
	if o == nil || IsNil(o.VirtualPaymentsId) {
		var ret string
		return ret
	}
	return *o.VirtualPaymentsId
}

// GetVirtualPaymentsIdOk returns a tuple with the VirtualPaymentsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetVirtualPaymentsIdOk() (*string, bool) {
	if o == nil || IsNil(o.VirtualPaymentsId) {
		return nil, false
	}
	return o.VirtualPaymentsId, true
}

// HasVirtualPaymentsId returns a boolean if a field has been set.
func (o *Invoice) HasVirtualPaymentsId() bool {
	if o != nil && !IsNil(o.VirtualPaymentsId) {
		return true
	}

	return false
}

// SetVirtualPaymentsId gets a reference to the given string and assigns it to the VirtualPaymentsId field.
func (o *Invoice) SetVirtualPaymentsId(v string) {
	o.VirtualPaymentsId = &v
}

// GetStripeClientSecret returns the StripeClientSecret field value if set, zero value otherwise.
func (o *Invoice) GetStripeClientSecret() string {
	if o == nil || IsNil(o.StripeClientSecret) {
		var ret string
		return ret
	}
	return *o.StripeClientSecret
}

// GetStripeClientSecretOk returns a tuple with the StripeClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetStripeClientSecretOk() (*string, bool) {
	if o == nil || IsNil(o.StripeClientSecret) {
		return nil, false
	}
	return o.StripeClientSecret, true
}

// HasStripeClientSecret returns a boolean if a field has been set.
func (o *Invoice) HasStripeClientSecret() bool {
	if o != nil && !IsNil(o.StripeClientSecret) {
		return true
	}

	return false
}

// SetStripeClientSecret gets a reference to the given string and assigns it to the StripeClientSecret field.
func (o *Invoice) SetStripeClientSecret(v string) {
	o.StripeClientSecret = &v
}

// GetStripePriceId returns the StripePriceId field value if set, zero value otherwise.
func (o *Invoice) GetStripePriceId() string {
	if o == nil || IsNil(o.StripePriceId) {
		var ret string
		return ret
	}
	return *o.StripePriceId
}

// GetStripePriceIdOk returns a tuple with the StripePriceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetStripePriceIdOk() (*string, bool) {
	if o == nil || IsNil(o.StripePriceId) {
		return nil, false
	}
	return o.StripePriceId, true
}

// HasStripePriceId returns a boolean if a field has been set.
func (o *Invoice) HasStripePriceId() bool {
	if o != nil && !IsNil(o.StripePriceId) {
		return true
	}

	return false
}

// SetStripePriceId gets a reference to the given string and assigns it to the StripePriceId field.
func (o *Invoice) SetStripePriceId(v string) {
	o.StripePriceId = &v
}

// GetSkrillEmail returns the SkrillEmail field value if set, zero value otherwise.
func (o *Invoice) GetSkrillEmail() string {
	if o == nil || IsNil(o.SkrillEmail) {
		var ret string
		return ret
	}
	return *o.SkrillEmail
}

// GetSkrillEmailOk returns a tuple with the SkrillEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetSkrillEmailOk() (*string, bool) {
	if o == nil || IsNil(o.SkrillEmail) {
		return nil, false
	}
	return o.SkrillEmail, true
}

// HasSkrillEmail returns a boolean if a field has been set.
func (o *Invoice) HasSkrillEmail() bool {
	if o != nil && !IsNil(o.SkrillEmail) {
		return true
	}

	return false
}

// SetSkrillEmail gets a reference to the given string and assigns it to the SkrillEmail field.
func (o *Invoice) SetSkrillEmail(v string) {
	o.SkrillEmail = &v
}

// GetSkrillSid returns the SkrillSid field value if set, zero value otherwise.
func (o *Invoice) GetSkrillSid() string {
	if o == nil || IsNil(o.SkrillSid) {
		var ret string
		return ret
	}
	return *o.SkrillSid
}

// GetSkrillSidOk returns a tuple with the SkrillSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetSkrillSidOk() (*string, bool) {
	if o == nil || IsNil(o.SkrillSid) {
		return nil, false
	}
	return o.SkrillSid, true
}

// HasSkrillSid returns a boolean if a field has been set.
func (o *Invoice) HasSkrillSid() bool {
	if o != nil && !IsNil(o.SkrillSid) {
		return true
	}

	return false
}

// SetSkrillSid gets a reference to the given string and assigns it to the SkrillSid field.
func (o *Invoice) SetSkrillSid(v string) {
	o.SkrillSid = &v
}

// GetSkrillLink returns the SkrillLink field value if set, zero value otherwise.
func (o *Invoice) GetSkrillLink() string {
	if o == nil || IsNil(o.SkrillLink) {
		var ret string
		return ret
	}
	return *o.SkrillLink
}

// GetSkrillLinkOk returns a tuple with the SkrillLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetSkrillLinkOk() (*string, bool) {
	if o == nil || IsNil(o.SkrillLink) {
		return nil, false
	}
	return o.SkrillLink, true
}

// HasSkrillLink returns a boolean if a field has been set.
func (o *Invoice) HasSkrillLink() bool {
	if o != nil && !IsNil(o.SkrillLink) {
		return true
	}

	return false
}

// SetSkrillLink gets a reference to the given string and assigns it to the SkrillLink field.
func (o *Invoice) SetSkrillLink(v string) {
	o.SkrillLink = &v
}

// GetPerfectmoneyId returns the PerfectmoneyId field value if set, zero value otherwise.
func (o *Invoice) GetPerfectmoneyId() string {
	if o == nil || IsNil(o.PerfectmoneyId) {
		var ret string
		return ret
	}
	return *o.PerfectmoneyId
}

// GetPerfectmoneyIdOk returns a tuple with the PerfectmoneyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetPerfectmoneyIdOk() (*string, bool) {
	if o == nil || IsNil(o.PerfectmoneyId) {
		return nil, false
	}
	return o.PerfectmoneyId, true
}

// HasPerfectmoneyId returns a boolean if a field has been set.
func (o *Invoice) HasPerfectmoneyId() bool {
	if o != nil && !IsNil(o.PerfectmoneyId) {
		return true
	}

	return false
}

// SetPerfectmoneyId gets a reference to the given string and assigns it to the PerfectmoneyId field.
func (o *Invoice) SetPerfectmoneyId(v string) {
	o.PerfectmoneyId = &v
}

// GetBinanceInvoiceId returns the BinanceInvoiceId field value if set, zero value otherwise.
func (o *Invoice) GetBinanceInvoiceId() string {
	if o == nil || IsNil(o.BinanceInvoiceId) {
		var ret string
		return ret
	}
	return *o.BinanceInvoiceId
}

// GetBinanceInvoiceIdOk returns a tuple with the BinanceInvoiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetBinanceInvoiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.BinanceInvoiceId) {
		return nil, false
	}
	return o.BinanceInvoiceId, true
}

// HasBinanceInvoiceId returns a boolean if a field has been set.
func (o *Invoice) HasBinanceInvoiceId() bool {
	if o != nil && !IsNil(o.BinanceInvoiceId) {
		return true
	}

	return false
}

// SetBinanceInvoiceId gets a reference to the given string and assigns it to the BinanceInvoiceId field.
func (o *Invoice) SetBinanceInvoiceId(v string) {
	o.BinanceInvoiceId = &v
}

// GetBinanceQrcode returns the BinanceQrcode field value if set, zero value otherwise.
func (o *Invoice) GetBinanceQrcode() string {
	if o == nil || IsNil(o.BinanceQrcode) {
		var ret string
		return ret
	}
	return *o.BinanceQrcode
}

// GetBinanceQrcodeOk returns a tuple with the BinanceQrcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetBinanceQrcodeOk() (*string, bool) {
	if o == nil || IsNil(o.BinanceQrcode) {
		return nil, false
	}
	return o.BinanceQrcode, true
}

// HasBinanceQrcode returns a boolean if a field has been set.
func (o *Invoice) HasBinanceQrcode() bool {
	if o != nil && !IsNil(o.BinanceQrcode) {
		return true
	}

	return false
}

// SetBinanceQrcode gets a reference to the given string and assigns it to the BinanceQrcode field.
func (o *Invoice) SetBinanceQrcode(v string) {
	o.BinanceQrcode = &v
}

// GetBinanceCheckoutUrl returns the BinanceCheckoutUrl field value if set, zero value otherwise.
func (o *Invoice) GetBinanceCheckoutUrl() string {
	if o == nil || IsNil(o.BinanceCheckoutUrl) {
		var ret string
		return ret
	}
	return *o.BinanceCheckoutUrl
}

// GetBinanceCheckoutUrlOk returns a tuple with the BinanceCheckoutUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetBinanceCheckoutUrlOk() (*string, bool) {
	if o == nil || IsNil(o.BinanceCheckoutUrl) {
		return nil, false
	}
	return o.BinanceCheckoutUrl, true
}

// HasBinanceCheckoutUrl returns a boolean if a field has been set.
func (o *Invoice) HasBinanceCheckoutUrl() bool {
	if o != nil && !IsNil(o.BinanceCheckoutUrl) {
		return true
	}

	return false
}

// SetBinanceCheckoutUrl gets a reference to the given string and assigns it to the BinanceCheckoutUrl field.
func (o *Invoice) SetBinanceCheckoutUrl(v string) {
	o.BinanceCheckoutUrl = &v
}

// GetCryptoAddress returns the CryptoAddress field value if set, zero value otherwise.
func (o *Invoice) GetCryptoAddress() string {
	if o == nil || IsNil(o.CryptoAddress) {
		var ret string
		return ret
	}
	return *o.CryptoAddress
}

// GetCryptoAddressOk returns a tuple with the CryptoAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetCryptoAddressOk() (*string, bool) {
	if o == nil || IsNil(o.CryptoAddress) {
		return nil, false
	}
	return o.CryptoAddress, true
}

// HasCryptoAddress returns a boolean if a field has been set.
func (o *Invoice) HasCryptoAddress() bool {
	if o != nil && !IsNil(o.CryptoAddress) {
		return true
	}

	return false
}

// SetCryptoAddress gets a reference to the given string and assigns it to the CryptoAddress field.
func (o *Invoice) SetCryptoAddress(v string) {
	o.CryptoAddress = &v
}

// GetCryptoAmount returns the CryptoAmount field value if set, zero value otherwise.
func (o *Invoice) GetCryptoAmount() float64 {
	if o == nil || IsNil(o.CryptoAmount) {
		var ret float64
		return ret
	}
	return *o.CryptoAmount
}

// GetCryptoAmountOk returns a tuple with the CryptoAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetCryptoAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CryptoAmount) {
		return nil, false
	}
	return o.CryptoAmount, true
}

// HasCryptoAmount returns a boolean if a field has been set.
func (o *Invoice) HasCryptoAmount() bool {
	if o != nil && !IsNil(o.CryptoAmount) {
		return true
	}

	return false
}

// SetCryptoAmount gets a reference to the given float64 and assigns it to the CryptoAmount field.
func (o *Invoice) SetCryptoAmount(v float64) {
	o.CryptoAmount = &v
}

// GetCryptoReceived returns the CryptoReceived field value if set, zero value otherwise.
func (o *Invoice) GetCryptoReceived() float64 {
	if o == nil || IsNil(o.CryptoReceived) {
		var ret float64
		return ret
	}
	return *o.CryptoReceived
}

// GetCryptoReceivedOk returns a tuple with the CryptoReceived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetCryptoReceivedOk() (*float64, bool) {
	if o == nil || IsNil(o.CryptoReceived) {
		return nil, false
	}
	return o.CryptoReceived, true
}

// HasCryptoReceived returns a boolean if a field has been set.
func (o *Invoice) HasCryptoReceived() bool {
	if o != nil && !IsNil(o.CryptoReceived) {
		return true
	}

	return false
}

// SetCryptoReceived gets a reference to the given float64 and assigns it to the CryptoReceived field.
func (o *Invoice) SetCryptoReceived(v float64) {
	o.CryptoReceived = &v
}

// GetCryptoUri returns the CryptoUri field value if set, zero value otherwise.
func (o *Invoice) GetCryptoUri() string {
	if o == nil || IsNil(o.CryptoUri) {
		var ret string
		return ret
	}
	return *o.CryptoUri
}

// GetCryptoUriOk returns a tuple with the CryptoUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetCryptoUriOk() (*string, bool) {
	if o == nil || IsNil(o.CryptoUri) {
		return nil, false
	}
	return o.CryptoUri, true
}

// HasCryptoUri returns a boolean if a field has been set.
func (o *Invoice) HasCryptoUri() bool {
	if o != nil && !IsNil(o.CryptoUri) {
		return true
	}

	return false
}

// SetCryptoUri gets a reference to the given string and assigns it to the CryptoUri field.
func (o *Invoice) SetCryptoUri(v string) {
	o.CryptoUri = &v
}

// GetCryptoConfirmationsNeeded returns the CryptoConfirmationsNeeded field value if set, zero value otherwise.
func (o *Invoice) GetCryptoConfirmationsNeeded() int32 {
	if o == nil || IsNil(o.CryptoConfirmationsNeeded) {
		var ret int32
		return ret
	}
	return *o.CryptoConfirmationsNeeded
}

// GetCryptoConfirmationsNeededOk returns a tuple with the CryptoConfirmationsNeeded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetCryptoConfirmationsNeededOk() (*int32, bool) {
	if o == nil || IsNil(o.CryptoConfirmationsNeeded) {
		return nil, false
	}
	return o.CryptoConfirmationsNeeded, true
}

// HasCryptoConfirmationsNeeded returns a boolean if a field has been set.
func (o *Invoice) HasCryptoConfirmationsNeeded() bool {
	if o != nil && !IsNil(o.CryptoConfirmationsNeeded) {
		return true
	}

	return false
}

// SetCryptoConfirmationsNeeded gets a reference to the given int32 and assigns it to the CryptoConfirmationsNeeded field.
func (o *Invoice) SetCryptoConfirmationsNeeded(v int32) {
	o.CryptoConfirmationsNeeded = &v
}

// GetCryptoScheduledPayout returns the CryptoScheduledPayout field value if set, zero value otherwise.
func (o *Invoice) GetCryptoScheduledPayout() bool {
	if o == nil || IsNil(o.CryptoScheduledPayout) {
		var ret bool
		return ret
	}
	return *o.CryptoScheduledPayout
}

// GetCryptoScheduledPayoutOk returns a tuple with the CryptoScheduledPayout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetCryptoScheduledPayoutOk() (*bool, bool) {
	if o == nil || IsNil(o.CryptoScheduledPayout) {
		return nil, false
	}
	return o.CryptoScheduledPayout, true
}

// HasCryptoScheduledPayout returns a boolean if a field has been set.
func (o *Invoice) HasCryptoScheduledPayout() bool {
	if o != nil && !IsNil(o.CryptoScheduledPayout) {
		return true
	}

	return false
}

// SetCryptoScheduledPayout gets a reference to the given bool and assigns it to the CryptoScheduledPayout field.
func (o *Invoice) SetCryptoScheduledPayout(v bool) {
	o.CryptoScheduledPayout = &v
}

// GetCryptoPayout returns the CryptoPayout field value if set, zero value otherwise.
func (o *Invoice) GetCryptoPayout() bool {
	if o == nil || IsNil(o.CryptoPayout) {
		var ret bool
		return ret
	}
	return *o.CryptoPayout
}

// GetCryptoPayoutOk returns a tuple with the CryptoPayout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetCryptoPayoutOk() (*bool, bool) {
	if o == nil || IsNil(o.CryptoPayout) {
		return nil, false
	}
	return o.CryptoPayout, true
}

// HasCryptoPayout returns a boolean if a field has been set.
func (o *Invoice) HasCryptoPayout() bool {
	if o != nil && !IsNil(o.CryptoPayout) {
		return true
	}

	return false
}

// SetCryptoPayout gets a reference to the given bool and assigns it to the CryptoPayout field.
func (o *Invoice) SetCryptoPayout(v bool) {
	o.CryptoPayout = &v
}

// GetFeeBilled returns the FeeBilled field value if set, zero value otherwise.
func (o *Invoice) GetFeeBilled() bool {
	if o == nil || IsNil(o.FeeBilled) {
		var ret bool
		return ret
	}
	return *o.FeeBilled
}

// GetFeeBilledOk returns a tuple with the FeeBilled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetFeeBilledOk() (*bool, bool) {
	if o == nil || IsNil(o.FeeBilled) {
		return nil, false
	}
	return o.FeeBilled, true
}

// HasFeeBilled returns a boolean if a field has been set.
func (o *Invoice) HasFeeBilled() bool {
	if o != nil && !IsNil(o.FeeBilled) {
		return true
	}

	return false
}

// SetFeeBilled gets a reference to the given bool and assigns it to the FeeBilled field.
func (o *Invoice) SetFeeBilled(v bool) {
	o.FeeBilled = &v
}

// GetBillInfo returns the BillInfo field value if set, zero value otherwise.
func (o *Invoice) GetBillInfo() map[string]interface{} {
	if o == nil || IsNil(o.BillInfo) {
		var ret map[string]interface{}
		return ret
	}
	return o.BillInfo
}

// GetBillInfoOk returns a tuple with the BillInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetBillInfoOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.BillInfo) {
		return map[string]interface{}{}, false
	}
	return o.BillInfo, true
}

// HasBillInfo returns a boolean if a field has been set.
func (o *Invoice) HasBillInfo() bool {
	if o != nil && !IsNil(o.BillInfo) {
		return true
	}

	return false
}

// SetBillInfo gets a reference to the given map[string]interface{} and assigns it to the BillInfo field.
func (o *Invoice) SetBillInfo(v map[string]interface{}) {
	o.BillInfo = v
}

// GetCashappQrcode returns the CashappQrcode field value if set, zero value otherwise.
func (o *Invoice) GetCashappQrcode() string {
	if o == nil || IsNil(o.CashappQrcode) {
		var ret string
		return ret
	}
	return *o.CashappQrcode
}

// GetCashappQrcodeOk returns a tuple with the CashappQrcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetCashappQrcodeOk() (*string, bool) {
	if o == nil || IsNil(o.CashappQrcode) {
		return nil, false
	}
	return o.CashappQrcode, true
}

// HasCashappQrcode returns a boolean if a field has been set.
func (o *Invoice) HasCashappQrcode() bool {
	if o != nil && !IsNil(o.CashappQrcode) {
		return true
	}

	return false
}

// SetCashappQrcode gets a reference to the given string and assigns it to the CashappQrcode field.
func (o *Invoice) SetCashappQrcode(v string) {
	o.CashappQrcode = &v
}

// GetCashappNote returns the CashappNote field value if set, zero value otherwise.
func (o *Invoice) GetCashappNote() string {
	if o == nil || IsNil(o.CashappNote) {
		var ret string
		return ret
	}
	return *o.CashappNote
}

// GetCashappNoteOk returns a tuple with the CashappNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetCashappNoteOk() (*string, bool) {
	if o == nil || IsNil(o.CashappNote) {
		return nil, false
	}
	return o.CashappNote, true
}

// HasCashappNote returns a boolean if a field has been set.
func (o *Invoice) HasCashappNote() bool {
	if o != nil && !IsNil(o.CashappNote) {
		return true
	}

	return false
}

// SetCashappNote gets a reference to the given string and assigns it to the CashappNote field.
func (o *Invoice) SetCashappNote(v string) {
	o.CashappNote = &v
}

// GetCashappCashtag returns the CashappCashtag field value if set, zero value otherwise.
func (o *Invoice) GetCashappCashtag() string {
	if o == nil || IsNil(o.CashappCashtag) {
		var ret string
		return ret
	}
	return *o.CashappCashtag
}

// GetCashappCashtagOk returns a tuple with the CashappCashtag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetCashappCashtagOk() (*string, bool) {
	if o == nil || IsNil(o.CashappCashtag) {
		return nil, false
	}
	return o.CashappCashtag, true
}

// HasCashappCashtag returns a boolean if a field has been set.
func (o *Invoice) HasCashappCashtag() bool {
	if o != nil && !IsNil(o.CashappCashtag) {
		return true
	}

	return false
}

// SetCashappCashtag gets a reference to the given string and assigns it to the CashappCashtag field.
func (o *Invoice) SetCashappCashtag(v string) {
	o.CashappCashtag = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *Invoice) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *Invoice) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *Invoice) SetCountry(v string) {
	o.Country = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *Invoice) GetLocation() string {
	if o == nil || IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetLocationOk() (*string, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *Invoice) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *Invoice) SetLocation(v string) {
	o.Location = &v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *Invoice) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *Invoice) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *Invoice) SetIp(v string) {
	o.Ip = &v
}

// GetIsVpnOrProxy returns the IsVpnOrProxy field value if set, zero value otherwise.
func (o *Invoice) GetIsVpnOrProxy() bool {
	if o == nil || IsNil(o.IsVpnOrProxy) {
		var ret bool
		return ret
	}
	return *o.IsVpnOrProxy
}

// GetIsVpnOrProxyOk returns a tuple with the IsVpnOrProxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetIsVpnOrProxyOk() (*bool, bool) {
	if o == nil || IsNil(o.IsVpnOrProxy) {
		return nil, false
	}
	return o.IsVpnOrProxy, true
}

// HasIsVpnOrProxy returns a boolean if a field has been set.
func (o *Invoice) HasIsVpnOrProxy() bool {
	if o != nil && !IsNil(o.IsVpnOrProxy) {
		return true
	}

	return false
}

// SetIsVpnOrProxy gets a reference to the given bool and assigns it to the IsVpnOrProxy field.
func (o *Invoice) SetIsVpnOrProxy(v bool) {
	o.IsVpnOrProxy = &v
}

// GetUserAgent returns the UserAgent field value if set, zero value otherwise.
func (o *Invoice) GetUserAgent() string {
	if o == nil || IsNil(o.UserAgent) {
		var ret string
		return ret
	}
	return *o.UserAgent
}

// GetUserAgentOk returns a tuple with the UserAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetUserAgentOk() (*string, bool) {
	if o == nil || IsNil(o.UserAgent) {
		return nil, false
	}
	return o.UserAgent, true
}

// HasUserAgent returns a boolean if a field has been set.
func (o *Invoice) HasUserAgent() bool {
	if o != nil && !IsNil(o.UserAgent) {
		return true
	}

	return false
}

// SetUserAgent gets a reference to the given string and assigns it to the UserAgent field.
func (o *Invoice) SetUserAgent(v string) {
	o.UserAgent = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *Invoice) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *Invoice) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *Invoice) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetCouponId returns the CouponId field value if set, zero value otherwise.
func (o *Invoice) GetCouponId() string {
	if o == nil || IsNil(o.CouponId) {
		var ret string
		return ret
	}
	return *o.CouponId
}

// GetCouponIdOk returns a tuple with the CouponId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetCouponIdOk() (*string, bool) {
	if o == nil || IsNil(o.CouponId) {
		return nil, false
	}
	return o.CouponId, true
}

// HasCouponId returns a boolean if a field has been set.
func (o *Invoice) HasCouponId() bool {
	if o != nil && !IsNil(o.CouponId) {
		return true
	}

	return false
}

// SetCouponId gets a reference to the given string and assigns it to the CouponId field.
func (o *Invoice) SetCouponId(v string) {
	o.CouponId = &v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *Invoice) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *Invoice) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *Invoice) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetDeveloperInvoice returns the DeveloperInvoice field value if set, zero value otherwise.
func (o *Invoice) GetDeveloperInvoice() bool {
	if o == nil || IsNil(o.DeveloperInvoice) {
		var ret bool
		return ret
	}
	return *o.DeveloperInvoice
}

// GetDeveloperInvoiceOk returns a tuple with the DeveloperInvoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetDeveloperInvoiceOk() (*bool, bool) {
	if o == nil || IsNil(o.DeveloperInvoice) {
		return nil, false
	}
	return o.DeveloperInvoice, true
}

// HasDeveloperInvoice returns a boolean if a field has been set.
func (o *Invoice) HasDeveloperInvoice() bool {
	if o != nil && !IsNil(o.DeveloperInvoice) {
		return true
	}

	return false
}

// SetDeveloperInvoice gets a reference to the given bool and assigns it to the DeveloperInvoice field.
func (o *Invoice) SetDeveloperInvoice(v bool) {
	o.DeveloperInvoice = &v
}

// GetDeveloperTitle returns the DeveloperTitle field value if set, zero value otherwise.
func (o *Invoice) GetDeveloperTitle() string {
	if o == nil || IsNil(o.DeveloperTitle) {
		var ret string
		return ret
	}
	return *o.DeveloperTitle
}

// GetDeveloperTitleOk returns a tuple with the DeveloperTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetDeveloperTitleOk() (*string, bool) {
	if o == nil || IsNil(o.DeveloperTitle) {
		return nil, false
	}
	return o.DeveloperTitle, true
}

// HasDeveloperTitle returns a boolean if a field has been set.
func (o *Invoice) HasDeveloperTitle() bool {
	if o != nil && !IsNil(o.DeveloperTitle) {
		return true
	}

	return false
}

// SetDeveloperTitle gets a reference to the given string and assigns it to the DeveloperTitle field.
func (o *Invoice) SetDeveloperTitle(v string) {
	o.DeveloperTitle = &v
}

// GetDeveloperWebhook returns the DeveloperWebhook field value if set, zero value otherwise.
func (o *Invoice) GetDeveloperWebhook() string {
	if o == nil || IsNil(o.DeveloperWebhook) {
		var ret string
		return ret
	}
	return *o.DeveloperWebhook
}

// GetDeveloperWebhookOk returns a tuple with the DeveloperWebhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetDeveloperWebhookOk() (*string, bool) {
	if o == nil || IsNil(o.DeveloperWebhook) {
		return nil, false
	}
	return o.DeveloperWebhook, true
}

// HasDeveloperWebhook returns a boolean if a field has been set.
func (o *Invoice) HasDeveloperWebhook() bool {
	if o != nil && !IsNil(o.DeveloperWebhook) {
		return true
	}

	return false
}

// SetDeveloperWebhook gets a reference to the given string and assigns it to the DeveloperWebhook field.
func (o *Invoice) SetDeveloperWebhook(v string) {
	o.DeveloperWebhook = &v
}

// GetDeveloperReturnUrl returns the DeveloperReturnUrl field value if set, zero value otherwise.
func (o *Invoice) GetDeveloperReturnUrl() string {
	if o == nil || IsNil(o.DeveloperReturnUrl) {
		var ret string
		return ret
	}
	return *o.DeveloperReturnUrl
}

// GetDeveloperReturnUrlOk returns a tuple with the DeveloperReturnUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetDeveloperReturnUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DeveloperReturnUrl) {
		return nil, false
	}
	return o.DeveloperReturnUrl, true
}

// HasDeveloperReturnUrl returns a boolean if a field has been set.
func (o *Invoice) HasDeveloperReturnUrl() bool {
	if o != nil && !IsNil(o.DeveloperReturnUrl) {
		return true
	}

	return false
}

// SetDeveloperReturnUrl gets a reference to the given string and assigns it to the DeveloperReturnUrl field.
func (o *Invoice) SetDeveloperReturnUrl(v string) {
	o.DeveloperReturnUrl = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Invoice) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Invoice) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Invoice) SetStatus(v string) {
	o.Status = &v
}

// GetStatusDetails returns the StatusDetails field value if set, zero value otherwise.
func (o *Invoice) GetStatusDetails() string {
	if o == nil || IsNil(o.StatusDetails) {
		var ret string
		return ret
	}
	return *o.StatusDetails
}

// GetStatusDetailsOk returns a tuple with the StatusDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetStatusDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.StatusDetails) {
		return nil, false
	}
	return o.StatusDetails, true
}

// HasStatusDetails returns a boolean if a field has been set.
func (o *Invoice) HasStatusDetails() bool {
	if o != nil && !IsNil(o.StatusDetails) {
		return true
	}

	return false
}

// SetStatusDetails gets a reference to the given string and assigns it to the StatusDetails field.
func (o *Invoice) SetStatusDetails(v string) {
	o.StatusDetails = &v
}

// GetVoidDetails returns the VoidDetails field value if set, zero value otherwise.
func (o *Invoice) GetVoidDetails() string {
	if o == nil || IsNil(o.VoidDetails) {
		var ret string
		return ret
	}
	return *o.VoidDetails
}

// GetVoidDetailsOk returns a tuple with the VoidDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetVoidDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.VoidDetails) {
		return nil, false
	}
	return o.VoidDetails, true
}

// HasVoidDetails returns a boolean if a field has been set.
func (o *Invoice) HasVoidDetails() bool {
	if o != nil && !IsNil(o.VoidDetails) {
		return true
	}

	return false
}

// SetVoidDetails gets a reference to the given string and assigns it to the VoidDetails field.
func (o *Invoice) SetVoidDetails(v string) {
	o.VoidDetails = &v
}

// GetDiscount returns the Discount field value if set, zero value otherwise.
func (o *Invoice) GetDiscount() float64 {
	if o == nil || IsNil(o.Discount) {
		var ret float64
		return ret
	}
	return *o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetDiscountOk() (*float64, bool) {
	if o == nil || IsNil(o.Discount) {
		return nil, false
	}
	return o.Discount, true
}

// HasDiscount returns a boolean if a field has been set.
func (o *Invoice) HasDiscount() bool {
	if o != nil && !IsNil(o.Discount) {
		return true
	}

	return false
}

// SetDiscount gets a reference to the given float64 and assigns it to the Discount field.
func (o *Invoice) SetDiscount(v float64) {
	o.Discount = &v
}

// GetFeePercentage returns the FeePercentage field value if set, zero value otherwise.
func (o *Invoice) GetFeePercentage() int32 {
	if o == nil || IsNil(o.FeePercentage) {
		var ret int32
		return ret
	}
	return *o.FeePercentage
}

// GetFeePercentageOk returns a tuple with the FeePercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetFeePercentageOk() (*int32, bool) {
	if o == nil || IsNil(o.FeePercentage) {
		return nil, false
	}
	return o.FeePercentage, true
}

// HasFeePercentage returns a boolean if a field has been set.
func (o *Invoice) HasFeePercentage() bool {
	if o != nil && !IsNil(o.FeePercentage) {
		return true
	}

	return false
}

// SetFeePercentage gets a reference to the given int32 and assigns it to the FeePercentage field.
func (o *Invoice) SetFeePercentage(v int32) {
	o.FeePercentage = &v
}

// GetFeeBreakdown returns the FeeBreakdown field value if set, zero value otherwise.
func (o *Invoice) GetFeeBreakdown() FeeBreakdown {
	if o == nil || IsNil(o.FeeBreakdown) {
		var ret FeeBreakdown
		return ret
	}
	return *o.FeeBreakdown
}

// GetFeeBreakdownOk returns a tuple with the FeeBreakdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetFeeBreakdownOk() (*FeeBreakdown, bool) {
	if o == nil || IsNil(o.FeeBreakdown) {
		return nil, false
	}
	return o.FeeBreakdown, true
}

// HasFeeBreakdown returns a boolean if a field has been set.
func (o *Invoice) HasFeeBreakdown() bool {
	if o != nil && !IsNil(o.FeeBreakdown) {
		return true
	}

	return false
}

// SetFeeBreakdown gets a reference to the given FeeBreakdown and assigns it to the FeeBreakdown field.
func (o *Invoice) SetFeeBreakdown(v FeeBreakdown) {
	o.FeeBreakdown = &v
}

// GetDiscountBreakdown returns the DiscountBreakdown field value if set, zero value otherwise.
func (o *Invoice) GetDiscountBreakdown() map[string]interface{} {
	if o == nil || IsNil(o.DiscountBreakdown) {
		var ret map[string]interface{}
		return ret
	}
	return o.DiscountBreakdown
}

// GetDiscountBreakdownOk returns a tuple with the DiscountBreakdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetDiscountBreakdownOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.DiscountBreakdown) {
		return map[string]interface{}{}, false
	}
	return o.DiscountBreakdown, true
}

// HasDiscountBreakdown returns a boolean if a field has been set.
func (o *Invoice) HasDiscountBreakdown() bool {
	if o != nil && !IsNil(o.DiscountBreakdown) {
		return true
	}

	return false
}

// SetDiscountBreakdown gets a reference to the given map[string]interface{} and assigns it to the DiscountBreakdown field.
func (o *Invoice) SetDiscountBreakdown(v map[string]interface{}) {
	o.DiscountBreakdown = v
}

// GetDayValue returns the DayValue field value if set, zero value otherwise.
// Deprecated
func (o *Invoice) GetDayValue() int32 {
	if o == nil || IsNil(o.DayValue) {
		var ret int32
		return ret
	}
	return *o.DayValue
}

// GetDayValueOk returns a tuple with the DayValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *Invoice) GetDayValueOk() (*int32, bool) {
	if o == nil || IsNil(o.DayValue) {
		return nil, false
	}
	return o.DayValue, true
}

// HasDayValue returns a boolean if a field has been set.
func (o *Invoice) HasDayValue() bool {
	if o != nil && !IsNil(o.DayValue) {
		return true
	}

	return false
}

// SetDayValue gets a reference to the given int32 and assigns it to the DayValue field.
// Deprecated
func (o *Invoice) SetDayValue(v int32) {
	o.DayValue = &v
}

// GetDay returns the Day field value if set, zero value otherwise.
// Deprecated
func (o *Invoice) GetDay() string {
	if o == nil || IsNil(o.Day) {
		var ret string
		return ret
	}
	return *o.Day
}

// GetDayOk returns a tuple with the Day field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *Invoice) GetDayOk() (*string, bool) {
	if o == nil || IsNil(o.Day) {
		return nil, false
	}
	return o.Day, true
}

// HasDay returns a boolean if a field has been set.
func (o *Invoice) HasDay() bool {
	if o != nil && !IsNil(o.Day) {
		return true
	}

	return false
}

// SetDay gets a reference to the given string and assigns it to the Day field.
// Deprecated
func (o *Invoice) SetDay(v string) {
	o.Day = &v
}

// GetMonth returns the Month field value if set, zero value otherwise.
// Deprecated
func (o *Invoice) GetMonth() string {
	if o == nil || IsNil(o.Month) {
		var ret string
		return ret
	}
	return *o.Month
}

// GetMonthOk returns a tuple with the Month field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *Invoice) GetMonthOk() (*string, bool) {
	if o == nil || IsNil(o.Month) {
		return nil, false
	}
	return o.Month, true
}

// HasMonth returns a boolean if a field has been set.
func (o *Invoice) HasMonth() bool {
	if o != nil && !IsNil(o.Month) {
		return true
	}

	return false
}

// SetMonth gets a reference to the given string and assigns it to the Month field.
// Deprecated
func (o *Invoice) SetMonth(v string) {
	o.Month = &v
}

// GetYear returns the Year field value if set, zero value otherwise.
// Deprecated
func (o *Invoice) GetYear() int32 {
	if o == nil || IsNil(o.Year) {
		var ret int32
		return ret
	}
	return *o.Year
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *Invoice) GetYearOk() (*int32, bool) {
	if o == nil || IsNil(o.Year) {
		return nil, false
	}
	return o.Year, true
}

// HasYear returns a boolean if a field has been set.
func (o *Invoice) HasYear() bool {
	if o != nil && !IsNil(o.Year) {
		return true
	}

	return false
}

// SetYear gets a reference to the given int32 and assigns it to the Year field.
// Deprecated
func (o *Invoice) SetYear(v int32) {
	o.Year = &v
}

// GetProductAddons returns the ProductAddons field value if set, zero value otherwise.
func (o *Invoice) GetProductAddons() []ProductAddonsInner {
	if o == nil || IsNil(o.ProductAddons) {
		var ret []ProductAddonsInner
		return ret
	}
	return o.ProductAddons
}

// GetProductAddonsOk returns a tuple with the ProductAddons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetProductAddonsOk() ([]ProductAddonsInner, bool) {
	if o == nil || IsNil(o.ProductAddons) {
		return nil, false
	}
	return o.ProductAddons, true
}

// HasProductAddons returns a boolean if a field has been set.
func (o *Invoice) HasProductAddons() bool {
	if o != nil && !IsNil(o.ProductAddons) {
		return true
	}

	return false
}

// SetProductAddons gets a reference to the given []ProductAddonsInner and assigns it to the ProductAddons field.
func (o *Invoice) SetProductAddons(v []ProductAddonsInner) {
	o.ProductAddons = v
}

// GetBundleConfig returns the BundleConfig field value if set, zero value otherwise.
func (o *Invoice) GetBundleConfig() []BundleConfig {
	if o == nil || IsNil(o.BundleConfig) {
		var ret []BundleConfig
		return ret
	}
	return o.BundleConfig
}

// GetBundleConfigOk returns a tuple with the BundleConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetBundleConfigOk() ([]BundleConfig, bool) {
	if o == nil || IsNil(o.BundleConfig) {
		return nil, false
	}
	return o.BundleConfig, true
}

// HasBundleConfig returns a boolean if a field has been set.
func (o *Invoice) HasBundleConfig() bool {
	if o != nil && !IsNil(o.BundleConfig) {
		return true
	}

	return false
}

// SetBundleConfig gets a reference to the given []BundleConfig and assigns it to the BundleConfig field.
func (o *Invoice) SetBundleConfig(v []BundleConfig) {
	o.BundleConfig = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Invoice) GetCreatedAt() int32 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetCreatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Invoice) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *Invoice) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Invoice) GetUpdatedAt() int32 {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Invoice) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *Invoice) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *Invoice) GetUpdatedBy() int32 {
	if o == nil || IsNil(o.UpdatedBy) {
		var ret int32
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetUpdatedByOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdatedBy) {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *Invoice) HasUpdatedBy() bool {
	if o != nil && !IsNil(o.UpdatedBy) {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given int32 and assigns it to the UpdatedBy field.
func (o *Invoice) SetUpdatedBy(v int32) {
	o.UpdatedBy = &v
}

// GetApprovedAddress returns the ApprovedAddress field value if set, zero value otherwise.
func (o *Invoice) GetApprovedAddress() ApprovedAddress {
	if o == nil || IsNil(o.ApprovedAddress) {
		var ret ApprovedAddress
		return ret
	}
	return *o.ApprovedAddress
}

// GetApprovedAddressOk returns a tuple with the ApprovedAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetApprovedAddressOk() (*ApprovedAddress, bool) {
	if o == nil || IsNil(o.ApprovedAddress) {
		return nil, false
	}
	return o.ApprovedAddress, true
}

// HasApprovedAddress returns a boolean if a field has been set.
func (o *Invoice) HasApprovedAddress() bool {
	if o != nil && !IsNil(o.ApprovedAddress) {
		return true
	}

	return false
}

// SetApprovedAddress gets a reference to the given ApprovedAddress and assigns it to the ApprovedAddress field.
func (o *Invoice) SetApprovedAddress(v ApprovedAddress) {
	o.ApprovedAddress = &v
}

// GetServiceText returns the ServiceText field value if set, zero value otherwise.
func (o *Invoice) GetServiceText() string {
	if o == nil || IsNil(o.ServiceText) {
		var ret string
		return ret
	}
	return *o.ServiceText
}

// GetServiceTextOk returns a tuple with the ServiceText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetServiceTextOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceText) {
		return nil, false
	}
	return o.ServiceText, true
}

// HasServiceText returns a boolean if a field has been set.
func (o *Invoice) HasServiceText() bool {
	if o != nil && !IsNil(o.ServiceText) {
		return true
	}

	return false
}

// SetServiceText gets a reference to the given string and assigns it to the ServiceText field.
func (o *Invoice) SetServiceText(v string) {
	o.ServiceText = &v
}

// GetIpInfo returns the IpInfo field value if set, zero value otherwise.
func (o *Invoice) GetIpInfo() IpInfo {
	if o == nil || IsNil(o.IpInfo) {
		var ret IpInfo
		return ret
	}
	return *o.IpInfo
}

// GetIpInfoOk returns a tuple with the IpInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetIpInfoOk() (*IpInfo, bool) {
	if o == nil || IsNil(o.IpInfo) {
		return nil, false
	}
	return o.IpInfo, true
}

// HasIpInfo returns a boolean if a field has been set.
func (o *Invoice) HasIpInfo() bool {
	if o != nil && !IsNil(o.IpInfo) {
		return true
	}

	return false
}

// SetIpInfo gets a reference to the given IpInfo and assigns it to the IpInfo field.
func (o *Invoice) SetIpInfo(v IpInfo) {
	o.IpInfo = &v
}

// GetWebhooks returns the Webhooks field value if set, zero value otherwise.
func (o *Invoice) GetWebhooks() []Webhook {
	if o == nil || IsNil(o.Webhooks) {
		var ret []Webhook
		return ret
	}
	return o.Webhooks
}

// GetWebhooksOk returns a tuple with the Webhooks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetWebhooksOk() ([]Webhook, bool) {
	if o == nil || IsNil(o.Webhooks) {
		return nil, false
	}
	return o.Webhooks, true
}

// HasWebhooks returns a boolean if a field has been set.
func (o *Invoice) HasWebhooks() bool {
	if o != nil && !IsNil(o.Webhooks) {
		return true
	}

	return false
}

// SetWebhooks gets a reference to the given []Webhook and assigns it to the Webhooks field.
func (o *Invoice) SetWebhooks(v []Webhook) {
	o.Webhooks = v
}

// GetRewardsData returns the RewardsData field value if set, zero value otherwise.
func (o *Invoice) GetRewardsData() []InvoiceRewardsDataInner {
	if o == nil || IsNil(o.RewardsData) {
		var ret []InvoiceRewardsDataInner
		return ret
	}
	return o.RewardsData
}

// GetRewardsDataOk returns a tuple with the RewardsData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetRewardsDataOk() ([]InvoiceRewardsDataInner, bool) {
	if o == nil || IsNil(o.RewardsData) {
		return nil, false
	}
	return o.RewardsData, true
}

// HasRewardsData returns a boolean if a field has been set.
func (o *Invoice) HasRewardsData() bool {
	if o != nil && !IsNil(o.RewardsData) {
		return true
	}

	return false
}

// SetRewardsData gets a reference to the given []InvoiceRewardsDataInner and assigns it to the RewardsData field.
func (o *Invoice) SetRewardsData(v []InvoiceRewardsDataInner) {
	o.RewardsData = v
}

// GetPaypalDispute returns the PaypalDispute field value if set, zero value otherwise.
func (o *Invoice) GetPaypalDispute() PaypalDispute {
	if o == nil || IsNil(o.PaypalDispute) {
		var ret PaypalDispute
		return ret
	}
	return *o.PaypalDispute
}

// GetPaypalDisputeOk returns a tuple with the PaypalDispute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetPaypalDisputeOk() (*PaypalDispute, bool) {
	if o == nil || IsNil(o.PaypalDispute) {
		return nil, false
	}
	return o.PaypalDispute, true
}

// HasPaypalDispute returns a boolean if a field has been set.
func (o *Invoice) HasPaypalDispute() bool {
	if o != nil && !IsNil(o.PaypalDispute) {
		return true
	}

	return false
}

// SetPaypalDispute gets a reference to the given PaypalDispute and assigns it to the PaypalDispute field.
func (o *Invoice) SetPaypalDispute(v PaypalDispute) {
	o.PaypalDispute = &v
}

// GetProductDownloads returns the ProductDownloads field value if set, zero value otherwise.
func (o *Invoice) GetProductDownloads() []ProductDownload {
	if o == nil || IsNil(o.ProductDownloads) {
		var ret []ProductDownload
		return ret
	}
	return o.ProductDownloads
}

// GetProductDownloadsOk returns a tuple with the ProductDownloads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetProductDownloadsOk() ([]ProductDownload, bool) {
	if o == nil || IsNil(o.ProductDownloads) {
		return nil, false
	}
	return o.ProductDownloads, true
}

// HasProductDownloads returns a boolean if a field has been set.
func (o *Invoice) HasProductDownloads() bool {
	if o != nil && !IsNil(o.ProductDownloads) {
		return true
	}

	return false
}

// SetProductDownloads gets a reference to the given []ProductDownload and assigns it to the ProductDownloads field.
func (o *Invoice) SetProductDownloads(v []ProductDownload) {
	o.ProductDownloads = v
}

// GetPaymentLinkId returns the PaymentLinkId field value if set, zero value otherwise.
func (o *Invoice) GetPaymentLinkId() string {
	if o == nil || IsNil(o.PaymentLinkId) {
		var ret string
		return ret
	}
	return *o.PaymentLinkId
}

// GetPaymentLinkIdOk returns a tuple with the PaymentLinkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetPaymentLinkIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentLinkId) {
		return nil, false
	}
	return o.PaymentLinkId, true
}

// HasPaymentLinkId returns a boolean if a field has been set.
func (o *Invoice) HasPaymentLinkId() bool {
	if o != nil && !IsNil(o.PaymentLinkId) {
		return true
	}

	return false
}

// SetPaymentLinkId gets a reference to the given string and assigns it to the PaymentLinkId field.
func (o *Invoice) SetPaymentLinkId(v string) {
	o.PaymentLinkId = &v
}

// GetCashappEmailConfigured returns the CashappEmailConfigured field value if set, zero value otherwise.
func (o *Invoice) GetCashappEmailConfigured() bool {
	if o == nil || IsNil(o.CashappEmailConfigured) {
		var ret bool
		return ret
	}
	return *o.CashappEmailConfigured
}

// GetCashappEmailConfiguredOk returns a tuple with the CashappEmailConfigured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetCashappEmailConfiguredOk() (*bool, bool) {
	if o == nil || IsNil(o.CashappEmailConfigured) {
		return nil, false
	}
	return o.CashappEmailConfigured, true
}

// HasCashappEmailConfigured returns a boolean if a field has been set.
func (o *Invoice) HasCashappEmailConfigured() bool {
	if o != nil && !IsNil(o.CashappEmailConfigured) {
		return true
	}

	return false
}

// SetCashappEmailConfigured gets a reference to the given bool and assigns it to the CashappEmailConfigured field.
func (o *Invoice) SetCashappEmailConfigured(v bool) {
	o.CashappEmailConfigured = &v
}

// GetLicense returns the License field value if set, zero value otherwise.
func (o *Invoice) GetLicense() bool {
	if o == nil || IsNil(o.License) {
		var ret bool
		return ret
	}
	return *o.License
}

// GetLicenseOk returns a tuple with the License field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetLicenseOk() (*bool, bool) {
	if o == nil || IsNil(o.License) {
		return nil, false
	}
	return o.License, true
}

// HasLicense returns a boolean if a field has been set.
func (o *Invoice) HasLicense() bool {
	if o != nil && !IsNil(o.License) {
		return true
	}

	return false
}

// SetLicense gets a reference to the given bool and assigns it to the License field.
func (o *Invoice) SetLicense(v bool) {
	o.License = &v
}

// GetStatusHistory returns the StatusHistory field value if set, zero value otherwise.
func (o *Invoice) GetStatusHistory() []InvoiceStatus {
	if o == nil || IsNil(o.StatusHistory) {
		var ret []InvoiceStatus
		return ret
	}
	return o.StatusHistory
}

// GetStatusHistoryOk returns a tuple with the StatusHistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetStatusHistoryOk() ([]InvoiceStatus, bool) {
	if o == nil || IsNil(o.StatusHistory) {
		return nil, false
	}
	return o.StatusHistory, true
}

// HasStatusHistory returns a boolean if a field has been set.
func (o *Invoice) HasStatusHistory() bool {
	if o != nil && !IsNil(o.StatusHistory) {
		return true
	}

	return false
}

// SetStatusHistory gets a reference to the given []InvoiceStatus and assigns it to the StatusHistory field.
func (o *Invoice) SetStatusHistory(v []InvoiceStatus) {
	o.StatusHistory = v
}

// GetAmlWallets returns the AmlWallets field value if set, zero value otherwise.
func (o *Invoice) GetAmlWallets() []AmlWallet {
	if o == nil || IsNil(o.AmlWallets) {
		var ret []AmlWallet
		return ret
	}
	return o.AmlWallets
}

// GetAmlWalletsOk returns a tuple with the AmlWallets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetAmlWalletsOk() ([]AmlWallet, bool) {
	if o == nil || IsNil(o.AmlWallets) {
		return nil, false
	}
	return o.AmlWallets, true
}

// HasAmlWallets returns a boolean if a field has been set.
func (o *Invoice) HasAmlWallets() bool {
	if o != nil && !IsNil(o.AmlWallets) {
		return true
	}

	return false
}

// SetAmlWallets gets a reference to the given []AmlWallet and assigns it to the AmlWallets field.
func (o *Invoice) SetAmlWallets(v []AmlWallet) {
	o.AmlWallets = v
}

// GetCryptoTransactions returns the CryptoTransactions field value if set, zero value otherwise.
func (o *Invoice) GetCryptoTransactions() []CryptoTransaction {
	if o == nil || IsNil(o.CryptoTransactions) {
		var ret []CryptoTransaction
		return ret
	}
	return o.CryptoTransactions
}

// GetCryptoTransactionsOk returns a tuple with the CryptoTransactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetCryptoTransactionsOk() ([]CryptoTransaction, bool) {
	if o == nil || IsNil(o.CryptoTransactions) {
		return nil, false
	}
	return o.CryptoTransactions, true
}

// HasCryptoTransactions returns a boolean if a field has been set.
func (o *Invoice) HasCryptoTransactions() bool {
	if o != nil && !IsNil(o.CryptoTransactions) {
		return true
	}

	return false
}

// SetCryptoTransactions gets a reference to the given []CryptoTransaction and assigns it to the CryptoTransactions field.
func (o *Invoice) SetCryptoTransactions(v []CryptoTransaction) {
	o.CryptoTransactions = v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *Invoice) GetProduct() Product {
	if o == nil || IsNil(o.Product) {
		var ret Product
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetProductOk() (*Product, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *Invoice) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given Product and assigns it to the Product field.
func (o *Invoice) SetProduct(v Product) {
	o.Product = &v
}

// GetTotalConversions returns the TotalConversions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Invoice) GetTotalConversions() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.TotalConversions
}

// GetTotalConversionsOk returns a tuple with the TotalConversions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Invoice) GetTotalConversionsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.TotalConversions) {
		return nil, false
	}
	return &o.TotalConversions, true
}

// HasTotalConversions returns a boolean if a field has been set.
func (o *Invoice) HasTotalConversions() bool {
	if o != nil && !IsNil(o.TotalConversions) {
		return true
	}

	return false
}

// SetTotalConversions gets a reference to the given interface{} and assigns it to the TotalConversions field.
func (o *Invoice) SetTotalConversions(v interface{}) {
	o.TotalConversions = v
}

// GetTheme returns the Theme field value if set, zero value otherwise.
func (o *Invoice) GetTheme() string {
	if o == nil || IsNil(o.Theme) {
		var ret string
		return ret
	}
	return *o.Theme
}

// GetThemeOk returns a tuple with the Theme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetThemeOk() (*string, bool) {
	if o == nil || IsNil(o.Theme) {
		return nil, false
	}
	return o.Theme, true
}

// HasTheme returns a boolean if a field has been set.
func (o *Invoice) HasTheme() bool {
	if o != nil && !IsNil(o.Theme) {
		return true
	}

	return false
}

// SetTheme gets a reference to the given string and assigns it to the Theme field.
func (o *Invoice) SetTheme(v string) {
	o.Theme = &v
}

// GetDarkMode returns the DarkMode field value if set, zero value otherwise.
func (o *Invoice) GetDarkMode() int32 {
	if o == nil || IsNil(o.DarkMode) {
		var ret int32
		return ret
	}
	return *o.DarkMode
}

// GetDarkModeOk returns a tuple with the DarkMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetDarkModeOk() (*int32, bool) {
	if o == nil || IsNil(o.DarkMode) {
		return nil, false
	}
	return o.DarkMode, true
}

// HasDarkMode returns a boolean if a field has been set.
func (o *Invoice) HasDarkMode() bool {
	if o != nil && !IsNil(o.DarkMode) {
		return true
	}

	return false
}

// SetDarkMode gets a reference to the given int32 and assigns it to the DarkMode field.
func (o *Invoice) SetDarkMode(v int32) {
	o.DarkMode = &v
}

// GetCryptoMode returns the CryptoMode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Invoice) GetCryptoMode() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.CryptoMode
}

// GetCryptoModeOk returns a tuple with the CryptoMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Invoice) GetCryptoModeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.CryptoMode) {
		return nil, false
	}
	return &o.CryptoMode, true
}

// HasCryptoMode returns a boolean if a field has been set.
func (o *Invoice) HasCryptoMode() bool {
	if o != nil && !IsNil(o.CryptoMode) {
		return true
	}

	return false
}

// SetCryptoMode gets a reference to the given interface{} and assigns it to the CryptoMode field.
func (o *Invoice) SetCryptoMode(v interface{}) {
	o.CryptoMode = v
}

// GetGatewaysAvailable returns the GatewaysAvailable field value if set, zero value otherwise.
func (o *Invoice) GetGatewaysAvailable() []string {
	if o == nil || IsNil(o.GatewaysAvailable) {
		var ret []string
		return ret
	}
	return o.GatewaysAvailable
}

// GetGatewaysAvailableOk returns a tuple with the GatewaysAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetGatewaysAvailableOk() ([]string, bool) {
	if o == nil || IsNil(o.GatewaysAvailable) {
		return nil, false
	}
	return o.GatewaysAvailable, true
}

// HasGatewaysAvailable returns a boolean if a field has been set.
func (o *Invoice) HasGatewaysAvailable() bool {
	if o != nil && !IsNil(o.GatewaysAvailable) {
		return true
	}

	return false
}

// SetGatewaysAvailable gets a reference to the given []string and assigns it to the GatewaysAvailable field.
func (o *Invoice) SetGatewaysAvailable(v []string) {
	o.GatewaysAvailable = v
}

// GetCountryRegulations returns the CountryRegulations field value if set, zero value otherwise.
func (o *Invoice) GetCountryRegulations() string {
	if o == nil || IsNil(o.CountryRegulations) {
		var ret string
		return ret
	}
	return *o.CountryRegulations
}

// GetCountryRegulationsOk returns a tuple with the CountryRegulations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetCountryRegulationsOk() (*string, bool) {
	if o == nil || IsNil(o.CountryRegulations) {
		return nil, false
	}
	return o.CountryRegulations, true
}

// HasCountryRegulations returns a boolean if a field has been set.
func (o *Invoice) HasCountryRegulations() bool {
	if o != nil && !IsNil(o.CountryRegulations) {
		return true
	}

	return false
}

// SetCountryRegulations gets a reference to the given string and assigns it to the CountryRegulations field.
func (o *Invoice) SetCountryRegulations(v string) {
	o.CountryRegulations = &v
}

// GetAvailableStripeApm returns the AvailableStripeApm field value if set, zero value otherwise.
func (o *Invoice) GetAvailableStripeApm() InvoiceAvailableStripeApm {
	if o == nil || IsNil(o.AvailableStripeApm) {
		var ret InvoiceAvailableStripeApm
		return ret
	}
	return *o.AvailableStripeApm
}

// GetAvailableStripeApmOk returns a tuple with the AvailableStripeApm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetAvailableStripeApmOk() (*InvoiceAvailableStripeApm, bool) {
	if o == nil || IsNil(o.AvailableStripeApm) {
		return nil, false
	}
	return o.AvailableStripeApm, true
}

// HasAvailableStripeApm returns a boolean if a field has been set.
func (o *Invoice) HasAvailableStripeApm() bool {
	if o != nil && !IsNil(o.AvailableStripeApm) {
		return true
	}

	return false
}

// SetAvailableStripeApm gets a reference to the given InvoiceAvailableStripeApm and assigns it to the AvailableStripeApm field.
func (o *Invoice) SetAvailableStripeApm(v InvoiceAvailableStripeApm) {
	o.AvailableStripeApm = &v
}

// GetSerials returns the Serials field value if set, zero value otherwise.
func (o *Invoice) GetSerials() []string {
	if o == nil || IsNil(o.Serials) {
		var ret []string
		return ret
	}
	return o.Serials
}

// GetSerialsOk returns a tuple with the Serials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetSerialsOk() ([]string, bool) {
	if o == nil || IsNil(o.Serials) {
		return nil, false
	}
	return o.Serials, true
}

// HasSerials returns a boolean if a field has been set.
func (o *Invoice) HasSerials() bool {
	if o != nil && !IsNil(o.Serials) {
		return true
	}

	return false
}

// SetSerials gets a reference to the given []string and assigns it to the Serials field.
func (o *Invoice) SetSerials(v []string) {
	o.Serials = v
}

// GetShopPaymentGatewaysFees returns the ShopPaymentGatewaysFees field value if set, zero value otherwise.
func (o *Invoice) GetShopPaymentGatewaysFees() []GatewayFees {
	if o == nil || IsNil(o.ShopPaymentGatewaysFees) {
		var ret []GatewayFees
		return ret
	}
	return o.ShopPaymentGatewaysFees
}

// GetShopPaymentGatewaysFeesOk returns a tuple with the ShopPaymentGatewaysFees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetShopPaymentGatewaysFeesOk() ([]GatewayFees, bool) {
	if o == nil || IsNil(o.ShopPaymentGatewaysFees) {
		return nil, false
	}
	return o.ShopPaymentGatewaysFees, true
}

// HasShopPaymentGatewaysFees returns a boolean if a field has been set.
func (o *Invoice) HasShopPaymentGatewaysFees() bool {
	if o != nil && !IsNil(o.ShopPaymentGatewaysFees) {
		return true
	}

	return false
}

// SetShopPaymentGatewaysFees gets a reference to the given []GatewayFees and assigns it to the ShopPaymentGatewaysFees field.
func (o *Invoice) SetShopPaymentGatewaysFees(v []GatewayFees) {
	o.ShopPaymentGatewaysFees = v
}

// GetShopPaypalCreditCard returns the ShopPaypalCreditCard field value if set, zero value otherwise.
func (o *Invoice) GetShopPaypalCreditCard() bool {
	if o == nil || IsNil(o.ShopPaypalCreditCard) {
		var ret bool
		return ret
	}
	return *o.ShopPaypalCreditCard
}

// GetShopPaypalCreditCardOk returns a tuple with the ShopPaypalCreditCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetShopPaypalCreditCardOk() (*bool, bool) {
	if o == nil || IsNil(o.ShopPaypalCreditCard) {
		return nil, false
	}
	return o.ShopPaypalCreditCard, true
}

// HasShopPaypalCreditCard returns a boolean if a field has been set.
func (o *Invoice) HasShopPaypalCreditCard() bool {
	if o != nil && !IsNil(o.ShopPaypalCreditCard) {
		return true
	}

	return false
}

// SetShopPaypalCreditCard gets a reference to the given bool and assigns it to the ShopPaypalCreditCard field.
func (o *Invoice) SetShopPaypalCreditCard(v bool) {
	o.ShopPaypalCreditCard = &v
}

// GetShopForcePaypalEmailDelivery returns the ShopForcePaypalEmailDelivery field value if set, zero value otherwise.
func (o *Invoice) GetShopForcePaypalEmailDelivery() bool {
	if o == nil || IsNil(o.ShopForcePaypalEmailDelivery) {
		var ret bool
		return ret
	}
	return *o.ShopForcePaypalEmailDelivery
}

// GetShopForcePaypalEmailDeliveryOk returns a tuple with the ShopForcePaypalEmailDelivery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetShopForcePaypalEmailDeliveryOk() (*bool, bool) {
	if o == nil || IsNil(o.ShopForcePaypalEmailDelivery) {
		return nil, false
	}
	return o.ShopForcePaypalEmailDelivery, true
}

// HasShopForcePaypalEmailDelivery returns a boolean if a field has been set.
func (o *Invoice) HasShopForcePaypalEmailDelivery() bool {
	if o != nil && !IsNil(o.ShopForcePaypalEmailDelivery) {
		return true
	}

	return false
}

// SetShopForcePaypalEmailDelivery gets a reference to the given bool and assigns it to the ShopForcePaypalEmailDelivery field.
func (o *Invoice) SetShopForcePaypalEmailDelivery(v bool) {
	o.ShopForcePaypalEmailDelivery = &v
}

// GetShopWalletconnectId returns the ShopWalletconnectId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Invoice) GetShopWalletconnectId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ShopWalletconnectId
}

// GetShopWalletconnectIdOk returns a tuple with the ShopWalletconnectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Invoice) GetShopWalletconnectIdOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ShopWalletconnectId) {
		return nil, false
	}
	return &o.ShopWalletconnectId, true
}

// HasShopWalletconnectId returns a boolean if a field has been set.
func (o *Invoice) HasShopWalletconnectId() bool {
	if o != nil && !IsNil(o.ShopWalletconnectId) {
		return true
	}

	return false
}

// SetShopWalletconnectId gets a reference to the given interface{} and assigns it to the ShopWalletconnectId field.
func (o *Invoice) SetShopWalletconnectId(v interface{}) {
	o.ShopWalletconnectId = v
}

// GetOriginalDeveloperReturnUrl returns the OriginalDeveloperReturnUrl field value if set, zero value otherwise.
func (o *Invoice) GetOriginalDeveloperReturnUrl() string {
	if o == nil || IsNil(o.OriginalDeveloperReturnUrl) {
		var ret string
		return ret
	}
	return *o.OriginalDeveloperReturnUrl
}

// GetOriginalDeveloperReturnUrlOk returns a tuple with the OriginalDeveloperReturnUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetOriginalDeveloperReturnUrlOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalDeveloperReturnUrl) {
		return nil, false
	}
	return o.OriginalDeveloperReturnUrl, true
}

// HasOriginalDeveloperReturnUrl returns a boolean if a field has been set.
func (o *Invoice) HasOriginalDeveloperReturnUrl() bool {
	if o != nil && !IsNil(o.OriginalDeveloperReturnUrl) {
		return true
	}

	return false
}

// SetOriginalDeveloperReturnUrl gets a reference to the given string and assigns it to the OriginalDeveloperReturnUrl field.
func (o *Invoice) SetOriginalDeveloperReturnUrl(v string) {
	o.OriginalDeveloperReturnUrl = &v
}

// GetRatesSnapshot returns the RatesSnapshot field value if set, zero value otherwise.
func (o *Invoice) GetRatesSnapshot() InvoiceRatesSnapshot {
	if o == nil || IsNil(o.RatesSnapshot) {
		var ret InvoiceRatesSnapshot
		return ret
	}
	return *o.RatesSnapshot
}

// GetRatesSnapshotOk returns a tuple with the RatesSnapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetRatesSnapshotOk() (*InvoiceRatesSnapshot, bool) {
	if o == nil || IsNil(o.RatesSnapshot) {
		return nil, false
	}
	return o.RatesSnapshot, true
}

// HasRatesSnapshot returns a boolean if a field has been set.
func (o *Invoice) HasRatesSnapshot() bool {
	if o != nil && !IsNil(o.RatesSnapshot) {
		return true
	}

	return false
}

// SetRatesSnapshot gets a reference to the given InvoiceRatesSnapshot and assigns it to the RatesSnapshot field.
func (o *Invoice) SetRatesSnapshot(v InvoiceRatesSnapshot) {
	o.RatesSnapshot = &v
}

// GetVoidTimes returns the VoidTimes field value if set, zero value otherwise.
func (o *Invoice) GetVoidTimes() []InvoiceVoidTimesInner {
	if o == nil || IsNil(o.VoidTimes) {
		var ret []InvoiceVoidTimesInner
		return ret
	}
	return o.VoidTimes
}

// GetVoidTimesOk returns a tuple with the VoidTimes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetVoidTimesOk() ([]InvoiceVoidTimesInner, bool) {
	if o == nil || IsNil(o.VoidTimes) {
		return nil, false
	}
	return o.VoidTimes, true
}

// HasVoidTimes returns a boolean if a field has been set.
func (o *Invoice) HasVoidTimes() bool {
	if o != nil && !IsNil(o.VoidTimes) {
		return true
	}

	return false
}

// SetVoidTimes gets a reference to the given []InvoiceVoidTimesInner and assigns it to the VoidTimes field.
func (o *Invoice) SetVoidTimes(v []InvoiceVoidTimesInner) {
	o.VoidTimes = v
}

func (o Invoice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Invoice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Uniqid) {
		toSerialize["uniqid"] = o.Uniqid
	}
	if !IsNil(o.RecurringBillingId) {
		toSerialize["recurring_billing_id"] = o.RecurringBillingId
	}
	if !IsNil(o.PayoutConfiguration) {
		toSerialize["payout_configuration"] = o.PayoutConfiguration
	}
	if !IsNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Subtype) {
		toSerialize["subtype"] = o.Subtype
	}
	if !IsNil(o.Origin) {
		toSerialize["origin"] = o.Origin
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.TotalDisplay) {
		toSerialize["total_display"] = o.TotalDisplay
	}
	if !IsNil(o.ProductVariants) {
		toSerialize["product_variants"] = o.ProductVariants
	}
	if !IsNil(o.ExchangeRate) {
		toSerialize["exchange_rate"] = o.ExchangeRate
	}
	if !IsNil(o.CryptoExchangeRate) {
		toSerialize["crypto_exchange_rate"] = o.CryptoExchangeRate
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.ShopId) {
		toSerialize["shop_id"] = o.ShopId
	}
	if !IsNil(o.ShopImageName) {
		toSerialize["shop_image_name"] = o.ShopImageName
	}
	if !IsNil(o.ShopImageStorage) {
		toSerialize["shop_image_storage"] = o.ShopImageStorage
	}
	if !IsNil(o.CloudflareImageId) {
		toSerialize["cloudflare_image_id"] = o.CloudflareImageId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.CustomerEmail) {
		toSerialize["customer_email"] = o.CustomerEmail
	}
	if !IsNil(o.CustomerId) {
		toSerialize["customer_id"] = o.CustomerId
	}
	if !IsNil(o.AffliateRevenueCustomerId) {
		toSerialize["affliate_revenue_customer_id"] = o.AffliateRevenueCustomerId
	}
	if !IsNil(o.PaypalEmailDelivery) {
		toSerialize["paypal_email_delivery"] = o.PaypalEmailDelivery
	}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.ProductTitle) {
		toSerialize["product_title"] = o.ProductTitle
	}
	if !IsNil(o.ProductType) {
		toSerialize["product_type"] = o.ProductType
	}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscription_id"] = o.SubscriptionId
	}
	if !IsNil(o.SubscriptionTime) {
		toSerialize["subscription_time"] = o.SubscriptionTime
	}
	if !IsNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	if !IsNil(o.Blockchain) {
		toSerialize["blockchain"] = o.Blockchain
	}
	if !IsNil(o.PaypalApm) {
		toSerialize["paypal_apm"] = o.PaypalApm
	}
	if !IsNil(o.StripeApm) {
		toSerialize["stripe_apm"] = o.StripeApm
	}
	if !IsNil(o.PaypalEmail) {
		toSerialize["paypal_email"] = o.PaypalEmail
	}
	if !IsNil(o.PaypalOrderId) {
		toSerialize["paypal_order_id"] = o.PaypalOrderId
	}
	if !IsNil(o.PaypalPayerEmail) {
		toSerialize["paypal_payer_email"] = o.PaypalPayerEmail
	}
	if !IsNil(o.PaypalFee) {
		toSerialize["paypal_fee"] = o.PaypalFee
	}
	if !IsNil(o.PaypalSubscriptionId) {
		toSerialize["paypal_subscription_id"] = o.PaypalSubscriptionId
	}
	if !IsNil(o.PaypalSubscriptionLink) {
		toSerialize["paypal_subscription_link"] = o.PaypalSubscriptionLink
	}
	if !IsNil(o.LexOrderId) {
		toSerialize["lex_order_id"] = o.LexOrderId
	}
	if !IsNil(o.LexPaymentMethod) {
		toSerialize["lex_payment_method"] = o.LexPaymentMethod
	}
	if !IsNil(o.PaydashPaymentID) {
		toSerialize["paydash_paymentID"] = o.PaydashPaymentID
	}
	if !IsNil(o.VirtualPaymentsId) {
		toSerialize["virtual_payments_id"] = o.VirtualPaymentsId
	}
	if !IsNil(o.StripeClientSecret) {
		toSerialize["stripe_client_secret"] = o.StripeClientSecret
	}
	if !IsNil(o.StripePriceId) {
		toSerialize["stripe_price_id"] = o.StripePriceId
	}
	if !IsNil(o.SkrillEmail) {
		toSerialize["skrill_email"] = o.SkrillEmail
	}
	if !IsNil(o.SkrillSid) {
		toSerialize["skrill_sid"] = o.SkrillSid
	}
	if !IsNil(o.SkrillLink) {
		toSerialize["skrill_link"] = o.SkrillLink
	}
	if !IsNil(o.PerfectmoneyId) {
		toSerialize["perfectmoney_id"] = o.PerfectmoneyId
	}
	if !IsNil(o.BinanceInvoiceId) {
		toSerialize["binance_invoice_id"] = o.BinanceInvoiceId
	}
	if !IsNil(o.BinanceQrcode) {
		toSerialize["binance_qrcode"] = o.BinanceQrcode
	}
	if !IsNil(o.BinanceCheckoutUrl) {
		toSerialize["binance_checkout_url"] = o.BinanceCheckoutUrl
	}
	if !IsNil(o.CryptoAddress) {
		toSerialize["crypto_address"] = o.CryptoAddress
	}
	if !IsNil(o.CryptoAmount) {
		toSerialize["crypto_amount"] = o.CryptoAmount
	}
	if !IsNil(o.CryptoReceived) {
		toSerialize["crypto_received"] = o.CryptoReceived
	}
	if !IsNil(o.CryptoUri) {
		toSerialize["crypto_uri"] = o.CryptoUri
	}
	if !IsNil(o.CryptoConfirmationsNeeded) {
		toSerialize["crypto_confirmations_needed"] = o.CryptoConfirmationsNeeded
	}
	if !IsNil(o.CryptoScheduledPayout) {
		toSerialize["crypto_scheduled_payout"] = o.CryptoScheduledPayout
	}
	if !IsNil(o.CryptoPayout) {
		toSerialize["crypto_payout"] = o.CryptoPayout
	}
	if !IsNil(o.FeeBilled) {
		toSerialize["fee_billed"] = o.FeeBilled
	}
	if !IsNil(o.BillInfo) {
		toSerialize["bill_info"] = o.BillInfo
	}
	if !IsNil(o.CashappQrcode) {
		toSerialize["cashapp_qrcode"] = o.CashappQrcode
	}
	if !IsNil(o.CashappNote) {
		toSerialize["cashapp_note"] = o.CashappNote
	}
	if !IsNil(o.CashappCashtag) {
		toSerialize["cashapp_cashtag"] = o.CashappCashtag
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.IsVpnOrProxy) {
		toSerialize["is_vpn_or_proxy"] = o.IsVpnOrProxy
	}
	if !IsNil(o.UserAgent) {
		toSerialize["user_agent"] = o.UserAgent
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.CouponId) {
		toSerialize["coupon_id"] = o.CouponId
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if !IsNil(o.DeveloperInvoice) {
		toSerialize["developer_invoice"] = o.DeveloperInvoice
	}
	if !IsNil(o.DeveloperTitle) {
		toSerialize["developer_title"] = o.DeveloperTitle
	}
	if !IsNil(o.DeveloperWebhook) {
		toSerialize["developer_webhook"] = o.DeveloperWebhook
	}
	if !IsNil(o.DeveloperReturnUrl) {
		toSerialize["developer_return_url"] = o.DeveloperReturnUrl
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusDetails) {
		toSerialize["status_details"] = o.StatusDetails
	}
	if !IsNil(o.VoidDetails) {
		toSerialize["void_details"] = o.VoidDetails
	}
	if !IsNil(o.Discount) {
		toSerialize["discount"] = o.Discount
	}
	if !IsNil(o.FeePercentage) {
		toSerialize["fee_percentage"] = o.FeePercentage
	}
	if !IsNil(o.FeeBreakdown) {
		toSerialize["fee_breakdown"] = o.FeeBreakdown
	}
	if !IsNil(o.DiscountBreakdown) {
		toSerialize["discount_breakdown"] = o.DiscountBreakdown
	}
	if !IsNil(o.DayValue) {
		toSerialize["day_value"] = o.DayValue
	}
	if !IsNil(o.Day) {
		toSerialize["day"] = o.Day
	}
	if !IsNil(o.Month) {
		toSerialize["month"] = o.Month
	}
	if !IsNil(o.Year) {
		toSerialize["year"] = o.Year
	}
	if !IsNil(o.ProductAddons) {
		toSerialize["product_addons"] = o.ProductAddons
	}
	if !IsNil(o.BundleConfig) {
		toSerialize["bundle_config"] = o.BundleConfig
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.UpdatedBy) {
		toSerialize["updated_by"] = o.UpdatedBy
	}
	if !IsNil(o.ApprovedAddress) {
		toSerialize["approved_address"] = o.ApprovedAddress
	}
	if !IsNil(o.ServiceText) {
		toSerialize["service_text"] = o.ServiceText
	}
	if !IsNil(o.IpInfo) {
		toSerialize["ip_info"] = o.IpInfo
	}
	if !IsNil(o.Webhooks) {
		toSerialize["webhooks"] = o.Webhooks
	}
	if !IsNil(o.RewardsData) {
		toSerialize["rewards_data"] = o.RewardsData
	}
	if !IsNil(o.PaypalDispute) {
		toSerialize["paypal_dispute"] = o.PaypalDispute
	}
	if !IsNil(o.ProductDownloads) {
		toSerialize["product_downloads"] = o.ProductDownloads
	}
	if !IsNil(o.PaymentLinkId) {
		toSerialize["payment_link_id"] = o.PaymentLinkId
	}
	if !IsNil(o.CashappEmailConfigured) {
		toSerialize["cashapp_email_configured"] = o.CashappEmailConfigured
	}
	if !IsNil(o.License) {
		toSerialize["license"] = o.License
	}
	if !IsNil(o.StatusHistory) {
		toSerialize["status_history"] = o.StatusHistory
	}
	if !IsNil(o.AmlWallets) {
		toSerialize["aml_wallets"] = o.AmlWallets
	}
	if !IsNil(o.CryptoTransactions) {
		toSerialize["crypto_transactions"] = o.CryptoTransactions
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if o.TotalConversions != nil {
		toSerialize["total_conversions"] = o.TotalConversions
	}
	if !IsNil(o.Theme) {
		toSerialize["theme"] = o.Theme
	}
	if !IsNil(o.DarkMode) {
		toSerialize["dark_mode"] = o.DarkMode
	}
	if o.CryptoMode != nil {
		toSerialize["crypto_mode"] = o.CryptoMode
	}
	if !IsNil(o.GatewaysAvailable) {
		toSerialize["gateways_available"] = o.GatewaysAvailable
	}
	if !IsNil(o.CountryRegulations) {
		toSerialize["country_regulations"] = o.CountryRegulations
	}
	if !IsNil(o.AvailableStripeApm) {
		toSerialize["available_stripe_apm"] = o.AvailableStripeApm
	}
	if !IsNil(o.Serials) {
		toSerialize["serials"] = o.Serials
	}
	if !IsNil(o.ShopPaymentGatewaysFees) {
		toSerialize["shop_payment_gateways_fees"] = o.ShopPaymentGatewaysFees
	}
	if !IsNil(o.ShopPaypalCreditCard) {
		toSerialize["shop_paypal_credit_card"] = o.ShopPaypalCreditCard
	}
	if !IsNil(o.ShopForcePaypalEmailDelivery) {
		toSerialize["shop_force_paypal_email_delivery"] = o.ShopForcePaypalEmailDelivery
	}
	if o.ShopWalletconnectId != nil {
		toSerialize["shop_walletconnect_id"] = o.ShopWalletconnectId
	}
	if !IsNil(o.OriginalDeveloperReturnUrl) {
		toSerialize["original_developer_return_url"] = o.OriginalDeveloperReturnUrl
	}
	if !IsNil(o.RatesSnapshot) {
		toSerialize["rates_snapshot"] = o.RatesSnapshot
	}
	if !IsNil(o.VoidTimes) {
		toSerialize["void_times"] = o.VoidTimes
	}
	return toSerialize, nil
}

type NullableInvoice struct {
	value *Invoice
	isSet bool
}

func (v NullableInvoice) Get() *Invoice {
	return v.value
}

func (v *NullableInvoice) Set(val *Invoice) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoice) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoice(val *Invoice) *NullableInvoice {
	return &NullableInvoice{value: val, isSet: true}
}

func (v NullableInvoice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


