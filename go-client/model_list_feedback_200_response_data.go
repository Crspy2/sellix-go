/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListFeedback200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListFeedback200ResponseData{}

// ListFeedback200ResponseData struct for ListFeedback200ResponseData
type ListFeedback200ResponseData struct {
	Feedback []FeedbackListing `json:"feedback,omitempty"`
	Details *ListFeedback200ResponseDataDetails `json:"details,omitempty"`
}

// NewListFeedback200ResponseData instantiates a new ListFeedback200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListFeedback200ResponseData() *ListFeedback200ResponseData {
	this := ListFeedback200ResponseData{}
	return &this
}

// NewListFeedback200ResponseDataWithDefaults instantiates a new ListFeedback200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListFeedback200ResponseDataWithDefaults() *ListFeedback200ResponseData {
	this := ListFeedback200ResponseData{}
	return &this
}

// GetFeedback returns the Feedback field value if set, zero value otherwise.
func (o *ListFeedback200ResponseData) GetFeedback() []FeedbackListing {
	if o == nil || IsNil(o.Feedback) {
		var ret []FeedbackListing
		return ret
	}
	return o.Feedback
}

// GetFeedbackOk returns a tuple with the Feedback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListFeedback200ResponseData) GetFeedbackOk() ([]FeedbackListing, bool) {
	if o == nil || IsNil(o.Feedback) {
		return nil, false
	}
	return o.Feedback, true
}

// HasFeedback returns a boolean if a field has been set.
func (o *ListFeedback200ResponseData) HasFeedback() bool {
	if o != nil && !IsNil(o.Feedback) {
		return true
	}

	return false
}

// SetFeedback gets a reference to the given []FeedbackListing and assigns it to the Feedback field.
func (o *ListFeedback200ResponseData) SetFeedback(v []FeedbackListing) {
	o.Feedback = v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *ListFeedback200ResponseData) GetDetails() ListFeedback200ResponseDataDetails {
	if o == nil || IsNil(o.Details) {
		var ret ListFeedback200ResponseDataDetails
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListFeedback200ResponseData) GetDetailsOk() (*ListFeedback200ResponseDataDetails, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *ListFeedback200ResponseData) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given ListFeedback200ResponseDataDetails and assigns it to the Details field.
func (o *ListFeedback200ResponseData) SetDetails(v ListFeedback200ResponseDataDetails) {
	o.Details = &v
}

func (o ListFeedback200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListFeedback200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Feedback) {
		toSerialize["feedback"] = o.Feedback
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	return toSerialize, nil
}

type NullableListFeedback200ResponseData struct {
	value *ListFeedback200ResponseData
	isSet bool
}

func (v NullableListFeedback200ResponseData) Get() *ListFeedback200ResponseData {
	return v.value
}

func (v *NullableListFeedback200ResponseData) Set(val *ListFeedback200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableListFeedback200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableListFeedback200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListFeedback200ResponseData(val *ListFeedback200ResponseData) *NullableListFeedback200ResponseData {
	return &NullableListFeedback200ResponseData{value: val, isSet: true}
}

func (v NullableListFeedback200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListFeedback200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


