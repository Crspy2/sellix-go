/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PaymentMethod type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentMethod{}

// PaymentMethod struct for PaymentMethod
type PaymentMethod struct {
	// Internal Sellix ID for the resource
	Id *int32 `json:"id,omitempty"`
	// Unique identifier used throughout Sellix's API
	Uniqid *string `json:"uniqid,omitempty"`
	// The title of the stored payment method
	Title *string `json:"title,omitempty"`
	// The title of the stored payment method used by our system
	SystemTitle *string `json:"system_title,omitempty"`
	// ID of the Sellix shop the customer was created for.
	ShopId *int32 `json:"shop_id,omitempty"`
	// Unique ID used within Sellix to identify customers across the API.
	CustomerId *string `json:"customer_id,omitempty"`
	Gateway *Gateway `json:"gateway,omitempty"`
	// The type of payment method used within the gateway
	MethodType *string `json:"method_type,omitempty"`
	// The status of the payment method
	Status *string `json:"status,omitempty"`
	// The last time the payment method was used stored as a timestamp.
	LastConfirmDate *int32 `json:"last_confirm_date,omitempty"`
	// When the payment method was saved for future reuse stored as a timestamp.
	CreatedAt *int32 `json:"created_at,omitempty"`
	// When the payment method was last updated stored as a timestamp.
	UpdatedAt *int32 `json:"updated_at,omitempty"`
}

// NewPaymentMethod instantiates a new PaymentMethod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentMethod() *PaymentMethod {
	this := PaymentMethod{}
	return &this
}

// NewPaymentMethodWithDefaults instantiates a new PaymentMethod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentMethodWithDefaults() *PaymentMethod {
	this := PaymentMethod{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PaymentMethod) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethod) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PaymentMethod) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *PaymentMethod) SetId(v int32) {
	o.Id = &v
}

// GetUniqid returns the Uniqid field value if set, zero value otherwise.
func (o *PaymentMethod) GetUniqid() string {
	if o == nil || IsNil(o.Uniqid) {
		var ret string
		return ret
	}
	return *o.Uniqid
}

// GetUniqidOk returns a tuple with the Uniqid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethod) GetUniqidOk() (*string, bool) {
	if o == nil || IsNil(o.Uniqid) {
		return nil, false
	}
	return o.Uniqid, true
}

// HasUniqid returns a boolean if a field has been set.
func (o *PaymentMethod) HasUniqid() bool {
	if o != nil && !IsNil(o.Uniqid) {
		return true
	}

	return false
}

// SetUniqid gets a reference to the given string and assigns it to the Uniqid field.
func (o *PaymentMethod) SetUniqid(v string) {
	o.Uniqid = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *PaymentMethod) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethod) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *PaymentMethod) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *PaymentMethod) SetTitle(v string) {
	o.Title = &v
}

// GetSystemTitle returns the SystemTitle field value if set, zero value otherwise.
func (o *PaymentMethod) GetSystemTitle() string {
	if o == nil || IsNil(o.SystemTitle) {
		var ret string
		return ret
	}
	return *o.SystemTitle
}

// GetSystemTitleOk returns a tuple with the SystemTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethod) GetSystemTitleOk() (*string, bool) {
	if o == nil || IsNil(o.SystemTitle) {
		return nil, false
	}
	return o.SystemTitle, true
}

// HasSystemTitle returns a boolean if a field has been set.
func (o *PaymentMethod) HasSystemTitle() bool {
	if o != nil && !IsNil(o.SystemTitle) {
		return true
	}

	return false
}

// SetSystemTitle gets a reference to the given string and assigns it to the SystemTitle field.
func (o *PaymentMethod) SetSystemTitle(v string) {
	o.SystemTitle = &v
}

// GetShopId returns the ShopId field value if set, zero value otherwise.
func (o *PaymentMethod) GetShopId() int32 {
	if o == nil || IsNil(o.ShopId) {
		var ret int32
		return ret
	}
	return *o.ShopId
}

// GetShopIdOk returns a tuple with the ShopId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethod) GetShopIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ShopId) {
		return nil, false
	}
	return o.ShopId, true
}

// HasShopId returns a boolean if a field has been set.
func (o *PaymentMethod) HasShopId() bool {
	if o != nil && !IsNil(o.ShopId) {
		return true
	}

	return false
}

// SetShopId gets a reference to the given int32 and assigns it to the ShopId field.
func (o *PaymentMethod) SetShopId(v int32) {
	o.ShopId = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *PaymentMethod) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId) {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethod) GetCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *PaymentMethod) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *PaymentMethod) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *PaymentMethod) GetGateway() Gateway {
	if o == nil || IsNil(o.Gateway) {
		var ret Gateway
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethod) GetGatewayOk() (*Gateway, bool) {
	if o == nil || IsNil(o.Gateway) {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *PaymentMethod) HasGateway() bool {
	if o != nil && !IsNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given Gateway and assigns it to the Gateway field.
func (o *PaymentMethod) SetGateway(v Gateway) {
	o.Gateway = &v
}

// GetMethodType returns the MethodType field value if set, zero value otherwise.
func (o *PaymentMethod) GetMethodType() string {
	if o == nil || IsNil(o.MethodType) {
		var ret string
		return ret
	}
	return *o.MethodType
}

// GetMethodTypeOk returns a tuple with the MethodType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethod) GetMethodTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MethodType) {
		return nil, false
	}
	return o.MethodType, true
}

// HasMethodType returns a boolean if a field has been set.
func (o *PaymentMethod) HasMethodType() bool {
	if o != nil && !IsNil(o.MethodType) {
		return true
	}

	return false
}

// SetMethodType gets a reference to the given string and assigns it to the MethodType field.
func (o *PaymentMethod) SetMethodType(v string) {
	o.MethodType = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PaymentMethod) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethod) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PaymentMethod) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PaymentMethod) SetStatus(v string) {
	o.Status = &v
}

// GetLastConfirmDate returns the LastConfirmDate field value if set, zero value otherwise.
func (o *PaymentMethod) GetLastConfirmDate() int32 {
	if o == nil || IsNil(o.LastConfirmDate) {
		var ret int32
		return ret
	}
	return *o.LastConfirmDate
}

// GetLastConfirmDateOk returns a tuple with the LastConfirmDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethod) GetLastConfirmDateOk() (*int32, bool) {
	if o == nil || IsNil(o.LastConfirmDate) {
		return nil, false
	}
	return o.LastConfirmDate, true
}

// HasLastConfirmDate returns a boolean if a field has been set.
func (o *PaymentMethod) HasLastConfirmDate() bool {
	if o != nil && !IsNil(o.LastConfirmDate) {
		return true
	}

	return false
}

// SetLastConfirmDate gets a reference to the given int32 and assigns it to the LastConfirmDate field.
func (o *PaymentMethod) SetLastConfirmDate(v int32) {
	o.LastConfirmDate = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PaymentMethod) GetCreatedAt() int32 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethod) GetCreatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PaymentMethod) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *PaymentMethod) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PaymentMethod) GetUpdatedAt() int32 {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethod) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PaymentMethod) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *PaymentMethod) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

func (o PaymentMethod) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentMethod) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Uniqid) {
		toSerialize["uniqid"] = o.Uniqid
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.SystemTitle) {
		toSerialize["system_title"] = o.SystemTitle
	}
	if !IsNil(o.ShopId) {
		toSerialize["shop_id"] = o.ShopId
	}
	if !IsNil(o.CustomerId) {
		toSerialize["customer_id"] = o.CustomerId
	}
	if !IsNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	if !IsNil(o.MethodType) {
		toSerialize["method_type"] = o.MethodType
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.LastConfirmDate) {
		toSerialize["last_confirm_date"] = o.LastConfirmDate
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullablePaymentMethod struct {
	value *PaymentMethod
	isSet bool
}

func (v NullablePaymentMethod) Get() *PaymentMethod {
	return v.value
}

func (v *NullablePaymentMethod) Set(val *PaymentMethod) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentMethod) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentMethod(val *PaymentMethod) *NullablePaymentMethod {
	return &NullablePaymentMethod{value: val, isSet: true}
}

func (v NullablePaymentMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


