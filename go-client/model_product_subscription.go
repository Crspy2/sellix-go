/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the ProductSubscription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductSubscription{}

// ProductSubscription struct for ProductSubscription
type ProductSubscription struct {
	// ID of the resource.
	Id *int32 `json:"id,omitempty"`
	// The ID of the product subscription
	Uniqid *string `json:"uniqid,omitempty"`
	// The ID of the shop to which this resource belongs.
	ShopId *int32 `json:"shop_id,omitempty"`
	// The ID of the customer who made the purchase
	CustomerId *string `json:"customer_id,omitempty"`
	// The email of the customer to which the invoice was sent to
	CustomerEmail *string `json:"customer_email,omitempty"`
	// The internal ID of the product
	ProductId *int32 `json:"product_id,omitempty"`
	// The internal ID of the product subscription plan
	ProductPlanId *int32 `json:"product_plan_id,omitempty"`
	// The status of the subscription
	Status *string `json:"status,omitempty"`
	// 
	CreditNodeUsd *int32 `json:"credit_node_usd,omitempty"`
	// The timestamp of the subscription start date
	StartDate *int32 `json:"start_date,omitempty"`
	// The timestamp of the subscription end date
	EndDate *int32 `json:"end_date,omitempty"`
	// Whether or not the trial period was skipped
	SkipTrial *bool `json:"skip_trial,omitempty"`
	// The reason the trial period was skipped
	SkipTrialReason *string `json:"skip_trial_reason,omitempty"`
	// Whether or not the subscription's start has been processed
	StartEventProcessed *bool `json:"start_event_processed,omitempty"`
	// Whether or not the subscription's expiration event has been triggered
	EndEventProcessed *bool `json:"end_event_processed,omitempty"`
	// Timestamp for the creation of the query.
	CreatedAt *int32 `json:"created_at,omitempty"`
	// Date, available if the query has been updated.
	UpdatedAt *int32 `json:"updated_at,omitempty"`
	// The name of the shop the subscription was made for
	ShopName *string `json:"shop_name,omitempty"`
	// The ID of the product the subscription is for
	ProductUniqid *string `json:"product_uniqid,omitempty"`
	Plan []ProductPlanSubscription `json:"plan,omitempty"`
}

// NewProductSubscription instantiates a new ProductSubscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductSubscription() *ProductSubscription {
	this := ProductSubscription{}
	return &this
}

// NewProductSubscriptionWithDefaults instantiates a new ProductSubscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductSubscriptionWithDefaults() *ProductSubscription {
	this := ProductSubscription{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProductSubscription) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSubscription) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProductSubscription) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ProductSubscription) SetId(v int32) {
	o.Id = &v
}

// GetUniqid returns the Uniqid field value if set, zero value otherwise.
func (o *ProductSubscription) GetUniqid() string {
	if o == nil || IsNil(o.Uniqid) {
		var ret string
		return ret
	}
	return *o.Uniqid
}

// GetUniqidOk returns a tuple with the Uniqid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSubscription) GetUniqidOk() (*string, bool) {
	if o == nil || IsNil(o.Uniqid) {
		return nil, false
	}
	return o.Uniqid, true
}

// HasUniqid returns a boolean if a field has been set.
func (o *ProductSubscription) HasUniqid() bool {
	if o != nil && !IsNil(o.Uniqid) {
		return true
	}

	return false
}

// SetUniqid gets a reference to the given string and assigns it to the Uniqid field.
func (o *ProductSubscription) SetUniqid(v string) {
	o.Uniqid = &v
}

// GetShopId returns the ShopId field value if set, zero value otherwise.
func (o *ProductSubscription) GetShopId() int32 {
	if o == nil || IsNil(o.ShopId) {
		var ret int32
		return ret
	}
	return *o.ShopId
}

// GetShopIdOk returns a tuple with the ShopId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSubscription) GetShopIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ShopId) {
		return nil, false
	}
	return o.ShopId, true
}

// HasShopId returns a boolean if a field has been set.
func (o *ProductSubscription) HasShopId() bool {
	if o != nil && !IsNil(o.ShopId) {
		return true
	}

	return false
}

// SetShopId gets a reference to the given int32 and assigns it to the ShopId field.
func (o *ProductSubscription) SetShopId(v int32) {
	o.ShopId = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *ProductSubscription) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId) {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSubscription) GetCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *ProductSubscription) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *ProductSubscription) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetCustomerEmail returns the CustomerEmail field value if set, zero value otherwise.
func (o *ProductSubscription) GetCustomerEmail() string {
	if o == nil || IsNil(o.CustomerEmail) {
		var ret string
		return ret
	}
	return *o.CustomerEmail
}

// GetCustomerEmailOk returns a tuple with the CustomerEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSubscription) GetCustomerEmailOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerEmail) {
		return nil, false
	}
	return o.CustomerEmail, true
}

// HasCustomerEmail returns a boolean if a field has been set.
func (o *ProductSubscription) HasCustomerEmail() bool {
	if o != nil && !IsNil(o.CustomerEmail) {
		return true
	}

	return false
}

// SetCustomerEmail gets a reference to the given string and assigns it to the CustomerEmail field.
func (o *ProductSubscription) SetCustomerEmail(v string) {
	o.CustomerEmail = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *ProductSubscription) GetProductId() int32 {
	if o == nil || IsNil(o.ProductId) {
		var ret int32
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSubscription) GetProductIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *ProductSubscription) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given int32 and assigns it to the ProductId field.
func (o *ProductSubscription) SetProductId(v int32) {
	o.ProductId = &v
}

// GetProductPlanId returns the ProductPlanId field value if set, zero value otherwise.
func (o *ProductSubscription) GetProductPlanId() int32 {
	if o == nil || IsNil(o.ProductPlanId) {
		var ret int32
		return ret
	}
	return *o.ProductPlanId
}

// GetProductPlanIdOk returns a tuple with the ProductPlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSubscription) GetProductPlanIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProductPlanId) {
		return nil, false
	}
	return o.ProductPlanId, true
}

// HasProductPlanId returns a boolean if a field has been set.
func (o *ProductSubscription) HasProductPlanId() bool {
	if o != nil && !IsNil(o.ProductPlanId) {
		return true
	}

	return false
}

// SetProductPlanId gets a reference to the given int32 and assigns it to the ProductPlanId field.
func (o *ProductSubscription) SetProductPlanId(v int32) {
	o.ProductPlanId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ProductSubscription) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSubscription) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ProductSubscription) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ProductSubscription) SetStatus(v string) {
	o.Status = &v
}

// GetCreditNodeUsd returns the CreditNodeUsd field value if set, zero value otherwise.
func (o *ProductSubscription) GetCreditNodeUsd() int32 {
	if o == nil || IsNil(o.CreditNodeUsd) {
		var ret int32
		return ret
	}
	return *o.CreditNodeUsd
}

// GetCreditNodeUsdOk returns a tuple with the CreditNodeUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSubscription) GetCreditNodeUsdOk() (*int32, bool) {
	if o == nil || IsNil(o.CreditNodeUsd) {
		return nil, false
	}
	return o.CreditNodeUsd, true
}

// HasCreditNodeUsd returns a boolean if a field has been set.
func (o *ProductSubscription) HasCreditNodeUsd() bool {
	if o != nil && !IsNil(o.CreditNodeUsd) {
		return true
	}

	return false
}

// SetCreditNodeUsd gets a reference to the given int32 and assigns it to the CreditNodeUsd field.
func (o *ProductSubscription) SetCreditNodeUsd(v int32) {
	o.CreditNodeUsd = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *ProductSubscription) GetStartDate() int32 {
	if o == nil || IsNil(o.StartDate) {
		var ret int32
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSubscription) GetStartDateOk() (*int32, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *ProductSubscription) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given int32 and assigns it to the StartDate field.
func (o *ProductSubscription) SetStartDate(v int32) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *ProductSubscription) GetEndDate() int32 {
	if o == nil || IsNil(o.EndDate) {
		var ret int32
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSubscription) GetEndDateOk() (*int32, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *ProductSubscription) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given int32 and assigns it to the EndDate field.
func (o *ProductSubscription) SetEndDate(v int32) {
	o.EndDate = &v
}

// GetSkipTrial returns the SkipTrial field value if set, zero value otherwise.
func (o *ProductSubscription) GetSkipTrial() bool {
	if o == nil || IsNil(o.SkipTrial) {
		var ret bool
		return ret
	}
	return *o.SkipTrial
}

// GetSkipTrialOk returns a tuple with the SkipTrial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSubscription) GetSkipTrialOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipTrial) {
		return nil, false
	}
	return o.SkipTrial, true
}

// HasSkipTrial returns a boolean if a field has been set.
func (o *ProductSubscription) HasSkipTrial() bool {
	if o != nil && !IsNil(o.SkipTrial) {
		return true
	}

	return false
}

// SetSkipTrial gets a reference to the given bool and assigns it to the SkipTrial field.
func (o *ProductSubscription) SetSkipTrial(v bool) {
	o.SkipTrial = &v
}

// GetSkipTrialReason returns the SkipTrialReason field value if set, zero value otherwise.
func (o *ProductSubscription) GetSkipTrialReason() string {
	if o == nil || IsNil(o.SkipTrialReason) {
		var ret string
		return ret
	}
	return *o.SkipTrialReason
}

// GetSkipTrialReasonOk returns a tuple with the SkipTrialReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSubscription) GetSkipTrialReasonOk() (*string, bool) {
	if o == nil || IsNil(o.SkipTrialReason) {
		return nil, false
	}
	return o.SkipTrialReason, true
}

// HasSkipTrialReason returns a boolean if a field has been set.
func (o *ProductSubscription) HasSkipTrialReason() bool {
	if o != nil && !IsNil(o.SkipTrialReason) {
		return true
	}

	return false
}

// SetSkipTrialReason gets a reference to the given string and assigns it to the SkipTrialReason field.
func (o *ProductSubscription) SetSkipTrialReason(v string) {
	o.SkipTrialReason = &v
}

// GetStartEventProcessed returns the StartEventProcessed field value if set, zero value otherwise.
func (o *ProductSubscription) GetStartEventProcessed() bool {
	if o == nil || IsNil(o.StartEventProcessed) {
		var ret bool
		return ret
	}
	return *o.StartEventProcessed
}

// GetStartEventProcessedOk returns a tuple with the StartEventProcessed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSubscription) GetStartEventProcessedOk() (*bool, bool) {
	if o == nil || IsNil(o.StartEventProcessed) {
		return nil, false
	}
	return o.StartEventProcessed, true
}

// HasStartEventProcessed returns a boolean if a field has been set.
func (o *ProductSubscription) HasStartEventProcessed() bool {
	if o != nil && !IsNil(o.StartEventProcessed) {
		return true
	}

	return false
}

// SetStartEventProcessed gets a reference to the given bool and assigns it to the StartEventProcessed field.
func (o *ProductSubscription) SetStartEventProcessed(v bool) {
	o.StartEventProcessed = &v
}

// GetEndEventProcessed returns the EndEventProcessed field value if set, zero value otherwise.
func (o *ProductSubscription) GetEndEventProcessed() bool {
	if o == nil || IsNil(o.EndEventProcessed) {
		var ret bool
		return ret
	}
	return *o.EndEventProcessed
}

// GetEndEventProcessedOk returns a tuple with the EndEventProcessed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSubscription) GetEndEventProcessedOk() (*bool, bool) {
	if o == nil || IsNil(o.EndEventProcessed) {
		return nil, false
	}
	return o.EndEventProcessed, true
}

// HasEndEventProcessed returns a boolean if a field has been set.
func (o *ProductSubscription) HasEndEventProcessed() bool {
	if o != nil && !IsNil(o.EndEventProcessed) {
		return true
	}

	return false
}

// SetEndEventProcessed gets a reference to the given bool and assigns it to the EndEventProcessed field.
func (o *ProductSubscription) SetEndEventProcessed(v bool) {
	o.EndEventProcessed = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ProductSubscription) GetCreatedAt() int32 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSubscription) GetCreatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ProductSubscription) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *ProductSubscription) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ProductSubscription) GetUpdatedAt() int32 {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSubscription) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ProductSubscription) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *ProductSubscription) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

// GetShopName returns the ShopName field value if set, zero value otherwise.
func (o *ProductSubscription) GetShopName() string {
	if o == nil || IsNil(o.ShopName) {
		var ret string
		return ret
	}
	return *o.ShopName
}

// GetShopNameOk returns a tuple with the ShopName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSubscription) GetShopNameOk() (*string, bool) {
	if o == nil || IsNil(o.ShopName) {
		return nil, false
	}
	return o.ShopName, true
}

// HasShopName returns a boolean if a field has been set.
func (o *ProductSubscription) HasShopName() bool {
	if o != nil && !IsNil(o.ShopName) {
		return true
	}

	return false
}

// SetShopName gets a reference to the given string and assigns it to the ShopName field.
func (o *ProductSubscription) SetShopName(v string) {
	o.ShopName = &v
}

// GetProductUniqid returns the ProductUniqid field value if set, zero value otherwise.
func (o *ProductSubscription) GetProductUniqid() string {
	if o == nil || IsNil(o.ProductUniqid) {
		var ret string
		return ret
	}
	return *o.ProductUniqid
}

// GetProductUniqidOk returns a tuple with the ProductUniqid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSubscription) GetProductUniqidOk() (*string, bool) {
	if o == nil || IsNil(o.ProductUniqid) {
		return nil, false
	}
	return o.ProductUniqid, true
}

// HasProductUniqid returns a boolean if a field has been set.
func (o *ProductSubscription) HasProductUniqid() bool {
	if o != nil && !IsNil(o.ProductUniqid) {
		return true
	}

	return false
}

// SetProductUniqid gets a reference to the given string and assigns it to the ProductUniqid field.
func (o *ProductSubscription) SetProductUniqid(v string) {
	o.ProductUniqid = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *ProductSubscription) GetPlan() []ProductPlanSubscription {
	if o == nil || IsNil(o.Plan) {
		var ret []ProductPlanSubscription
		return ret
	}
	return o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSubscription) GetPlanOk() ([]ProductPlanSubscription, bool) {
	if o == nil || IsNil(o.Plan) {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *ProductSubscription) HasPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given []ProductPlanSubscription and assigns it to the Plan field.
func (o *ProductSubscription) SetPlan(v []ProductPlanSubscription) {
	o.Plan = v
}

func (o ProductSubscription) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductSubscription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Uniqid) {
		toSerialize["uniqid"] = o.Uniqid
	}
	if !IsNil(o.ShopId) {
		toSerialize["shop_id"] = o.ShopId
	}
	if !IsNil(o.CustomerId) {
		toSerialize["customer_id"] = o.CustomerId
	}
	if !IsNil(o.CustomerEmail) {
		toSerialize["customer_email"] = o.CustomerEmail
	}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.ProductPlanId) {
		toSerialize["product_plan_id"] = o.ProductPlanId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.CreditNodeUsd) {
		toSerialize["credit_node_usd"] = o.CreditNodeUsd
	}
	if !IsNil(o.StartDate) {
		toSerialize["start_date"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["end_date"] = o.EndDate
	}
	if !IsNil(o.SkipTrial) {
		toSerialize["skip_trial"] = o.SkipTrial
	}
	if !IsNil(o.SkipTrialReason) {
		toSerialize["skip_trial_reason"] = o.SkipTrialReason
	}
	if !IsNil(o.StartEventProcessed) {
		toSerialize["start_event_processed"] = o.StartEventProcessed
	}
	if !IsNil(o.EndEventProcessed) {
		toSerialize["end_event_processed"] = o.EndEventProcessed
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.ShopName) {
		toSerialize["shop_name"] = o.ShopName
	}
	if !IsNil(o.ProductUniqid) {
		toSerialize["product_uniqid"] = o.ProductUniqid
	}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	return toSerialize, nil
}

type NullableProductSubscription struct {
	value *ProductSubscription
	isSet bool
}

func (v NullableProductSubscription) Get() *ProductSubscription {
	return v.value
}

func (v *NullableProductSubscription) Set(val *ProductSubscription) {
	v.value = val
	v.isSet = true
}

func (v NullableProductSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableProductSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductSubscription(val *ProductSubscription) *NullableProductSubscription {
	return &NullableProductSubscription{value: val, isSet: true}
}

func (v NullableProductSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


