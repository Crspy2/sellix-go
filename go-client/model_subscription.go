/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the Subscription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Subscription{}

// Subscription struct for Subscription
type Subscription struct {
	// ID of the subscription.
	Id *string `json:"id,omitempty"`
	// ID of product subscription for subscriptions v2
	ProductSubscriptionId *string `json:"product_subscription_id,omitempty"`
	// The shop ID to which this subscription belongs.
	ShopId *int32 `json:"shop_id,omitempty"`
	// ID of the product subscription.
	ProductId *string `json:"product_id,omitempty"`
	// ID of the subscriptions v2 active product plan
	ProductPlanId *string `json:"product_plan_id,omitempty"`
	// ID of the store's customer.
	CustomerId *string `json:"customer_id,omitempty"`
	// The subscription version
	Type *string `json:"type,omitempty"`
	// Timestamp for the creation of the subscription.
	CreatedAt *int32 `json:"created_at,omitempty"`
	// When this subscription was last updated.
	UpdatedAt *int32 `json:"updated_at,omitempty"`
	// Subscription status.
	Status *string `json:"status,omitempty"`
	Gateway *Gateway `json:"gateway,omitempty"`
	// key-value JSON having as key the custom field name and as value the custom field value inserted by the customer. Custom fields can both be used as inputs from the customers but also as metadata for invoices, letting you pass hidden fields for internal referencing.
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	// The ID of the coupon used when paying for the subscription. Will be null if no coupon was used
	CouponId *string `json:"coupon_id,omitempty"`
	// When the current billing period will end.
	CurrentPeriodEnd *int32 `json:"current_period_end,omitempty"`
	// Whether or not the email for an upcoming renewal has been sent.
	UpcomingEmail1WeekSent *bool `json:"upcoming_email_1_week_sent,omitempty"`
	// Whether or not the email for the trial period expiring has been sent.
	TrialPeriodEndingEmailSent *bool `json:"trial_period_ending_email_sent,omitempty"`
	// If true, the renewal invoice has already been created.
	RenewalInvoiceCreated *bool `json:"renewal_invoice_created,omitempty"`
	// Details about the subscription status.
	StatusDetails *string `json:"status_details,omitempty"`
	// When this subscription was canceled.
	CanceledAt *int32 `json:"canceled_at,omitempty"`
	// ID of the customer created on STRIPE.
	StripeCustomerId *string `json:"stripe_customer_id,omitempty"`
	// ID of the Stripe connected account.
	StripeAccount *string `json:"stripe_account,omitempty"`
	// ID of the Stripe subscription.
	StripeSubscriptionId *string `json:"stripe_subscription_id,omitempty"`
	// The ID of the PayPal account used to complete the subscription payments
	PaypalAccount *string `json:"paypal_account,omitempty"`
	// The ID of the PayPal subscription
	PaypalSubscriptionId *string `json:"paypal_subscription_id,omitempty"`
	// Digital Software
	ProductTitle *string `json:"product_title,omitempty"`
	// The title of the product plan for this subscription (only for type: v2)
	ProductPlanTitle *string `json:"product_plan_title,omitempty"`
	// The cloudflare image ID of this product, replaces image_attachment and image_name. Format https://imagedelivery.net/95QNzrEeP7RU5l5WdbyrKw/<cloudflare_image_id>/<variant_name> where variant_name can be shopItem, avatar, icon, imageAvatarFeedback, public, productImageCart.
	CloudflareImageId *string `json:"cloudflare_image_id,omitempty"`
	// Customer name.
	CustomerName *string `json:"customer_name,omitempty"`
	// Customer surname.
	CustomerSurname *string `json:"customer_surname,omitempty"`
	// Customer phone.
	CustomerPhone *string `json:"customer_phone,omitempty"`
	// Customer phone country code.
	CustomerPhoneCountryCode *string `json:"customer_phone_country_code,omitempty"`
	// Customer country code.
	CustomerCountryCode *string `json:"customer_country_code,omitempty"`
	// Customer street address.
	CustomerStreetAddress *string `json:"customer_street_address,omitempty"`
	// Customer street address additional info.
	CustomerAdditionalAddressInfo *string `json:"customer_additional_address_info,omitempty"`
	// Customer city.
	CustomerCity *string `json:"customer_city,omitempty"`
	// Customer postal code.
	CustomerPostalCode *string `json:"customer_postal_code,omitempty"`
	// Customer state.
	CustomerState *string `json:"customer_state,omitempty"`
	// Customer email.
	CustomerEmail *string `json:"customer_email,omitempty"`
	// The name of the shop the subscription was made for
	ShopName *string `json:"shop_name,omitempty"`
	Invoices []LegacySubscriptionInvoice `json:"invoices,omitempty"`
	ApprovedAddress *ApprovedAddress `json:"approved_address,omitempty"`
	// Gateways available for this invoice
	GatewaysAvailable []Gateway `json:"gateways_available,omitempty"`
}

// NewSubscription instantiates a new Subscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscription() *Subscription {
	this := Subscription{}
	return &this
}

// NewSubscriptionWithDefaults instantiates a new Subscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionWithDefaults() *Subscription {
	this := Subscription{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Subscription) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Subscription) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Subscription) SetId(v string) {
	o.Id = &v
}

// GetProductSubscriptionId returns the ProductSubscriptionId field value if set, zero value otherwise.
func (o *Subscription) GetProductSubscriptionId() string {
	if o == nil || IsNil(o.ProductSubscriptionId) {
		var ret string
		return ret
	}
	return *o.ProductSubscriptionId
}

// GetProductSubscriptionIdOk returns a tuple with the ProductSubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetProductSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductSubscriptionId) {
		return nil, false
	}
	return o.ProductSubscriptionId, true
}

// HasProductSubscriptionId returns a boolean if a field has been set.
func (o *Subscription) HasProductSubscriptionId() bool {
	if o != nil && !IsNil(o.ProductSubscriptionId) {
		return true
	}

	return false
}

// SetProductSubscriptionId gets a reference to the given string and assigns it to the ProductSubscriptionId field.
func (o *Subscription) SetProductSubscriptionId(v string) {
	o.ProductSubscriptionId = &v
}

// GetShopId returns the ShopId field value if set, zero value otherwise.
func (o *Subscription) GetShopId() int32 {
	if o == nil || IsNil(o.ShopId) {
		var ret int32
		return ret
	}
	return *o.ShopId
}

// GetShopIdOk returns a tuple with the ShopId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetShopIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ShopId) {
		return nil, false
	}
	return o.ShopId, true
}

// HasShopId returns a boolean if a field has been set.
func (o *Subscription) HasShopId() bool {
	if o != nil && !IsNil(o.ShopId) {
		return true
	}

	return false
}

// SetShopId gets a reference to the given int32 and assigns it to the ShopId field.
func (o *Subscription) SetShopId(v int32) {
	o.ShopId = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *Subscription) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *Subscription) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *Subscription) SetProductId(v string) {
	o.ProductId = &v
}

// GetProductPlanId returns the ProductPlanId field value if set, zero value otherwise.
func (o *Subscription) GetProductPlanId() string {
	if o == nil || IsNil(o.ProductPlanId) {
		var ret string
		return ret
	}
	return *o.ProductPlanId
}

// GetProductPlanIdOk returns a tuple with the ProductPlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetProductPlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductPlanId) {
		return nil, false
	}
	return o.ProductPlanId, true
}

// HasProductPlanId returns a boolean if a field has been set.
func (o *Subscription) HasProductPlanId() bool {
	if o != nil && !IsNil(o.ProductPlanId) {
		return true
	}

	return false
}

// SetProductPlanId gets a reference to the given string and assigns it to the ProductPlanId field.
func (o *Subscription) SetProductPlanId(v string) {
	o.ProductPlanId = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *Subscription) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId) {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *Subscription) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *Subscription) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Subscription) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Subscription) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Subscription) SetType(v string) {
	o.Type = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Subscription) GetCreatedAt() int32 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetCreatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Subscription) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *Subscription) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Subscription) GetUpdatedAt() int32 {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Subscription) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *Subscription) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Subscription) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Subscription) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Subscription) SetStatus(v string) {
	o.Status = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *Subscription) GetGateway() Gateway {
	if o == nil || IsNil(o.Gateway) {
		var ret Gateway
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetGatewayOk() (*Gateway, bool) {
	if o == nil || IsNil(o.Gateway) {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *Subscription) HasGateway() bool {
	if o != nil && !IsNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given Gateway and assigns it to the Gateway field.
func (o *Subscription) SetGateway(v Gateway) {
	o.Gateway = &v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *Subscription) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *Subscription) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *Subscription) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetCouponId returns the CouponId field value if set, zero value otherwise.
func (o *Subscription) GetCouponId() string {
	if o == nil || IsNil(o.CouponId) {
		var ret string
		return ret
	}
	return *o.CouponId
}

// GetCouponIdOk returns a tuple with the CouponId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetCouponIdOk() (*string, bool) {
	if o == nil || IsNil(o.CouponId) {
		return nil, false
	}
	return o.CouponId, true
}

// HasCouponId returns a boolean if a field has been set.
func (o *Subscription) HasCouponId() bool {
	if o != nil && !IsNil(o.CouponId) {
		return true
	}

	return false
}

// SetCouponId gets a reference to the given string and assigns it to the CouponId field.
func (o *Subscription) SetCouponId(v string) {
	o.CouponId = &v
}

// GetCurrentPeriodEnd returns the CurrentPeriodEnd field value if set, zero value otherwise.
func (o *Subscription) GetCurrentPeriodEnd() int32 {
	if o == nil || IsNil(o.CurrentPeriodEnd) {
		var ret int32
		return ret
	}
	return *o.CurrentPeriodEnd
}

// GetCurrentPeriodEndOk returns a tuple with the CurrentPeriodEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetCurrentPeriodEndOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrentPeriodEnd) {
		return nil, false
	}
	return o.CurrentPeriodEnd, true
}

// HasCurrentPeriodEnd returns a boolean if a field has been set.
func (o *Subscription) HasCurrentPeriodEnd() bool {
	if o != nil && !IsNil(o.CurrentPeriodEnd) {
		return true
	}

	return false
}

// SetCurrentPeriodEnd gets a reference to the given int32 and assigns it to the CurrentPeriodEnd field.
func (o *Subscription) SetCurrentPeriodEnd(v int32) {
	o.CurrentPeriodEnd = &v
}

// GetUpcomingEmail1WeekSent returns the UpcomingEmail1WeekSent field value if set, zero value otherwise.
func (o *Subscription) GetUpcomingEmail1WeekSent() bool {
	if o == nil || IsNil(o.UpcomingEmail1WeekSent) {
		var ret bool
		return ret
	}
	return *o.UpcomingEmail1WeekSent
}

// GetUpcomingEmail1WeekSentOk returns a tuple with the UpcomingEmail1WeekSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetUpcomingEmail1WeekSentOk() (*bool, bool) {
	if o == nil || IsNil(o.UpcomingEmail1WeekSent) {
		return nil, false
	}
	return o.UpcomingEmail1WeekSent, true
}

// HasUpcomingEmail1WeekSent returns a boolean if a field has been set.
func (o *Subscription) HasUpcomingEmail1WeekSent() bool {
	if o != nil && !IsNil(o.UpcomingEmail1WeekSent) {
		return true
	}

	return false
}

// SetUpcomingEmail1WeekSent gets a reference to the given bool and assigns it to the UpcomingEmail1WeekSent field.
func (o *Subscription) SetUpcomingEmail1WeekSent(v bool) {
	o.UpcomingEmail1WeekSent = &v
}

// GetTrialPeriodEndingEmailSent returns the TrialPeriodEndingEmailSent field value if set, zero value otherwise.
func (o *Subscription) GetTrialPeriodEndingEmailSent() bool {
	if o == nil || IsNil(o.TrialPeriodEndingEmailSent) {
		var ret bool
		return ret
	}
	return *o.TrialPeriodEndingEmailSent
}

// GetTrialPeriodEndingEmailSentOk returns a tuple with the TrialPeriodEndingEmailSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetTrialPeriodEndingEmailSentOk() (*bool, bool) {
	if o == nil || IsNil(o.TrialPeriodEndingEmailSent) {
		return nil, false
	}
	return o.TrialPeriodEndingEmailSent, true
}

// HasTrialPeriodEndingEmailSent returns a boolean if a field has been set.
func (o *Subscription) HasTrialPeriodEndingEmailSent() bool {
	if o != nil && !IsNil(o.TrialPeriodEndingEmailSent) {
		return true
	}

	return false
}

// SetTrialPeriodEndingEmailSent gets a reference to the given bool and assigns it to the TrialPeriodEndingEmailSent field.
func (o *Subscription) SetTrialPeriodEndingEmailSent(v bool) {
	o.TrialPeriodEndingEmailSent = &v
}

// GetRenewalInvoiceCreated returns the RenewalInvoiceCreated field value if set, zero value otherwise.
func (o *Subscription) GetRenewalInvoiceCreated() bool {
	if o == nil || IsNil(o.RenewalInvoiceCreated) {
		var ret bool
		return ret
	}
	return *o.RenewalInvoiceCreated
}

// GetRenewalInvoiceCreatedOk returns a tuple with the RenewalInvoiceCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetRenewalInvoiceCreatedOk() (*bool, bool) {
	if o == nil || IsNil(o.RenewalInvoiceCreated) {
		return nil, false
	}
	return o.RenewalInvoiceCreated, true
}

// HasRenewalInvoiceCreated returns a boolean if a field has been set.
func (o *Subscription) HasRenewalInvoiceCreated() bool {
	if o != nil && !IsNil(o.RenewalInvoiceCreated) {
		return true
	}

	return false
}

// SetRenewalInvoiceCreated gets a reference to the given bool and assigns it to the RenewalInvoiceCreated field.
func (o *Subscription) SetRenewalInvoiceCreated(v bool) {
	o.RenewalInvoiceCreated = &v
}

// GetStatusDetails returns the StatusDetails field value if set, zero value otherwise.
func (o *Subscription) GetStatusDetails() string {
	if o == nil || IsNil(o.StatusDetails) {
		var ret string
		return ret
	}
	return *o.StatusDetails
}

// GetStatusDetailsOk returns a tuple with the StatusDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetStatusDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.StatusDetails) {
		return nil, false
	}
	return o.StatusDetails, true
}

// HasStatusDetails returns a boolean if a field has been set.
func (o *Subscription) HasStatusDetails() bool {
	if o != nil && !IsNil(o.StatusDetails) {
		return true
	}

	return false
}

// SetStatusDetails gets a reference to the given string and assigns it to the StatusDetails field.
func (o *Subscription) SetStatusDetails(v string) {
	o.StatusDetails = &v
}

// GetCanceledAt returns the CanceledAt field value if set, zero value otherwise.
func (o *Subscription) GetCanceledAt() int32 {
	if o == nil || IsNil(o.CanceledAt) {
		var ret int32
		return ret
	}
	return *o.CanceledAt
}

// GetCanceledAtOk returns a tuple with the CanceledAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetCanceledAtOk() (*int32, bool) {
	if o == nil || IsNil(o.CanceledAt) {
		return nil, false
	}
	return o.CanceledAt, true
}

// HasCanceledAt returns a boolean if a field has been set.
func (o *Subscription) HasCanceledAt() bool {
	if o != nil && !IsNil(o.CanceledAt) {
		return true
	}

	return false
}

// SetCanceledAt gets a reference to the given int32 and assigns it to the CanceledAt field.
func (o *Subscription) SetCanceledAt(v int32) {
	o.CanceledAt = &v
}

// GetStripeCustomerId returns the StripeCustomerId field value if set, zero value otherwise.
func (o *Subscription) GetStripeCustomerId() string {
	if o == nil || IsNil(o.StripeCustomerId) {
		var ret string
		return ret
	}
	return *o.StripeCustomerId
}

// GetStripeCustomerIdOk returns a tuple with the StripeCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetStripeCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.StripeCustomerId) {
		return nil, false
	}
	return o.StripeCustomerId, true
}

// HasStripeCustomerId returns a boolean if a field has been set.
func (o *Subscription) HasStripeCustomerId() bool {
	if o != nil && !IsNil(o.StripeCustomerId) {
		return true
	}

	return false
}

// SetStripeCustomerId gets a reference to the given string and assigns it to the StripeCustomerId field.
func (o *Subscription) SetStripeCustomerId(v string) {
	o.StripeCustomerId = &v
}

// GetStripeAccount returns the StripeAccount field value if set, zero value otherwise.
func (o *Subscription) GetStripeAccount() string {
	if o == nil || IsNil(o.StripeAccount) {
		var ret string
		return ret
	}
	return *o.StripeAccount
}

// GetStripeAccountOk returns a tuple with the StripeAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetStripeAccountOk() (*string, bool) {
	if o == nil || IsNil(o.StripeAccount) {
		return nil, false
	}
	return o.StripeAccount, true
}

// HasStripeAccount returns a boolean if a field has been set.
func (o *Subscription) HasStripeAccount() bool {
	if o != nil && !IsNil(o.StripeAccount) {
		return true
	}

	return false
}

// SetStripeAccount gets a reference to the given string and assigns it to the StripeAccount field.
func (o *Subscription) SetStripeAccount(v string) {
	o.StripeAccount = &v
}

// GetStripeSubscriptionId returns the StripeSubscriptionId field value if set, zero value otherwise.
func (o *Subscription) GetStripeSubscriptionId() string {
	if o == nil || IsNil(o.StripeSubscriptionId) {
		var ret string
		return ret
	}
	return *o.StripeSubscriptionId
}

// GetStripeSubscriptionIdOk returns a tuple with the StripeSubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetStripeSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.StripeSubscriptionId) {
		return nil, false
	}
	return o.StripeSubscriptionId, true
}

// HasStripeSubscriptionId returns a boolean if a field has been set.
func (o *Subscription) HasStripeSubscriptionId() bool {
	if o != nil && !IsNil(o.StripeSubscriptionId) {
		return true
	}

	return false
}

// SetStripeSubscriptionId gets a reference to the given string and assigns it to the StripeSubscriptionId field.
func (o *Subscription) SetStripeSubscriptionId(v string) {
	o.StripeSubscriptionId = &v
}

// GetPaypalAccount returns the PaypalAccount field value if set, zero value otherwise.
func (o *Subscription) GetPaypalAccount() string {
	if o == nil || IsNil(o.PaypalAccount) {
		var ret string
		return ret
	}
	return *o.PaypalAccount
}

// GetPaypalAccountOk returns a tuple with the PaypalAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetPaypalAccountOk() (*string, bool) {
	if o == nil || IsNil(o.PaypalAccount) {
		return nil, false
	}
	return o.PaypalAccount, true
}

// HasPaypalAccount returns a boolean if a field has been set.
func (o *Subscription) HasPaypalAccount() bool {
	if o != nil && !IsNil(o.PaypalAccount) {
		return true
	}

	return false
}

// SetPaypalAccount gets a reference to the given string and assigns it to the PaypalAccount field.
func (o *Subscription) SetPaypalAccount(v string) {
	o.PaypalAccount = &v
}

// GetPaypalSubscriptionId returns the PaypalSubscriptionId field value if set, zero value otherwise.
func (o *Subscription) GetPaypalSubscriptionId() string {
	if o == nil || IsNil(o.PaypalSubscriptionId) {
		var ret string
		return ret
	}
	return *o.PaypalSubscriptionId
}

// GetPaypalSubscriptionIdOk returns a tuple with the PaypalSubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetPaypalSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaypalSubscriptionId) {
		return nil, false
	}
	return o.PaypalSubscriptionId, true
}

// HasPaypalSubscriptionId returns a boolean if a field has been set.
func (o *Subscription) HasPaypalSubscriptionId() bool {
	if o != nil && !IsNil(o.PaypalSubscriptionId) {
		return true
	}

	return false
}

// SetPaypalSubscriptionId gets a reference to the given string and assigns it to the PaypalSubscriptionId field.
func (o *Subscription) SetPaypalSubscriptionId(v string) {
	o.PaypalSubscriptionId = &v
}

// GetProductTitle returns the ProductTitle field value if set, zero value otherwise.
func (o *Subscription) GetProductTitle() string {
	if o == nil || IsNil(o.ProductTitle) {
		var ret string
		return ret
	}
	return *o.ProductTitle
}

// GetProductTitleOk returns a tuple with the ProductTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetProductTitleOk() (*string, bool) {
	if o == nil || IsNil(o.ProductTitle) {
		return nil, false
	}
	return o.ProductTitle, true
}

// HasProductTitle returns a boolean if a field has been set.
func (o *Subscription) HasProductTitle() bool {
	if o != nil && !IsNil(o.ProductTitle) {
		return true
	}

	return false
}

// SetProductTitle gets a reference to the given string and assigns it to the ProductTitle field.
func (o *Subscription) SetProductTitle(v string) {
	o.ProductTitle = &v
}

// GetProductPlanTitle returns the ProductPlanTitle field value if set, zero value otherwise.
func (o *Subscription) GetProductPlanTitle() string {
	if o == nil || IsNil(o.ProductPlanTitle) {
		var ret string
		return ret
	}
	return *o.ProductPlanTitle
}

// GetProductPlanTitleOk returns a tuple with the ProductPlanTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetProductPlanTitleOk() (*string, bool) {
	if o == nil || IsNil(o.ProductPlanTitle) {
		return nil, false
	}
	return o.ProductPlanTitle, true
}

// HasProductPlanTitle returns a boolean if a field has been set.
func (o *Subscription) HasProductPlanTitle() bool {
	if o != nil && !IsNil(o.ProductPlanTitle) {
		return true
	}

	return false
}

// SetProductPlanTitle gets a reference to the given string and assigns it to the ProductPlanTitle field.
func (o *Subscription) SetProductPlanTitle(v string) {
	o.ProductPlanTitle = &v
}

// GetCloudflareImageId returns the CloudflareImageId field value if set, zero value otherwise.
func (o *Subscription) GetCloudflareImageId() string {
	if o == nil || IsNil(o.CloudflareImageId) {
		var ret string
		return ret
	}
	return *o.CloudflareImageId
}

// GetCloudflareImageIdOk returns a tuple with the CloudflareImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetCloudflareImageIdOk() (*string, bool) {
	if o == nil || IsNil(o.CloudflareImageId) {
		return nil, false
	}
	return o.CloudflareImageId, true
}

// HasCloudflareImageId returns a boolean if a field has been set.
func (o *Subscription) HasCloudflareImageId() bool {
	if o != nil && !IsNil(o.CloudflareImageId) {
		return true
	}

	return false
}

// SetCloudflareImageId gets a reference to the given string and assigns it to the CloudflareImageId field.
func (o *Subscription) SetCloudflareImageId(v string) {
	o.CloudflareImageId = &v
}

// GetCustomerName returns the CustomerName field value if set, zero value otherwise.
func (o *Subscription) GetCustomerName() string {
	if o == nil || IsNil(o.CustomerName) {
		var ret string
		return ret
	}
	return *o.CustomerName
}

// GetCustomerNameOk returns a tuple with the CustomerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetCustomerNameOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerName) {
		return nil, false
	}
	return o.CustomerName, true
}

// HasCustomerName returns a boolean if a field has been set.
func (o *Subscription) HasCustomerName() bool {
	if o != nil && !IsNil(o.CustomerName) {
		return true
	}

	return false
}

// SetCustomerName gets a reference to the given string and assigns it to the CustomerName field.
func (o *Subscription) SetCustomerName(v string) {
	o.CustomerName = &v
}

// GetCustomerSurname returns the CustomerSurname field value if set, zero value otherwise.
func (o *Subscription) GetCustomerSurname() string {
	if o == nil || IsNil(o.CustomerSurname) {
		var ret string
		return ret
	}
	return *o.CustomerSurname
}

// GetCustomerSurnameOk returns a tuple with the CustomerSurname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetCustomerSurnameOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerSurname) {
		return nil, false
	}
	return o.CustomerSurname, true
}

// HasCustomerSurname returns a boolean if a field has been set.
func (o *Subscription) HasCustomerSurname() bool {
	if o != nil && !IsNil(o.CustomerSurname) {
		return true
	}

	return false
}

// SetCustomerSurname gets a reference to the given string and assigns it to the CustomerSurname field.
func (o *Subscription) SetCustomerSurname(v string) {
	o.CustomerSurname = &v
}

// GetCustomerPhone returns the CustomerPhone field value if set, zero value otherwise.
func (o *Subscription) GetCustomerPhone() string {
	if o == nil || IsNil(o.CustomerPhone) {
		var ret string
		return ret
	}
	return *o.CustomerPhone
}

// GetCustomerPhoneOk returns a tuple with the CustomerPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetCustomerPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerPhone) {
		return nil, false
	}
	return o.CustomerPhone, true
}

// HasCustomerPhone returns a boolean if a field has been set.
func (o *Subscription) HasCustomerPhone() bool {
	if o != nil && !IsNil(o.CustomerPhone) {
		return true
	}

	return false
}

// SetCustomerPhone gets a reference to the given string and assigns it to the CustomerPhone field.
func (o *Subscription) SetCustomerPhone(v string) {
	o.CustomerPhone = &v
}

// GetCustomerPhoneCountryCode returns the CustomerPhoneCountryCode field value if set, zero value otherwise.
func (o *Subscription) GetCustomerPhoneCountryCode() string {
	if o == nil || IsNil(o.CustomerPhoneCountryCode) {
		var ret string
		return ret
	}
	return *o.CustomerPhoneCountryCode
}

// GetCustomerPhoneCountryCodeOk returns a tuple with the CustomerPhoneCountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetCustomerPhoneCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerPhoneCountryCode) {
		return nil, false
	}
	return o.CustomerPhoneCountryCode, true
}

// HasCustomerPhoneCountryCode returns a boolean if a field has been set.
func (o *Subscription) HasCustomerPhoneCountryCode() bool {
	if o != nil && !IsNil(o.CustomerPhoneCountryCode) {
		return true
	}

	return false
}

// SetCustomerPhoneCountryCode gets a reference to the given string and assigns it to the CustomerPhoneCountryCode field.
func (o *Subscription) SetCustomerPhoneCountryCode(v string) {
	o.CustomerPhoneCountryCode = &v
}

// GetCustomerCountryCode returns the CustomerCountryCode field value if set, zero value otherwise.
func (o *Subscription) GetCustomerCountryCode() string {
	if o == nil || IsNil(o.CustomerCountryCode) {
		var ret string
		return ret
	}
	return *o.CustomerCountryCode
}

// GetCustomerCountryCodeOk returns a tuple with the CustomerCountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetCustomerCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerCountryCode) {
		return nil, false
	}
	return o.CustomerCountryCode, true
}

// HasCustomerCountryCode returns a boolean if a field has been set.
func (o *Subscription) HasCustomerCountryCode() bool {
	if o != nil && !IsNil(o.CustomerCountryCode) {
		return true
	}

	return false
}

// SetCustomerCountryCode gets a reference to the given string and assigns it to the CustomerCountryCode field.
func (o *Subscription) SetCustomerCountryCode(v string) {
	o.CustomerCountryCode = &v
}

// GetCustomerStreetAddress returns the CustomerStreetAddress field value if set, zero value otherwise.
func (o *Subscription) GetCustomerStreetAddress() string {
	if o == nil || IsNil(o.CustomerStreetAddress) {
		var ret string
		return ret
	}
	return *o.CustomerStreetAddress
}

// GetCustomerStreetAddressOk returns a tuple with the CustomerStreetAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetCustomerStreetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerStreetAddress) {
		return nil, false
	}
	return o.CustomerStreetAddress, true
}

// HasCustomerStreetAddress returns a boolean if a field has been set.
func (o *Subscription) HasCustomerStreetAddress() bool {
	if o != nil && !IsNil(o.CustomerStreetAddress) {
		return true
	}

	return false
}

// SetCustomerStreetAddress gets a reference to the given string and assigns it to the CustomerStreetAddress field.
func (o *Subscription) SetCustomerStreetAddress(v string) {
	o.CustomerStreetAddress = &v
}

// GetCustomerAdditionalAddressInfo returns the CustomerAdditionalAddressInfo field value if set, zero value otherwise.
func (o *Subscription) GetCustomerAdditionalAddressInfo() string {
	if o == nil || IsNil(o.CustomerAdditionalAddressInfo) {
		var ret string
		return ret
	}
	return *o.CustomerAdditionalAddressInfo
}

// GetCustomerAdditionalAddressInfoOk returns a tuple with the CustomerAdditionalAddressInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetCustomerAdditionalAddressInfoOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerAdditionalAddressInfo) {
		return nil, false
	}
	return o.CustomerAdditionalAddressInfo, true
}

// HasCustomerAdditionalAddressInfo returns a boolean if a field has been set.
func (o *Subscription) HasCustomerAdditionalAddressInfo() bool {
	if o != nil && !IsNil(o.CustomerAdditionalAddressInfo) {
		return true
	}

	return false
}

// SetCustomerAdditionalAddressInfo gets a reference to the given string and assigns it to the CustomerAdditionalAddressInfo field.
func (o *Subscription) SetCustomerAdditionalAddressInfo(v string) {
	o.CustomerAdditionalAddressInfo = &v
}

// GetCustomerCity returns the CustomerCity field value if set, zero value otherwise.
func (o *Subscription) GetCustomerCity() string {
	if o == nil || IsNil(o.CustomerCity) {
		var ret string
		return ret
	}
	return *o.CustomerCity
}

// GetCustomerCityOk returns a tuple with the CustomerCity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetCustomerCityOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerCity) {
		return nil, false
	}
	return o.CustomerCity, true
}

// HasCustomerCity returns a boolean if a field has been set.
func (o *Subscription) HasCustomerCity() bool {
	if o != nil && !IsNil(o.CustomerCity) {
		return true
	}

	return false
}

// SetCustomerCity gets a reference to the given string and assigns it to the CustomerCity field.
func (o *Subscription) SetCustomerCity(v string) {
	o.CustomerCity = &v
}

// GetCustomerPostalCode returns the CustomerPostalCode field value if set, zero value otherwise.
func (o *Subscription) GetCustomerPostalCode() string {
	if o == nil || IsNil(o.CustomerPostalCode) {
		var ret string
		return ret
	}
	return *o.CustomerPostalCode
}

// GetCustomerPostalCodeOk returns a tuple with the CustomerPostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetCustomerPostalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerPostalCode) {
		return nil, false
	}
	return o.CustomerPostalCode, true
}

// HasCustomerPostalCode returns a boolean if a field has been set.
func (o *Subscription) HasCustomerPostalCode() bool {
	if o != nil && !IsNil(o.CustomerPostalCode) {
		return true
	}

	return false
}

// SetCustomerPostalCode gets a reference to the given string and assigns it to the CustomerPostalCode field.
func (o *Subscription) SetCustomerPostalCode(v string) {
	o.CustomerPostalCode = &v
}

// GetCustomerState returns the CustomerState field value if set, zero value otherwise.
func (o *Subscription) GetCustomerState() string {
	if o == nil || IsNil(o.CustomerState) {
		var ret string
		return ret
	}
	return *o.CustomerState
}

// GetCustomerStateOk returns a tuple with the CustomerState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetCustomerStateOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerState) {
		return nil, false
	}
	return o.CustomerState, true
}

// HasCustomerState returns a boolean if a field has been set.
func (o *Subscription) HasCustomerState() bool {
	if o != nil && !IsNil(o.CustomerState) {
		return true
	}

	return false
}

// SetCustomerState gets a reference to the given string and assigns it to the CustomerState field.
func (o *Subscription) SetCustomerState(v string) {
	o.CustomerState = &v
}

// GetCustomerEmail returns the CustomerEmail field value if set, zero value otherwise.
func (o *Subscription) GetCustomerEmail() string {
	if o == nil || IsNil(o.CustomerEmail) {
		var ret string
		return ret
	}
	return *o.CustomerEmail
}

// GetCustomerEmailOk returns a tuple with the CustomerEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetCustomerEmailOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerEmail) {
		return nil, false
	}
	return o.CustomerEmail, true
}

// HasCustomerEmail returns a boolean if a field has been set.
func (o *Subscription) HasCustomerEmail() bool {
	if o != nil && !IsNil(o.CustomerEmail) {
		return true
	}

	return false
}

// SetCustomerEmail gets a reference to the given string and assigns it to the CustomerEmail field.
func (o *Subscription) SetCustomerEmail(v string) {
	o.CustomerEmail = &v
}

// GetShopName returns the ShopName field value if set, zero value otherwise.
func (o *Subscription) GetShopName() string {
	if o == nil || IsNil(o.ShopName) {
		var ret string
		return ret
	}
	return *o.ShopName
}

// GetShopNameOk returns a tuple with the ShopName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetShopNameOk() (*string, bool) {
	if o == nil || IsNil(o.ShopName) {
		return nil, false
	}
	return o.ShopName, true
}

// HasShopName returns a boolean if a field has been set.
func (o *Subscription) HasShopName() bool {
	if o != nil && !IsNil(o.ShopName) {
		return true
	}

	return false
}

// SetShopName gets a reference to the given string and assigns it to the ShopName field.
func (o *Subscription) SetShopName(v string) {
	o.ShopName = &v
}

// GetInvoices returns the Invoices field value if set, zero value otherwise.
func (o *Subscription) GetInvoices() []LegacySubscriptionInvoice {
	if o == nil || IsNil(o.Invoices) {
		var ret []LegacySubscriptionInvoice
		return ret
	}
	return o.Invoices
}

// GetInvoicesOk returns a tuple with the Invoices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetInvoicesOk() ([]LegacySubscriptionInvoice, bool) {
	if o == nil || IsNil(o.Invoices) {
		return nil, false
	}
	return o.Invoices, true
}

// HasInvoices returns a boolean if a field has been set.
func (o *Subscription) HasInvoices() bool {
	if o != nil && !IsNil(o.Invoices) {
		return true
	}

	return false
}

// SetInvoices gets a reference to the given []LegacySubscriptionInvoice and assigns it to the Invoices field.
func (o *Subscription) SetInvoices(v []LegacySubscriptionInvoice) {
	o.Invoices = v
}

// GetApprovedAddress returns the ApprovedAddress field value if set, zero value otherwise.
func (o *Subscription) GetApprovedAddress() ApprovedAddress {
	if o == nil || IsNil(o.ApprovedAddress) {
		var ret ApprovedAddress
		return ret
	}
	return *o.ApprovedAddress
}

// GetApprovedAddressOk returns a tuple with the ApprovedAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetApprovedAddressOk() (*ApprovedAddress, bool) {
	if o == nil || IsNil(o.ApprovedAddress) {
		return nil, false
	}
	return o.ApprovedAddress, true
}

// HasApprovedAddress returns a boolean if a field has been set.
func (o *Subscription) HasApprovedAddress() bool {
	if o != nil && !IsNil(o.ApprovedAddress) {
		return true
	}

	return false
}

// SetApprovedAddress gets a reference to the given ApprovedAddress and assigns it to the ApprovedAddress field.
func (o *Subscription) SetApprovedAddress(v ApprovedAddress) {
	o.ApprovedAddress = &v
}

// GetGatewaysAvailable returns the GatewaysAvailable field value if set, zero value otherwise.
func (o *Subscription) GetGatewaysAvailable() []Gateway {
	if o == nil || IsNil(o.GatewaysAvailable) {
		var ret []Gateway
		return ret
	}
	return o.GatewaysAvailable
}

// GetGatewaysAvailableOk returns a tuple with the GatewaysAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetGatewaysAvailableOk() ([]Gateway, bool) {
	if o == nil || IsNil(o.GatewaysAvailable) {
		return nil, false
	}
	return o.GatewaysAvailable, true
}

// HasGatewaysAvailable returns a boolean if a field has been set.
func (o *Subscription) HasGatewaysAvailable() bool {
	if o != nil && !IsNil(o.GatewaysAvailable) {
		return true
	}

	return false
}

// SetGatewaysAvailable gets a reference to the given []Gateway and assigns it to the GatewaysAvailable field.
func (o *Subscription) SetGatewaysAvailable(v []Gateway) {
	o.GatewaysAvailable = v
}

func (o Subscription) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Subscription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ProductSubscriptionId) {
		toSerialize["product_subscription_id"] = o.ProductSubscriptionId
	}
	if !IsNil(o.ShopId) {
		toSerialize["shop_id"] = o.ShopId
	}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.ProductPlanId) {
		toSerialize["product_plan_id"] = o.ProductPlanId
	}
	if !IsNil(o.CustomerId) {
		toSerialize["customer_id"] = o.CustomerId
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if !IsNil(o.CouponId) {
		toSerialize["coupon_id"] = o.CouponId
	}
	if !IsNil(o.CurrentPeriodEnd) {
		toSerialize["current_period_end"] = o.CurrentPeriodEnd
	}
	if !IsNil(o.UpcomingEmail1WeekSent) {
		toSerialize["upcoming_email_1_week_sent"] = o.UpcomingEmail1WeekSent
	}
	if !IsNil(o.TrialPeriodEndingEmailSent) {
		toSerialize["trial_period_ending_email_sent"] = o.TrialPeriodEndingEmailSent
	}
	if !IsNil(o.RenewalInvoiceCreated) {
		toSerialize["renewal_invoice_created"] = o.RenewalInvoiceCreated
	}
	if !IsNil(o.StatusDetails) {
		toSerialize["status_details"] = o.StatusDetails
	}
	if !IsNil(o.CanceledAt) {
		toSerialize["canceled_at"] = o.CanceledAt
	}
	if !IsNil(o.StripeCustomerId) {
		toSerialize["stripe_customer_id"] = o.StripeCustomerId
	}
	if !IsNil(o.StripeAccount) {
		toSerialize["stripe_account"] = o.StripeAccount
	}
	if !IsNil(o.StripeSubscriptionId) {
		toSerialize["stripe_subscription_id"] = o.StripeSubscriptionId
	}
	if !IsNil(o.PaypalAccount) {
		toSerialize["paypal_account"] = o.PaypalAccount
	}
	if !IsNil(o.PaypalSubscriptionId) {
		toSerialize["paypal_subscription_id"] = o.PaypalSubscriptionId
	}
	if !IsNil(o.ProductTitle) {
		toSerialize["product_title"] = o.ProductTitle
	}
	if !IsNil(o.ProductPlanTitle) {
		toSerialize["product_plan_title"] = o.ProductPlanTitle
	}
	if !IsNil(o.CloudflareImageId) {
		toSerialize["cloudflare_image_id"] = o.CloudflareImageId
	}
	if !IsNil(o.CustomerName) {
		toSerialize["customer_name"] = o.CustomerName
	}
	if !IsNil(o.CustomerSurname) {
		toSerialize["customer_surname"] = o.CustomerSurname
	}
	if !IsNil(o.CustomerPhone) {
		toSerialize["customer_phone"] = o.CustomerPhone
	}
	if !IsNil(o.CustomerPhoneCountryCode) {
		toSerialize["customer_phone_country_code"] = o.CustomerPhoneCountryCode
	}
	if !IsNil(o.CustomerCountryCode) {
		toSerialize["customer_country_code"] = o.CustomerCountryCode
	}
	if !IsNil(o.CustomerStreetAddress) {
		toSerialize["customer_street_address"] = o.CustomerStreetAddress
	}
	if !IsNil(o.CustomerAdditionalAddressInfo) {
		toSerialize["customer_additional_address_info"] = o.CustomerAdditionalAddressInfo
	}
	if !IsNil(o.CustomerCity) {
		toSerialize["customer_city"] = o.CustomerCity
	}
	if !IsNil(o.CustomerPostalCode) {
		toSerialize["customer_postal_code"] = o.CustomerPostalCode
	}
	if !IsNil(o.CustomerState) {
		toSerialize["customer_state"] = o.CustomerState
	}
	if !IsNil(o.CustomerEmail) {
		toSerialize["customer_email"] = o.CustomerEmail
	}
	if !IsNil(o.ShopName) {
		toSerialize["shop_name"] = o.ShopName
	}
	if !IsNil(o.Invoices) {
		toSerialize["invoices"] = o.Invoices
	}
	if !IsNil(o.ApprovedAddress) {
		toSerialize["approved_address"] = o.ApprovedAddress
	}
	if !IsNil(o.GatewaysAvailable) {
		toSerialize["gateways_available"] = o.GatewaysAvailable
	}
	return toSerialize, nil
}

type NullableSubscription struct {
	value *Subscription
	isSet bool
}

func (v NullableSubscription) Get() *Subscription {
	return v.value
}

func (v *NullableSubscription) Set(val *Subscription) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscription(val *Subscription) *NullableSubscription {
	return &NullableSubscription{value: val, isSet: true}
}

func (v NullableSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


