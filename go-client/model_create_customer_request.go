/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateCustomerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateCustomerRequest{}

// CreateCustomerRequest struct for CreateCustomerRequest
type CreateCustomerRequest struct {
	// Customer email
	Email string `json:"email"`
	// Customer name
	Name string `json:"name"`
	// Customer surname
	Surname string `json:"surname"`
	// Customer phone
	Phone *string `json:"phone,omitempty"`
	// Customer phone country code
	PhoneCountryCode *string `json:"phone_country_code,omitempty"`
	// Customer country code
	CountryCode *string `json:"country_code,omitempty"`
	// Customer street address
	StreetAddress *string `json:"street_address,omitempty"`
	// Customer street address additional info
	AdditionalAddressInfo *string `json:"additional_address_info,omitempty"`
	// Customer city
	City *string `json:"city,omitempty"`
	// Customer postal code
	PostalCode *string `json:"postal_code,omitempty"`
	// Customer state
	State *string `json:"state,omitempty"`
}

type _CreateCustomerRequest CreateCustomerRequest

// NewCreateCustomerRequest instantiates a new CreateCustomerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCustomerRequest(email string, name string, surname string) *CreateCustomerRequest {
	this := CreateCustomerRequest{}
	this.Email = email
	this.Name = name
	this.Surname = surname
	return &this
}

// NewCreateCustomerRequestWithDefaults instantiates a new CreateCustomerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCustomerRequestWithDefaults() *CreateCustomerRequest {
	this := CreateCustomerRequest{}
	return &this
}

// GetEmail returns the Email field value
func (o *CreateCustomerRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *CreateCustomerRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *CreateCustomerRequest) SetEmail(v string) {
	o.Email = v
}

// GetName returns the Name field value
func (o *CreateCustomerRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateCustomerRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateCustomerRequest) SetName(v string) {
	o.Name = v
}

// GetSurname returns the Surname field value
func (o *CreateCustomerRequest) GetSurname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Surname
}

// GetSurnameOk returns a tuple with the Surname field value
// and a boolean to check if the value has been set.
func (o *CreateCustomerRequest) GetSurnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Surname, true
}

// SetSurname sets field value
func (o *CreateCustomerRequest) SetSurname(v string) {
	o.Surname = v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *CreateCustomerRequest) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCustomerRequest) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *CreateCustomerRequest) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *CreateCustomerRequest) SetPhone(v string) {
	o.Phone = &v
}

// GetPhoneCountryCode returns the PhoneCountryCode field value if set, zero value otherwise.
func (o *CreateCustomerRequest) GetPhoneCountryCode() string {
	if o == nil || IsNil(o.PhoneCountryCode) {
		var ret string
		return ret
	}
	return *o.PhoneCountryCode
}

// GetPhoneCountryCodeOk returns a tuple with the PhoneCountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCustomerRequest) GetPhoneCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneCountryCode) {
		return nil, false
	}
	return o.PhoneCountryCode, true
}

// HasPhoneCountryCode returns a boolean if a field has been set.
func (o *CreateCustomerRequest) HasPhoneCountryCode() bool {
	if o != nil && !IsNil(o.PhoneCountryCode) {
		return true
	}

	return false
}

// SetPhoneCountryCode gets a reference to the given string and assigns it to the PhoneCountryCode field.
func (o *CreateCustomerRequest) SetPhoneCountryCode(v string) {
	o.PhoneCountryCode = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *CreateCustomerRequest) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCustomerRequest) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *CreateCustomerRequest) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *CreateCustomerRequest) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetStreetAddress returns the StreetAddress field value if set, zero value otherwise.
func (o *CreateCustomerRequest) GetStreetAddress() string {
	if o == nil || IsNil(o.StreetAddress) {
		var ret string
		return ret
	}
	return *o.StreetAddress
}

// GetStreetAddressOk returns a tuple with the StreetAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCustomerRequest) GetStreetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.StreetAddress) {
		return nil, false
	}
	return o.StreetAddress, true
}

// HasStreetAddress returns a boolean if a field has been set.
func (o *CreateCustomerRequest) HasStreetAddress() bool {
	if o != nil && !IsNil(o.StreetAddress) {
		return true
	}

	return false
}

// SetStreetAddress gets a reference to the given string and assigns it to the StreetAddress field.
func (o *CreateCustomerRequest) SetStreetAddress(v string) {
	o.StreetAddress = &v
}

// GetAdditionalAddressInfo returns the AdditionalAddressInfo field value if set, zero value otherwise.
func (o *CreateCustomerRequest) GetAdditionalAddressInfo() string {
	if o == nil || IsNil(o.AdditionalAddressInfo) {
		var ret string
		return ret
	}
	return *o.AdditionalAddressInfo
}

// GetAdditionalAddressInfoOk returns a tuple with the AdditionalAddressInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCustomerRequest) GetAdditionalAddressInfoOk() (*string, bool) {
	if o == nil || IsNil(o.AdditionalAddressInfo) {
		return nil, false
	}
	return o.AdditionalAddressInfo, true
}

// HasAdditionalAddressInfo returns a boolean if a field has been set.
func (o *CreateCustomerRequest) HasAdditionalAddressInfo() bool {
	if o != nil && !IsNil(o.AdditionalAddressInfo) {
		return true
	}

	return false
}

// SetAdditionalAddressInfo gets a reference to the given string and assigns it to the AdditionalAddressInfo field.
func (o *CreateCustomerRequest) SetAdditionalAddressInfo(v string) {
	o.AdditionalAddressInfo = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *CreateCustomerRequest) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCustomerRequest) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *CreateCustomerRequest) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *CreateCustomerRequest) SetCity(v string) {
	o.City = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *CreateCustomerRequest) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode) {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCustomerRequest) GetPostalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PostalCode) {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *CreateCustomerRequest) HasPostalCode() bool {
	if o != nil && !IsNil(o.PostalCode) {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *CreateCustomerRequest) SetPostalCode(v string) {
	o.PostalCode = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *CreateCustomerRequest) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCustomerRequest) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *CreateCustomerRequest) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *CreateCustomerRequest) SetState(v string) {
	o.State = &v
}

func (o CreateCustomerRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCustomerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	toSerialize["name"] = o.Name
	toSerialize["surname"] = o.Surname
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.PhoneCountryCode) {
		toSerialize["phone_country_code"] = o.PhoneCountryCode
	}
	if !IsNil(o.CountryCode) {
		toSerialize["country_code"] = o.CountryCode
	}
	if !IsNil(o.StreetAddress) {
		toSerialize["street_address"] = o.StreetAddress
	}
	if !IsNil(o.AdditionalAddressInfo) {
		toSerialize["additional_address_info"] = o.AdditionalAddressInfo
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.PostalCode) {
		toSerialize["postal_code"] = o.PostalCode
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	return toSerialize, nil
}

func (o *CreateCustomerRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
		"name",
		"surname",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateCustomerRequest := _CreateCustomerRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateCustomerRequest)

	if err != nil {
		return err
	}

	*o = CreateCustomerRequest(varCreateCustomerRequest)

	return err
}

type NullableCreateCustomerRequest struct {
	value *CreateCustomerRequest
	isSet bool
}

func (v NullableCreateCustomerRequest) Get() *CreateCustomerRequest {
	return v.value
}

func (v *NullableCreateCustomerRequest) Set(val *CreateCustomerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCustomerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCustomerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCustomerRequest(val *CreateCustomerRequest) *NullableCreateCustomerRequest {
	return &NullableCreateCustomerRequest{value: val, isSet: true}
}

func (v NullableCreateCustomerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCustomerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


