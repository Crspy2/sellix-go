/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the AmlWalletBlockchainInfoCluster type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AmlWalletBlockchainInfoCluster{}

// AmlWalletBlockchainInfoCluster struct for AmlWalletBlockchainInfoCluster
type AmlWalletBlockchainInfoCluster struct {
	InflowValue *AmlWalletBlockchainInfoClusterInflowValue `json:"inflow_value,omitempty"`
	OutflowValue *AmlWalletBlockchainInfoClusterOutflowValue `json:"outflow_value,omitempty"`
}

// NewAmlWalletBlockchainInfoCluster instantiates a new AmlWalletBlockchainInfoCluster object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmlWalletBlockchainInfoCluster() *AmlWalletBlockchainInfoCluster {
	this := AmlWalletBlockchainInfoCluster{}
	return &this
}

// NewAmlWalletBlockchainInfoClusterWithDefaults instantiates a new AmlWalletBlockchainInfoCluster object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmlWalletBlockchainInfoClusterWithDefaults() *AmlWalletBlockchainInfoCluster {
	this := AmlWalletBlockchainInfoCluster{}
	return &this
}

// GetInflowValue returns the InflowValue field value if set, zero value otherwise.
func (o *AmlWalletBlockchainInfoCluster) GetInflowValue() AmlWalletBlockchainInfoClusterInflowValue {
	if o == nil || IsNil(o.InflowValue) {
		var ret AmlWalletBlockchainInfoClusterInflowValue
		return ret
	}
	return *o.InflowValue
}

// GetInflowValueOk returns a tuple with the InflowValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmlWalletBlockchainInfoCluster) GetInflowValueOk() (*AmlWalletBlockchainInfoClusterInflowValue, bool) {
	if o == nil || IsNil(o.InflowValue) {
		return nil, false
	}
	return o.InflowValue, true
}

// HasInflowValue returns a boolean if a field has been set.
func (o *AmlWalletBlockchainInfoCluster) HasInflowValue() bool {
	if o != nil && !IsNil(o.InflowValue) {
		return true
	}

	return false
}

// SetInflowValue gets a reference to the given AmlWalletBlockchainInfoClusterInflowValue and assigns it to the InflowValue field.
func (o *AmlWalletBlockchainInfoCluster) SetInflowValue(v AmlWalletBlockchainInfoClusterInflowValue) {
	o.InflowValue = &v
}

// GetOutflowValue returns the OutflowValue field value if set, zero value otherwise.
func (o *AmlWalletBlockchainInfoCluster) GetOutflowValue() AmlWalletBlockchainInfoClusterOutflowValue {
	if o == nil || IsNil(o.OutflowValue) {
		var ret AmlWalletBlockchainInfoClusterOutflowValue
		return ret
	}
	return *o.OutflowValue
}

// GetOutflowValueOk returns a tuple with the OutflowValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmlWalletBlockchainInfoCluster) GetOutflowValueOk() (*AmlWalletBlockchainInfoClusterOutflowValue, bool) {
	if o == nil || IsNil(o.OutflowValue) {
		return nil, false
	}
	return o.OutflowValue, true
}

// HasOutflowValue returns a boolean if a field has been set.
func (o *AmlWalletBlockchainInfoCluster) HasOutflowValue() bool {
	if o != nil && !IsNil(o.OutflowValue) {
		return true
	}

	return false
}

// SetOutflowValue gets a reference to the given AmlWalletBlockchainInfoClusterOutflowValue and assigns it to the OutflowValue field.
func (o *AmlWalletBlockchainInfoCluster) SetOutflowValue(v AmlWalletBlockchainInfoClusterOutflowValue) {
	o.OutflowValue = &v
}

func (o AmlWalletBlockchainInfoCluster) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AmlWalletBlockchainInfoCluster) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InflowValue) {
		toSerialize["inflow_value"] = o.InflowValue
	}
	if !IsNil(o.OutflowValue) {
		toSerialize["outflow_value"] = o.OutflowValue
	}
	return toSerialize, nil
}

type NullableAmlWalletBlockchainInfoCluster struct {
	value *AmlWalletBlockchainInfoCluster
	isSet bool
}

func (v NullableAmlWalletBlockchainInfoCluster) Get() *AmlWalletBlockchainInfoCluster {
	return v.value
}

func (v *NullableAmlWalletBlockchainInfoCluster) Set(val *AmlWalletBlockchainInfoCluster) {
	v.value = val
	v.isSet = true
}

func (v NullableAmlWalletBlockchainInfoCluster) IsSet() bool {
	return v.isSet
}

func (v *NullableAmlWalletBlockchainInfoCluster) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmlWalletBlockchainInfoCluster(val *AmlWalletBlockchainInfoCluster) *NullableAmlWalletBlockchainInfoCluster {
	return &NullableAmlWalletBlockchainInfoCluster{value: val, isSet: true}
}

func (v NullableAmlWalletBlockchainInfoCluster) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmlWalletBlockchainInfoCluster) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


