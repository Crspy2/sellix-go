/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreatePaymentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreatePaymentRequest{}

// CreatePaymentRequest struct for CreatePaymentRequest
type CreatePaymentRequest struct {
	// Required if product_id and cart are null. Defines the title of the purchase, can be the digital good's name or a brief summary of what the customer is paying for.
	Title *string `json:"title,omitempty"`
	// If specified value, currency and custom_fields will be taken from the product details.
	ProductId *string `json:"product_id,omitempty"`
	// Required for subscriptions V2. Specified which plan to use for the invoice.
	ProductPlans map[string]interface{} `json:"product_plans,omitempty"`
	Cart *CreatePaymentRequestCart `json:"cart,omitempty"`
	Gateway *Gateway `json:"gateway,omitempty"`
	Gateways []string `json:"gateways,omitempty"`
	// If gateway is PAYPAL, a paypal_apm (PayPal Alternative Payment Method) can be specified. To retrieve the available PayPal APM for a specific customer session, please refer to the PayPal SDK using window.paypal.FUNDING and fundingSource to filter out available methods. You can also use our documentation on how to process white_label payments.
	PaypalApm *string `json:"paypal_apm,omitempty"`
	// If gatewa is PAYPAL and no paypal_apm is passed, specify credit_card true to land the customer on the PayPal managed credit card page instead of the onboarding login.
	CreditCard *bool `json:"credit_card,omitempty"`
	// DEPRECATED: If gateway is LEX_HOLDINGS_GROUP, method to be used for the customer to pay.
	// Deprecated
	LexPaymentMethod *string `json:"lex_payment_method,omitempty"`
	// Required if product_id and cart are null. The customer will be asked to pay for this amount.
	Value *float64 `json:"value,omitempty"`
	// Required if product_id and cart are null, defines the currency of value.
	Currency *string `json:"currency,omitempty"`
	// Can be passed with either product_id null or not. The value or product's price will be multiplied by this amount.
	Quantity *int32 `json:"quantity,omitempty"`
	// Pass a Sellix coupon code to apply a discount over the invoice.
	CouponCode *string `json:"coupon_code,omitempty"`
	// Cryptocurrency confirmations required to count a transaction over the total crypto amount needed.
	Confirmations *int32 `json:"confirmations,omitempty"`
	// Email of the customer. Should you want to handle emails on your own, pass to this field a company email to which PDF receipts of orders will be sent for accounting and log purposes.
	Email string `json:"email"`
	// key-value JSON having as key the custom field name and as value the custom field value inserted by the customer. Custom fields can both be used as inputs from the customers but also as metadata for invoices, letting you pass hidden fields for internal referencing.
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	FraudShield *CreatePaymentRequestFraudShield `json:"fraud_shield,omitempty"`
	// DEPRECATED: Webhook URL to which updates regarding this payment (invoice) will be sent.
	Webhook *string `json:"webhook,omitempty"`
	// Whether or not you want to handle the payments UI. If false, return_url must be specified as it is the website where we will redirect the customer once he has paid through our platform. If true, we will return a full invoice object in the response for you to handle. You can receive updates over invoices and handle subsequent logics through our webhooks.
	WhiteLabel *bool `json:"white_label,omitempty"`
	ReturnUrl *string `json:"return_url,omitempty"`
}

type _CreatePaymentRequest CreatePaymentRequest

// NewCreatePaymentRequest instantiates a new CreatePaymentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePaymentRequest(email string) *CreatePaymentRequest {
	this := CreatePaymentRequest{}
	this.Email = email
	return &this
}

// NewCreatePaymentRequestWithDefaults instantiates a new CreatePaymentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePaymentRequestWithDefaults() *CreatePaymentRequest {
	this := CreatePaymentRequest{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *CreatePaymentRequest) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentRequest) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *CreatePaymentRequest) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *CreatePaymentRequest) SetTitle(v string) {
	o.Title = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *CreatePaymentRequest) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentRequest) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *CreatePaymentRequest) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *CreatePaymentRequest) SetProductId(v string) {
	o.ProductId = &v
}

// GetProductPlans returns the ProductPlans field value if set, zero value otherwise.
func (o *CreatePaymentRequest) GetProductPlans() map[string]interface{} {
	if o == nil || IsNil(o.ProductPlans) {
		var ret map[string]interface{}
		return ret
	}
	return o.ProductPlans
}

// GetProductPlansOk returns a tuple with the ProductPlans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentRequest) GetProductPlansOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ProductPlans) {
		return map[string]interface{}{}, false
	}
	return o.ProductPlans, true
}

// HasProductPlans returns a boolean if a field has been set.
func (o *CreatePaymentRequest) HasProductPlans() bool {
	if o != nil && !IsNil(o.ProductPlans) {
		return true
	}

	return false
}

// SetProductPlans gets a reference to the given map[string]interface{} and assigns it to the ProductPlans field.
func (o *CreatePaymentRequest) SetProductPlans(v map[string]interface{}) {
	o.ProductPlans = v
}

// GetCart returns the Cart field value if set, zero value otherwise.
func (o *CreatePaymentRequest) GetCart() CreatePaymentRequestCart {
	if o == nil || IsNil(o.Cart) {
		var ret CreatePaymentRequestCart
		return ret
	}
	return *o.Cart
}

// GetCartOk returns a tuple with the Cart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentRequest) GetCartOk() (*CreatePaymentRequestCart, bool) {
	if o == nil || IsNil(o.Cart) {
		return nil, false
	}
	return o.Cart, true
}

// HasCart returns a boolean if a field has been set.
func (o *CreatePaymentRequest) HasCart() bool {
	if o != nil && !IsNil(o.Cart) {
		return true
	}

	return false
}

// SetCart gets a reference to the given CreatePaymentRequestCart and assigns it to the Cart field.
func (o *CreatePaymentRequest) SetCart(v CreatePaymentRequestCart) {
	o.Cart = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *CreatePaymentRequest) GetGateway() Gateway {
	if o == nil || IsNil(o.Gateway) {
		var ret Gateway
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentRequest) GetGatewayOk() (*Gateway, bool) {
	if o == nil || IsNil(o.Gateway) {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *CreatePaymentRequest) HasGateway() bool {
	if o != nil && !IsNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given Gateway and assigns it to the Gateway field.
func (o *CreatePaymentRequest) SetGateway(v Gateway) {
	o.Gateway = &v
}

// GetGateways returns the Gateways field value if set, zero value otherwise.
func (o *CreatePaymentRequest) GetGateways() []string {
	if o == nil || IsNil(o.Gateways) {
		var ret []string
		return ret
	}
	return o.Gateways
}

// GetGatewaysOk returns a tuple with the Gateways field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentRequest) GetGatewaysOk() ([]string, bool) {
	if o == nil || IsNil(o.Gateways) {
		return nil, false
	}
	return o.Gateways, true
}

// HasGateways returns a boolean if a field has been set.
func (o *CreatePaymentRequest) HasGateways() bool {
	if o != nil && !IsNil(o.Gateways) {
		return true
	}

	return false
}

// SetGateways gets a reference to the given []string and assigns it to the Gateways field.
func (o *CreatePaymentRequest) SetGateways(v []string) {
	o.Gateways = v
}

// GetPaypalApm returns the PaypalApm field value if set, zero value otherwise.
func (o *CreatePaymentRequest) GetPaypalApm() string {
	if o == nil || IsNil(o.PaypalApm) {
		var ret string
		return ret
	}
	return *o.PaypalApm
}

// GetPaypalApmOk returns a tuple with the PaypalApm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentRequest) GetPaypalApmOk() (*string, bool) {
	if o == nil || IsNil(o.PaypalApm) {
		return nil, false
	}
	return o.PaypalApm, true
}

// HasPaypalApm returns a boolean if a field has been set.
func (o *CreatePaymentRequest) HasPaypalApm() bool {
	if o != nil && !IsNil(o.PaypalApm) {
		return true
	}

	return false
}

// SetPaypalApm gets a reference to the given string and assigns it to the PaypalApm field.
func (o *CreatePaymentRequest) SetPaypalApm(v string) {
	o.PaypalApm = &v
}

// GetCreditCard returns the CreditCard field value if set, zero value otherwise.
func (o *CreatePaymentRequest) GetCreditCard() bool {
	if o == nil || IsNil(o.CreditCard) {
		var ret bool
		return ret
	}
	return *o.CreditCard
}

// GetCreditCardOk returns a tuple with the CreditCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentRequest) GetCreditCardOk() (*bool, bool) {
	if o == nil || IsNil(o.CreditCard) {
		return nil, false
	}
	return o.CreditCard, true
}

// HasCreditCard returns a boolean if a field has been set.
func (o *CreatePaymentRequest) HasCreditCard() bool {
	if o != nil && !IsNil(o.CreditCard) {
		return true
	}

	return false
}

// SetCreditCard gets a reference to the given bool and assigns it to the CreditCard field.
func (o *CreatePaymentRequest) SetCreditCard(v bool) {
	o.CreditCard = &v
}

// GetLexPaymentMethod returns the LexPaymentMethod field value if set, zero value otherwise.
// Deprecated
func (o *CreatePaymentRequest) GetLexPaymentMethod() string {
	if o == nil || IsNil(o.LexPaymentMethod) {
		var ret string
		return ret
	}
	return *o.LexPaymentMethod
}

// GetLexPaymentMethodOk returns a tuple with the LexPaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CreatePaymentRequest) GetLexPaymentMethodOk() (*string, bool) {
	if o == nil || IsNil(o.LexPaymentMethod) {
		return nil, false
	}
	return o.LexPaymentMethod, true
}

// HasLexPaymentMethod returns a boolean if a field has been set.
func (o *CreatePaymentRequest) HasLexPaymentMethod() bool {
	if o != nil && !IsNil(o.LexPaymentMethod) {
		return true
	}

	return false
}

// SetLexPaymentMethod gets a reference to the given string and assigns it to the LexPaymentMethod field.
// Deprecated
func (o *CreatePaymentRequest) SetLexPaymentMethod(v string) {
	o.LexPaymentMethod = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *CreatePaymentRequest) GetValue() float64 {
	if o == nil || IsNil(o.Value) {
		var ret float64
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentRequest) GetValueOk() (*float64, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *CreatePaymentRequest) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given float64 and assigns it to the Value field.
func (o *CreatePaymentRequest) SetValue(v float64) {
	o.Value = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *CreatePaymentRequest) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentRequest) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *CreatePaymentRequest) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *CreatePaymentRequest) SetCurrency(v string) {
	o.Currency = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *CreatePaymentRequest) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentRequest) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *CreatePaymentRequest) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *CreatePaymentRequest) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetCouponCode returns the CouponCode field value if set, zero value otherwise.
func (o *CreatePaymentRequest) GetCouponCode() string {
	if o == nil || IsNil(o.CouponCode) {
		var ret string
		return ret
	}
	return *o.CouponCode
}

// GetCouponCodeOk returns a tuple with the CouponCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentRequest) GetCouponCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CouponCode) {
		return nil, false
	}
	return o.CouponCode, true
}

// HasCouponCode returns a boolean if a field has been set.
func (o *CreatePaymentRequest) HasCouponCode() bool {
	if o != nil && !IsNil(o.CouponCode) {
		return true
	}

	return false
}

// SetCouponCode gets a reference to the given string and assigns it to the CouponCode field.
func (o *CreatePaymentRequest) SetCouponCode(v string) {
	o.CouponCode = &v
}

// GetConfirmations returns the Confirmations field value if set, zero value otherwise.
func (o *CreatePaymentRequest) GetConfirmations() int32 {
	if o == nil || IsNil(o.Confirmations) {
		var ret int32
		return ret
	}
	return *o.Confirmations
}

// GetConfirmationsOk returns a tuple with the Confirmations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentRequest) GetConfirmationsOk() (*int32, bool) {
	if o == nil || IsNil(o.Confirmations) {
		return nil, false
	}
	return o.Confirmations, true
}

// HasConfirmations returns a boolean if a field has been set.
func (o *CreatePaymentRequest) HasConfirmations() bool {
	if o != nil && !IsNil(o.Confirmations) {
		return true
	}

	return false
}

// SetConfirmations gets a reference to the given int32 and assigns it to the Confirmations field.
func (o *CreatePaymentRequest) SetConfirmations(v int32) {
	o.Confirmations = &v
}

// GetEmail returns the Email field value
func (o *CreatePaymentRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *CreatePaymentRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *CreatePaymentRequest) SetEmail(v string) {
	o.Email = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *CreatePaymentRequest) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentRequest) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *CreatePaymentRequest) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *CreatePaymentRequest) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetFraudShield returns the FraudShield field value if set, zero value otherwise.
func (o *CreatePaymentRequest) GetFraudShield() CreatePaymentRequestFraudShield {
	if o == nil || IsNil(o.FraudShield) {
		var ret CreatePaymentRequestFraudShield
		return ret
	}
	return *o.FraudShield
}

// GetFraudShieldOk returns a tuple with the FraudShield field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentRequest) GetFraudShieldOk() (*CreatePaymentRequestFraudShield, bool) {
	if o == nil || IsNil(o.FraudShield) {
		return nil, false
	}
	return o.FraudShield, true
}

// HasFraudShield returns a boolean if a field has been set.
func (o *CreatePaymentRequest) HasFraudShield() bool {
	if o != nil && !IsNil(o.FraudShield) {
		return true
	}

	return false
}

// SetFraudShield gets a reference to the given CreatePaymentRequestFraudShield and assigns it to the FraudShield field.
func (o *CreatePaymentRequest) SetFraudShield(v CreatePaymentRequestFraudShield) {
	o.FraudShield = &v
}

// GetWebhook returns the Webhook field value if set, zero value otherwise.
func (o *CreatePaymentRequest) GetWebhook() string {
	if o == nil || IsNil(o.Webhook) {
		var ret string
		return ret
	}
	return *o.Webhook
}

// GetWebhookOk returns a tuple with the Webhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentRequest) GetWebhookOk() (*string, bool) {
	if o == nil || IsNil(o.Webhook) {
		return nil, false
	}
	return o.Webhook, true
}

// HasWebhook returns a boolean if a field has been set.
func (o *CreatePaymentRequest) HasWebhook() bool {
	if o != nil && !IsNil(o.Webhook) {
		return true
	}

	return false
}

// SetWebhook gets a reference to the given string and assigns it to the Webhook field.
func (o *CreatePaymentRequest) SetWebhook(v string) {
	o.Webhook = &v
}

// GetWhiteLabel returns the WhiteLabel field value if set, zero value otherwise.
func (o *CreatePaymentRequest) GetWhiteLabel() bool {
	if o == nil || IsNil(o.WhiteLabel) {
		var ret bool
		return ret
	}
	return *o.WhiteLabel
}

// GetWhiteLabelOk returns a tuple with the WhiteLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentRequest) GetWhiteLabelOk() (*bool, bool) {
	if o == nil || IsNil(o.WhiteLabel) {
		return nil, false
	}
	return o.WhiteLabel, true
}

// HasWhiteLabel returns a boolean if a field has been set.
func (o *CreatePaymentRequest) HasWhiteLabel() bool {
	if o != nil && !IsNil(o.WhiteLabel) {
		return true
	}

	return false
}

// SetWhiteLabel gets a reference to the given bool and assigns it to the WhiteLabel field.
func (o *CreatePaymentRequest) SetWhiteLabel(v bool) {
	o.WhiteLabel = &v
}

// GetReturnUrl returns the ReturnUrl field value if set, zero value otherwise.
func (o *CreatePaymentRequest) GetReturnUrl() string {
	if o == nil || IsNil(o.ReturnUrl) {
		var ret string
		return ret
	}
	return *o.ReturnUrl
}

// GetReturnUrlOk returns a tuple with the ReturnUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentRequest) GetReturnUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ReturnUrl) {
		return nil, false
	}
	return o.ReturnUrl, true
}

// HasReturnUrl returns a boolean if a field has been set.
func (o *CreatePaymentRequest) HasReturnUrl() bool {
	if o != nil && !IsNil(o.ReturnUrl) {
		return true
	}

	return false
}

// SetReturnUrl gets a reference to the given string and assigns it to the ReturnUrl field.
func (o *CreatePaymentRequest) SetReturnUrl(v string) {
	o.ReturnUrl = &v
}

func (o CreatePaymentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreatePaymentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.ProductPlans) {
		toSerialize["product_plans"] = o.ProductPlans
	}
	if !IsNil(o.Cart) {
		toSerialize["cart"] = o.Cart
	}
	if !IsNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	if !IsNil(o.Gateways) {
		toSerialize["gateways"] = o.Gateways
	}
	if !IsNil(o.PaypalApm) {
		toSerialize["paypal_apm"] = o.PaypalApm
	}
	if !IsNil(o.CreditCard) {
		toSerialize["credit_card"] = o.CreditCard
	}
	if !IsNil(o.LexPaymentMethod) {
		toSerialize["lex_payment_method"] = o.LexPaymentMethod
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.CouponCode) {
		toSerialize["coupon_code"] = o.CouponCode
	}
	if !IsNil(o.Confirmations) {
		toSerialize["confirmations"] = o.Confirmations
	}
	toSerialize["email"] = o.Email
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if !IsNil(o.FraudShield) {
		toSerialize["fraud_shield"] = o.FraudShield
	}
	if !IsNil(o.Webhook) {
		toSerialize["webhook"] = o.Webhook
	}
	if !IsNil(o.WhiteLabel) {
		toSerialize["white_label"] = o.WhiteLabel
	}
	if !IsNil(o.ReturnUrl) {
		toSerialize["return_url"] = o.ReturnUrl
	}
	return toSerialize, nil
}

func (o *CreatePaymentRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreatePaymentRequest := _CreatePaymentRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreatePaymentRequest)

	if err != nil {
		return err
	}

	*o = CreatePaymentRequest(varCreatePaymentRequest)

	return err
}

type NullableCreatePaymentRequest struct {
	value *CreatePaymentRequest
	isSet bool
}

func (v NullableCreatePaymentRequest) Get() *CreatePaymentRequest {
	return v.value
}

func (v *NullableCreatePaymentRequest) Set(val *CreatePaymentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePaymentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePaymentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePaymentRequest(val *CreatePaymentRequest) *NullableCreatePaymentRequest {
	return &NullableCreatePaymentRequest{value: val, isSet: true}
}

func (v NullableCreatePaymentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePaymentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


