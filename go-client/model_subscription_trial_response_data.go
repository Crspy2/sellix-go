/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the SubscriptionTrialResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionTrialResponseData{}

// SubscriptionTrialResponseData struct for SubscriptionTrialResponseData
type SubscriptionTrialResponseData struct {
	// Subscription ID.
	SubscriptionId *string `json:"subscription_id,omitempty"`
}

// NewSubscriptionTrialResponseData instantiates a new SubscriptionTrialResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionTrialResponseData() *SubscriptionTrialResponseData {
	this := SubscriptionTrialResponseData{}
	return &this
}

// NewSubscriptionTrialResponseDataWithDefaults instantiates a new SubscriptionTrialResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionTrialResponseDataWithDefaults() *SubscriptionTrialResponseData {
	this := SubscriptionTrialResponseData{}
	return &this
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *SubscriptionTrialResponseData) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionTrialResponseData) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *SubscriptionTrialResponseData) HasSubscriptionId() bool {
	if o != nil && !IsNil(o.SubscriptionId) {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *SubscriptionTrialResponseData) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

func (o SubscriptionTrialResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionTrialResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscription_id"] = o.SubscriptionId
	}
	return toSerialize, nil
}

type NullableSubscriptionTrialResponseData struct {
	value *SubscriptionTrialResponseData
	isSet bool
}

func (v NullableSubscriptionTrialResponseData) Get() *SubscriptionTrialResponseData {
	return v.value
}

func (v *NullableSubscriptionTrialResponseData) Set(val *SubscriptionTrialResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionTrialResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionTrialResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionTrialResponseData(val *SubscriptionTrialResponseData) *NullableSubscriptionTrialResponseData {
	return &NullableSubscriptionTrialResponseData{value: val, isSet: true}
}

func (v NullableSubscriptionTrialResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionTrialResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


