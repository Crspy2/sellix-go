/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the ListOrders200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListOrders200ResponseData{}

// ListOrders200ResponseData struct for ListOrders200ResponseData
type ListOrders200ResponseData struct {
	// The total number of invoices returned
	ReturnedInvoices *float32 `json:"returned_invoices,omitempty"`
	// The total number of invoices on the store
	TotalInvoices *float32 `json:"total_invoices,omitempty"`
	// The total number of invoices that matched the specified fitler
	TotalInvoicesFiltered *float32 `json:"total_invoices_filtered,omitempty"`
	// The current page if pagination was specified
	Page *float32 `json:"page,omitempty"`
	// The total amount of invoices to display per page
	Limit *int32 `json:"limit,omitempty"`
	// The filter to use against the invoices
	Filter *string `json:"filter,omitempty"`
	// The fields to sort the invoices by
	Sort *string `json:"sort,omitempty"`
	// The fields to search for in invoices
	Search *string `json:"search,omitempty"`
	// The total amount of fields returned
	Fields []string `json:"fields,omitempty"`
	// THe amount of time, in milliseconds, it took to retrieve the orders
	TimeTakenMs *float32 `json:"time_taken_ms,omitempty"`
	Orders []InvoiceListing `json:"orders,omitempty"`
}

// NewListOrders200ResponseData instantiates a new ListOrders200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListOrders200ResponseData() *ListOrders200ResponseData {
	this := ListOrders200ResponseData{}
	return &this
}

// NewListOrders200ResponseDataWithDefaults instantiates a new ListOrders200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListOrders200ResponseDataWithDefaults() *ListOrders200ResponseData {
	this := ListOrders200ResponseData{}
	return &this
}

// GetReturnedInvoices returns the ReturnedInvoices field value if set, zero value otherwise.
func (o *ListOrders200ResponseData) GetReturnedInvoices() float32 {
	if o == nil || IsNil(o.ReturnedInvoices) {
		var ret float32
		return ret
	}
	return *o.ReturnedInvoices
}

// GetReturnedInvoicesOk returns a tuple with the ReturnedInvoices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOrders200ResponseData) GetReturnedInvoicesOk() (*float32, bool) {
	if o == nil || IsNil(o.ReturnedInvoices) {
		return nil, false
	}
	return o.ReturnedInvoices, true
}

// HasReturnedInvoices returns a boolean if a field has been set.
func (o *ListOrders200ResponseData) HasReturnedInvoices() bool {
	if o != nil && !IsNil(o.ReturnedInvoices) {
		return true
	}

	return false
}

// SetReturnedInvoices gets a reference to the given float32 and assigns it to the ReturnedInvoices field.
func (o *ListOrders200ResponseData) SetReturnedInvoices(v float32) {
	o.ReturnedInvoices = &v
}

// GetTotalInvoices returns the TotalInvoices field value if set, zero value otherwise.
func (o *ListOrders200ResponseData) GetTotalInvoices() float32 {
	if o == nil || IsNil(o.TotalInvoices) {
		var ret float32
		return ret
	}
	return *o.TotalInvoices
}

// GetTotalInvoicesOk returns a tuple with the TotalInvoices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOrders200ResponseData) GetTotalInvoicesOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalInvoices) {
		return nil, false
	}
	return o.TotalInvoices, true
}

// HasTotalInvoices returns a boolean if a field has been set.
func (o *ListOrders200ResponseData) HasTotalInvoices() bool {
	if o != nil && !IsNil(o.TotalInvoices) {
		return true
	}

	return false
}

// SetTotalInvoices gets a reference to the given float32 and assigns it to the TotalInvoices field.
func (o *ListOrders200ResponseData) SetTotalInvoices(v float32) {
	o.TotalInvoices = &v
}

// GetTotalInvoicesFiltered returns the TotalInvoicesFiltered field value if set, zero value otherwise.
func (o *ListOrders200ResponseData) GetTotalInvoicesFiltered() float32 {
	if o == nil || IsNil(o.TotalInvoicesFiltered) {
		var ret float32
		return ret
	}
	return *o.TotalInvoicesFiltered
}

// GetTotalInvoicesFilteredOk returns a tuple with the TotalInvoicesFiltered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOrders200ResponseData) GetTotalInvoicesFilteredOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalInvoicesFiltered) {
		return nil, false
	}
	return o.TotalInvoicesFiltered, true
}

// HasTotalInvoicesFiltered returns a boolean if a field has been set.
func (o *ListOrders200ResponseData) HasTotalInvoicesFiltered() bool {
	if o != nil && !IsNil(o.TotalInvoicesFiltered) {
		return true
	}

	return false
}

// SetTotalInvoicesFiltered gets a reference to the given float32 and assigns it to the TotalInvoicesFiltered field.
func (o *ListOrders200ResponseData) SetTotalInvoicesFiltered(v float32) {
	o.TotalInvoicesFiltered = &v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *ListOrders200ResponseData) GetPage() float32 {
	if o == nil || IsNil(o.Page) {
		var ret float32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOrders200ResponseData) GetPageOk() (*float32, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *ListOrders200ResponseData) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given float32 and assigns it to the Page field.
func (o *ListOrders200ResponseData) SetPage(v float32) {
	o.Page = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *ListOrders200ResponseData) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOrders200ResponseData) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *ListOrders200ResponseData) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *ListOrders200ResponseData) SetLimit(v int32) {
	o.Limit = &v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *ListOrders200ResponseData) GetFilter() string {
	if o == nil || IsNil(o.Filter) {
		var ret string
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOrders200ResponseData) GetFilterOk() (*string, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *ListOrders200ResponseData) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given string and assigns it to the Filter field.
func (o *ListOrders200ResponseData) SetFilter(v string) {
	o.Filter = &v
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *ListOrders200ResponseData) GetSort() string {
	if o == nil || IsNil(o.Sort) {
		var ret string
		return ret
	}
	return *o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOrders200ResponseData) GetSortOk() (*string, bool) {
	if o == nil || IsNil(o.Sort) {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *ListOrders200ResponseData) HasSort() bool {
	if o != nil && !IsNil(o.Sort) {
		return true
	}

	return false
}

// SetSort gets a reference to the given string and assigns it to the Sort field.
func (o *ListOrders200ResponseData) SetSort(v string) {
	o.Sort = &v
}

// GetSearch returns the Search field value if set, zero value otherwise.
func (o *ListOrders200ResponseData) GetSearch() string {
	if o == nil || IsNil(o.Search) {
		var ret string
		return ret
	}
	return *o.Search
}

// GetSearchOk returns a tuple with the Search field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOrders200ResponseData) GetSearchOk() (*string, bool) {
	if o == nil || IsNil(o.Search) {
		return nil, false
	}
	return o.Search, true
}

// HasSearch returns a boolean if a field has been set.
func (o *ListOrders200ResponseData) HasSearch() bool {
	if o != nil && !IsNil(o.Search) {
		return true
	}

	return false
}

// SetSearch gets a reference to the given string and assigns it to the Search field.
func (o *ListOrders200ResponseData) SetSearch(v string) {
	o.Search = &v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *ListOrders200ResponseData) GetFields() []string {
	if o == nil || IsNil(o.Fields) {
		var ret []string
		return ret
	}
	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOrders200ResponseData) GetFieldsOk() ([]string, bool) {
	if o == nil || IsNil(o.Fields) {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *ListOrders200ResponseData) HasFields() bool {
	if o != nil && !IsNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given []string and assigns it to the Fields field.
func (o *ListOrders200ResponseData) SetFields(v []string) {
	o.Fields = v
}

// GetTimeTakenMs returns the TimeTakenMs field value if set, zero value otherwise.
func (o *ListOrders200ResponseData) GetTimeTakenMs() float32 {
	if o == nil || IsNil(o.TimeTakenMs) {
		var ret float32
		return ret
	}
	return *o.TimeTakenMs
}

// GetTimeTakenMsOk returns a tuple with the TimeTakenMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOrders200ResponseData) GetTimeTakenMsOk() (*float32, bool) {
	if o == nil || IsNil(o.TimeTakenMs) {
		return nil, false
	}
	return o.TimeTakenMs, true
}

// HasTimeTakenMs returns a boolean if a field has been set.
func (o *ListOrders200ResponseData) HasTimeTakenMs() bool {
	if o != nil && !IsNil(o.TimeTakenMs) {
		return true
	}

	return false
}

// SetTimeTakenMs gets a reference to the given float32 and assigns it to the TimeTakenMs field.
func (o *ListOrders200ResponseData) SetTimeTakenMs(v float32) {
	o.TimeTakenMs = &v
}

// GetOrders returns the Orders field value if set, zero value otherwise.
func (o *ListOrders200ResponseData) GetOrders() []InvoiceListing {
	if o == nil || IsNil(o.Orders) {
		var ret []InvoiceListing
		return ret
	}
	return o.Orders
}

// GetOrdersOk returns a tuple with the Orders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOrders200ResponseData) GetOrdersOk() ([]InvoiceListing, bool) {
	if o == nil || IsNil(o.Orders) {
		return nil, false
	}
	return o.Orders, true
}

// HasOrders returns a boolean if a field has been set.
func (o *ListOrders200ResponseData) HasOrders() bool {
	if o != nil && !IsNil(o.Orders) {
		return true
	}

	return false
}

// SetOrders gets a reference to the given []InvoiceListing and assigns it to the Orders field.
func (o *ListOrders200ResponseData) SetOrders(v []InvoiceListing) {
	o.Orders = v
}

func (o ListOrders200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListOrders200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReturnedInvoices) {
		toSerialize["returned_invoices"] = o.ReturnedInvoices
	}
	if !IsNil(o.TotalInvoices) {
		toSerialize["total_invoices"] = o.TotalInvoices
	}
	if !IsNil(o.TotalInvoicesFiltered) {
		toSerialize["total_invoices_filtered"] = o.TotalInvoicesFiltered
	}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	if !IsNil(o.Sort) {
		toSerialize["sort"] = o.Sort
	}
	if !IsNil(o.Search) {
		toSerialize["search"] = o.Search
	}
	if !IsNil(o.Fields) {
		toSerialize["fields"] = o.Fields
	}
	if !IsNil(o.TimeTakenMs) {
		toSerialize["time_taken_ms"] = o.TimeTakenMs
	}
	if !IsNil(o.Orders) {
		toSerialize["orders"] = o.Orders
	}
	return toSerialize, nil
}

type NullableListOrders200ResponseData struct {
	value *ListOrders200ResponseData
	isSet bool
}

func (v NullableListOrders200ResponseData) Get() *ListOrders200ResponseData {
	return v.value
}

func (v *NullableListOrders200ResponseData) Set(val *ListOrders200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableListOrders200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableListOrders200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListOrders200ResponseData(val *ListOrders200ResponseData) *NullableListOrders200ResponseData {
	return &NullableListOrders200ResponseData{value: val, isSet: true}
}

func (v NullableListOrders200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListOrders200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


