/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the AmlWalletContributionsDestinationInnerEntitiesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AmlWalletContributionsDestinationInnerEntitiesInner{}

// AmlWalletContributionsDestinationInnerEntitiesInner struct for AmlWalletContributionsDestinationInnerEntitiesInner
type AmlWalletContributionsDestinationInnerEntitiesInner struct {
	// Entity name.
	Name *string `json:"name,omitempty"`
	// Is a VASP.
	IsVasp *bool `json:"is_vasp,omitempty"`
	// Actor ID.
	ActorId *int32 `json:"actor_id,omitempty"`
	// Entity category.
	Category *string `json:"category,omitempty"`
	// Is the primary entity.
	IsPrimaryEntity *bool `json:"is_primary_entity,omitempty"`
}

// NewAmlWalletContributionsDestinationInnerEntitiesInner instantiates a new AmlWalletContributionsDestinationInnerEntitiesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmlWalletContributionsDestinationInnerEntitiesInner() *AmlWalletContributionsDestinationInnerEntitiesInner {
	this := AmlWalletContributionsDestinationInnerEntitiesInner{}
	return &this
}

// NewAmlWalletContributionsDestinationInnerEntitiesInnerWithDefaults instantiates a new AmlWalletContributionsDestinationInnerEntitiesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmlWalletContributionsDestinationInnerEntitiesInnerWithDefaults() *AmlWalletContributionsDestinationInnerEntitiesInner {
	this := AmlWalletContributionsDestinationInnerEntitiesInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AmlWalletContributionsDestinationInnerEntitiesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmlWalletContributionsDestinationInnerEntitiesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AmlWalletContributionsDestinationInnerEntitiesInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AmlWalletContributionsDestinationInnerEntitiesInner) SetName(v string) {
	o.Name = &v
}

// GetIsVasp returns the IsVasp field value if set, zero value otherwise.
func (o *AmlWalletContributionsDestinationInnerEntitiesInner) GetIsVasp() bool {
	if o == nil || IsNil(o.IsVasp) {
		var ret bool
		return ret
	}
	return *o.IsVasp
}

// GetIsVaspOk returns a tuple with the IsVasp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmlWalletContributionsDestinationInnerEntitiesInner) GetIsVaspOk() (*bool, bool) {
	if o == nil || IsNil(o.IsVasp) {
		return nil, false
	}
	return o.IsVasp, true
}

// HasIsVasp returns a boolean if a field has been set.
func (o *AmlWalletContributionsDestinationInnerEntitiesInner) HasIsVasp() bool {
	if o != nil && !IsNil(o.IsVasp) {
		return true
	}

	return false
}

// SetIsVasp gets a reference to the given bool and assigns it to the IsVasp field.
func (o *AmlWalletContributionsDestinationInnerEntitiesInner) SetIsVasp(v bool) {
	o.IsVasp = &v
}

// GetActorId returns the ActorId field value if set, zero value otherwise.
func (o *AmlWalletContributionsDestinationInnerEntitiesInner) GetActorId() int32 {
	if o == nil || IsNil(o.ActorId) {
		var ret int32
		return ret
	}
	return *o.ActorId
}

// GetActorIdOk returns a tuple with the ActorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmlWalletContributionsDestinationInnerEntitiesInner) GetActorIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ActorId) {
		return nil, false
	}
	return o.ActorId, true
}

// HasActorId returns a boolean if a field has been set.
func (o *AmlWalletContributionsDestinationInnerEntitiesInner) HasActorId() bool {
	if o != nil && !IsNil(o.ActorId) {
		return true
	}

	return false
}

// SetActorId gets a reference to the given int32 and assigns it to the ActorId field.
func (o *AmlWalletContributionsDestinationInnerEntitiesInner) SetActorId(v int32) {
	o.ActorId = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *AmlWalletContributionsDestinationInnerEntitiesInner) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmlWalletContributionsDestinationInnerEntitiesInner) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *AmlWalletContributionsDestinationInnerEntitiesInner) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *AmlWalletContributionsDestinationInnerEntitiesInner) SetCategory(v string) {
	o.Category = &v
}

// GetIsPrimaryEntity returns the IsPrimaryEntity field value if set, zero value otherwise.
func (o *AmlWalletContributionsDestinationInnerEntitiesInner) GetIsPrimaryEntity() bool {
	if o == nil || IsNil(o.IsPrimaryEntity) {
		var ret bool
		return ret
	}
	return *o.IsPrimaryEntity
}

// GetIsPrimaryEntityOk returns a tuple with the IsPrimaryEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmlWalletContributionsDestinationInnerEntitiesInner) GetIsPrimaryEntityOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPrimaryEntity) {
		return nil, false
	}
	return o.IsPrimaryEntity, true
}

// HasIsPrimaryEntity returns a boolean if a field has been set.
func (o *AmlWalletContributionsDestinationInnerEntitiesInner) HasIsPrimaryEntity() bool {
	if o != nil && !IsNil(o.IsPrimaryEntity) {
		return true
	}

	return false
}

// SetIsPrimaryEntity gets a reference to the given bool and assigns it to the IsPrimaryEntity field.
func (o *AmlWalletContributionsDestinationInnerEntitiesInner) SetIsPrimaryEntity(v bool) {
	o.IsPrimaryEntity = &v
}

func (o AmlWalletContributionsDestinationInnerEntitiesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AmlWalletContributionsDestinationInnerEntitiesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.IsVasp) {
		toSerialize["is_vasp"] = o.IsVasp
	}
	if !IsNil(o.ActorId) {
		toSerialize["actor_id"] = o.ActorId
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.IsPrimaryEntity) {
		toSerialize["is_primary_entity"] = o.IsPrimaryEntity
	}
	return toSerialize, nil
}

type NullableAmlWalletContributionsDestinationInnerEntitiesInner struct {
	value *AmlWalletContributionsDestinationInnerEntitiesInner
	isSet bool
}

func (v NullableAmlWalletContributionsDestinationInnerEntitiesInner) Get() *AmlWalletContributionsDestinationInnerEntitiesInner {
	return v.value
}

func (v *NullableAmlWalletContributionsDestinationInnerEntitiesInner) Set(val *AmlWalletContributionsDestinationInnerEntitiesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAmlWalletContributionsDestinationInnerEntitiesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAmlWalletContributionsDestinationInnerEntitiesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmlWalletContributionsDestinationInnerEntitiesInner(val *AmlWalletContributionsDestinationInnerEntitiesInner) *NullableAmlWalletContributionsDestinationInnerEntitiesInner {
	return &NullableAmlWalletContributionsDestinationInnerEntitiesInner{value: val, isSet: true}
}

func (v NullableAmlWalletContributionsDestinationInnerEntitiesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmlWalletContributionsDestinationInnerEntitiesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


