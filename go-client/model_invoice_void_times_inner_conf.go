/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the InvoiceVoidTimesInnerConf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceVoidTimesInnerConf{}

// InvoiceVoidTimesInnerConf struct for InvoiceVoidTimesInnerConf
type InvoiceVoidTimesInnerConf struct {
	Void *int32 `json:"void,omitempty"`
	WaitPeriod map[string]interface{} `json:"wait_period,omitempty"`
}

// NewInvoiceVoidTimesInnerConf instantiates a new InvoiceVoidTimesInnerConf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceVoidTimesInnerConf() *InvoiceVoidTimesInnerConf {
	this := InvoiceVoidTimesInnerConf{}
	return &this
}

// NewInvoiceVoidTimesInnerConfWithDefaults instantiates a new InvoiceVoidTimesInnerConf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceVoidTimesInnerConfWithDefaults() *InvoiceVoidTimesInnerConf {
	this := InvoiceVoidTimesInnerConf{}
	return &this
}

// GetVoid returns the Void field value if set, zero value otherwise.
func (o *InvoiceVoidTimesInnerConf) GetVoid() int32 {
	if o == nil || IsNil(o.Void) {
		var ret int32
		return ret
	}
	return *o.Void
}

// GetVoidOk returns a tuple with the Void field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceVoidTimesInnerConf) GetVoidOk() (*int32, bool) {
	if o == nil || IsNil(o.Void) {
		return nil, false
	}
	return o.Void, true
}

// HasVoid returns a boolean if a field has been set.
func (o *InvoiceVoidTimesInnerConf) HasVoid() bool {
	if o != nil && !IsNil(o.Void) {
		return true
	}

	return false
}

// SetVoid gets a reference to the given int32 and assigns it to the Void field.
func (o *InvoiceVoidTimesInnerConf) SetVoid(v int32) {
	o.Void = &v
}

// GetWaitPeriod returns the WaitPeriod field value if set, zero value otherwise.
func (o *InvoiceVoidTimesInnerConf) GetWaitPeriod() map[string]interface{} {
	if o == nil || IsNil(o.WaitPeriod) {
		var ret map[string]interface{}
		return ret
	}
	return o.WaitPeriod
}

// GetWaitPeriodOk returns a tuple with the WaitPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceVoidTimesInnerConf) GetWaitPeriodOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.WaitPeriod) {
		return map[string]interface{}{}, false
	}
	return o.WaitPeriod, true
}

// HasWaitPeriod returns a boolean if a field has been set.
func (o *InvoiceVoidTimesInnerConf) HasWaitPeriod() bool {
	if o != nil && !IsNil(o.WaitPeriod) {
		return true
	}

	return false
}

// SetWaitPeriod gets a reference to the given map[string]interface{} and assigns it to the WaitPeriod field.
func (o *InvoiceVoidTimesInnerConf) SetWaitPeriod(v map[string]interface{}) {
	o.WaitPeriod = v
}

func (o InvoiceVoidTimesInnerConf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceVoidTimesInnerConf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Void) {
		toSerialize["void"] = o.Void
	}
	if !IsNil(o.WaitPeriod) {
		toSerialize["wait_period"] = o.WaitPeriod
	}
	return toSerialize, nil
}

type NullableInvoiceVoidTimesInnerConf struct {
	value *InvoiceVoidTimesInnerConf
	isSet bool
}

func (v NullableInvoiceVoidTimesInnerConf) Get() *InvoiceVoidTimesInnerConf {
	return v.value
}

func (v *NullableInvoiceVoidTimesInnerConf) Set(val *InvoiceVoidTimesInnerConf) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceVoidTimesInnerConf) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceVoidTimesInnerConf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceVoidTimesInnerConf(val *InvoiceVoidTimesInnerConf) *NullableInvoiceVoidTimesInnerConf {
	return &NullableInvoiceVoidTimesInnerConf{value: val, isSet: true}
}

func (v NullableInvoiceVoidTimesInnerConf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceVoidTimesInnerConf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


