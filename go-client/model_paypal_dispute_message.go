/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the PaypalDisputeMessage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaypalDisputeMessage{}

// PaypalDisputeMessage struct for PaypalDisputeMessage
type PaypalDisputeMessage struct {
	// Indicates whether the customer, merchant, or dispute arbiter posted the message.
	PostedBy *string `json:"posted_by,omitempty"`
	// The content of the dispute message.
	Content *string `json:"content,omitempty"`
	// Timestamp for when the message was sent
	CreatedAt *int32 `json:"created_at,omitempty"`
}

// NewPaypalDisputeMessage instantiates a new PaypalDisputeMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaypalDisputeMessage() *PaypalDisputeMessage {
	this := PaypalDisputeMessage{}
	return &this
}

// NewPaypalDisputeMessageWithDefaults instantiates a new PaypalDisputeMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaypalDisputeMessageWithDefaults() *PaypalDisputeMessage {
	this := PaypalDisputeMessage{}
	return &this
}

// GetPostedBy returns the PostedBy field value if set, zero value otherwise.
func (o *PaypalDisputeMessage) GetPostedBy() string {
	if o == nil || IsNil(o.PostedBy) {
		var ret string
		return ret
	}
	return *o.PostedBy
}

// GetPostedByOk returns a tuple with the PostedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaypalDisputeMessage) GetPostedByOk() (*string, bool) {
	if o == nil || IsNil(o.PostedBy) {
		return nil, false
	}
	return o.PostedBy, true
}

// HasPostedBy returns a boolean if a field has been set.
func (o *PaypalDisputeMessage) HasPostedBy() bool {
	if o != nil && !IsNil(o.PostedBy) {
		return true
	}

	return false
}

// SetPostedBy gets a reference to the given string and assigns it to the PostedBy field.
func (o *PaypalDisputeMessage) SetPostedBy(v string) {
	o.PostedBy = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *PaypalDisputeMessage) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaypalDisputeMessage) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *PaypalDisputeMessage) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *PaypalDisputeMessage) SetContent(v string) {
	o.Content = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PaypalDisputeMessage) GetCreatedAt() int32 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaypalDisputeMessage) GetCreatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PaypalDisputeMessage) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *PaypalDisputeMessage) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

func (o PaypalDisputeMessage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaypalDisputeMessage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PostedBy) {
		toSerialize["posted_by"] = o.PostedBy
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	return toSerialize, nil
}

type NullablePaypalDisputeMessage struct {
	value *PaypalDisputeMessage
	isSet bool
}

func (v NullablePaypalDisputeMessage) Get() *PaypalDisputeMessage {
	return v.value
}

func (v *NullablePaypalDisputeMessage) Set(val *PaypalDisputeMessage) {
	v.value = val
	v.isSet = true
}

func (v NullablePaypalDisputeMessage) IsSet() bool {
	return v.isSet
}

func (v *NullablePaypalDisputeMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaypalDisputeMessage(val *PaypalDisputeMessage) *NullablePaypalDisputeMessage {
	return &NullablePaypalDisputeMessage{value: val, isSet: true}
}

func (v NullablePaypalDisputeMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaypalDisputeMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


