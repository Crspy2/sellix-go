/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateSubscriptionv2Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSubscriptionv2Request{}

// CreateSubscriptionv2Request struct for CreateSubscriptionv2Request
type CreateSubscriptionv2Request struct {
	Gateway *Gateway `json:"gateway,omitempty"`
	// The customer's email address. Invoices and subscription updates will be sent to this email
	Email string `json:"email"`
	// The currency to display prices in. If not specified, the shop's default currency will be used.
	Currency *string `json:"currency,omitempty"`
	TaxData *CreateSubscriptionv2RequestTaxData `json:"tax_data,omitempty"`
	// The unique ID of the product to create a subscription for.
	ProductId string `json:"product_id"`
	// The quantity of the product to subscribe to. If not specified, the default quantity of the product will be used.
	Quantity int32 `json:"quantity"`
	// The id of the product plan to subscribe to.
	ProductPlanId string `json:"product_plan_id"`
	ProductAddons *map[string]string `json:"product_addons,omitempty"`
	// The coupon code to apply to the subscription.
	CouponCode *int32 `json:"coupon_code,omitempty"`
	// The code for the Sellix discord integration. Will be null if discord integration is not enabled.
	DiscordIntegrationCode *string `json:"discord_integration_code,omitempty"`
	CustomFields *map[string]string `json:"custom_fields,omitempty"`
}

type _CreateSubscriptionv2Request CreateSubscriptionv2Request

// NewCreateSubscriptionv2Request instantiates a new CreateSubscriptionv2Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSubscriptionv2Request(email string, productId string, quantity int32, productPlanId string) *CreateSubscriptionv2Request {
	this := CreateSubscriptionv2Request{}
	this.Email = email
	this.ProductId = productId
	this.Quantity = quantity
	this.ProductPlanId = productPlanId
	return &this
}

// NewCreateSubscriptionv2RequestWithDefaults instantiates a new CreateSubscriptionv2Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSubscriptionv2RequestWithDefaults() *CreateSubscriptionv2Request {
	this := CreateSubscriptionv2Request{}
	return &this
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *CreateSubscriptionv2Request) GetGateway() Gateway {
	if o == nil || IsNil(o.Gateway) {
		var ret Gateway
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionv2Request) GetGatewayOk() (*Gateway, bool) {
	if o == nil || IsNil(o.Gateway) {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *CreateSubscriptionv2Request) HasGateway() bool {
	if o != nil && !IsNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given Gateway and assigns it to the Gateway field.
func (o *CreateSubscriptionv2Request) SetGateway(v Gateway) {
	o.Gateway = &v
}

// GetEmail returns the Email field value
func (o *CreateSubscriptionv2Request) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionv2Request) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *CreateSubscriptionv2Request) SetEmail(v string) {
	o.Email = v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *CreateSubscriptionv2Request) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionv2Request) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *CreateSubscriptionv2Request) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *CreateSubscriptionv2Request) SetCurrency(v string) {
	o.Currency = &v
}

// GetTaxData returns the TaxData field value if set, zero value otherwise.
func (o *CreateSubscriptionv2Request) GetTaxData() CreateSubscriptionv2RequestTaxData {
	if o == nil || IsNil(o.TaxData) {
		var ret CreateSubscriptionv2RequestTaxData
		return ret
	}
	return *o.TaxData
}

// GetTaxDataOk returns a tuple with the TaxData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionv2Request) GetTaxDataOk() (*CreateSubscriptionv2RequestTaxData, bool) {
	if o == nil || IsNil(o.TaxData) {
		return nil, false
	}
	return o.TaxData, true
}

// HasTaxData returns a boolean if a field has been set.
func (o *CreateSubscriptionv2Request) HasTaxData() bool {
	if o != nil && !IsNil(o.TaxData) {
		return true
	}

	return false
}

// SetTaxData gets a reference to the given CreateSubscriptionv2RequestTaxData and assigns it to the TaxData field.
func (o *CreateSubscriptionv2Request) SetTaxData(v CreateSubscriptionv2RequestTaxData) {
	o.TaxData = &v
}

// GetProductId returns the ProductId field value
func (o *CreateSubscriptionv2Request) GetProductId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionv2Request) GetProductIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductId, true
}

// SetProductId sets field value
func (o *CreateSubscriptionv2Request) SetProductId(v string) {
	o.ProductId = v
}

// GetQuantity returns the Quantity field value
func (o *CreateSubscriptionv2Request) GetQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionv2Request) GetQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *CreateSubscriptionv2Request) SetQuantity(v int32) {
	o.Quantity = v
}

// GetProductPlanId returns the ProductPlanId field value
func (o *CreateSubscriptionv2Request) GetProductPlanId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductPlanId
}

// GetProductPlanIdOk returns a tuple with the ProductPlanId field value
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionv2Request) GetProductPlanIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductPlanId, true
}

// SetProductPlanId sets field value
func (o *CreateSubscriptionv2Request) SetProductPlanId(v string) {
	o.ProductPlanId = v
}

// GetProductAddons returns the ProductAddons field value if set, zero value otherwise.
func (o *CreateSubscriptionv2Request) GetProductAddons() map[string]string {
	if o == nil || IsNil(o.ProductAddons) {
		var ret map[string]string
		return ret
	}
	return *o.ProductAddons
}

// GetProductAddonsOk returns a tuple with the ProductAddons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionv2Request) GetProductAddonsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ProductAddons) {
		return nil, false
	}
	return o.ProductAddons, true
}

// HasProductAddons returns a boolean if a field has been set.
func (o *CreateSubscriptionv2Request) HasProductAddons() bool {
	if o != nil && !IsNil(o.ProductAddons) {
		return true
	}

	return false
}

// SetProductAddons gets a reference to the given map[string]string and assigns it to the ProductAddons field.
func (o *CreateSubscriptionv2Request) SetProductAddons(v map[string]string) {
	o.ProductAddons = &v
}

// GetCouponCode returns the CouponCode field value if set, zero value otherwise.
func (o *CreateSubscriptionv2Request) GetCouponCode() int32 {
	if o == nil || IsNil(o.CouponCode) {
		var ret int32
		return ret
	}
	return *o.CouponCode
}

// GetCouponCodeOk returns a tuple with the CouponCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionv2Request) GetCouponCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.CouponCode) {
		return nil, false
	}
	return o.CouponCode, true
}

// HasCouponCode returns a boolean if a field has been set.
func (o *CreateSubscriptionv2Request) HasCouponCode() bool {
	if o != nil && !IsNil(o.CouponCode) {
		return true
	}

	return false
}

// SetCouponCode gets a reference to the given int32 and assigns it to the CouponCode field.
func (o *CreateSubscriptionv2Request) SetCouponCode(v int32) {
	o.CouponCode = &v
}

// GetDiscordIntegrationCode returns the DiscordIntegrationCode field value if set, zero value otherwise.
func (o *CreateSubscriptionv2Request) GetDiscordIntegrationCode() string {
	if o == nil || IsNil(o.DiscordIntegrationCode) {
		var ret string
		return ret
	}
	return *o.DiscordIntegrationCode
}

// GetDiscordIntegrationCodeOk returns a tuple with the DiscordIntegrationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionv2Request) GetDiscordIntegrationCodeOk() (*string, bool) {
	if o == nil || IsNil(o.DiscordIntegrationCode) {
		return nil, false
	}
	return o.DiscordIntegrationCode, true
}

// HasDiscordIntegrationCode returns a boolean if a field has been set.
func (o *CreateSubscriptionv2Request) HasDiscordIntegrationCode() bool {
	if o != nil && !IsNil(o.DiscordIntegrationCode) {
		return true
	}

	return false
}

// SetDiscordIntegrationCode gets a reference to the given string and assigns it to the DiscordIntegrationCode field.
func (o *CreateSubscriptionv2Request) SetDiscordIntegrationCode(v string) {
	o.DiscordIntegrationCode = &v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *CreateSubscriptionv2Request) GetCustomFields() map[string]string {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]string
		return ret
	}
	return *o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionv2Request) GetCustomFieldsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *CreateSubscriptionv2Request) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]string and assigns it to the CustomFields field.
func (o *CreateSubscriptionv2Request) SetCustomFields(v map[string]string) {
	o.CustomFields = &v
}

func (o CreateSubscriptionv2Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSubscriptionv2Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	toSerialize["email"] = o.Email
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.TaxData) {
		toSerialize["tax_data"] = o.TaxData
	}
	toSerialize["product_id"] = o.ProductId
	toSerialize["quantity"] = o.Quantity
	toSerialize["product_plan_id"] = o.ProductPlanId
	if !IsNil(o.ProductAddons) {
		toSerialize["product_addons"] = o.ProductAddons
	}
	if !IsNil(o.CouponCode) {
		toSerialize["coupon_code"] = o.CouponCode
	}
	if !IsNil(o.DiscordIntegrationCode) {
		toSerialize["discord_integration_code"] = o.DiscordIntegrationCode
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	return toSerialize, nil
}

func (o *CreateSubscriptionv2Request) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
		"product_id",
		"quantity",
		"product_plan_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateSubscriptionv2Request := _CreateSubscriptionv2Request{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateSubscriptionv2Request)

	if err != nil {
		return err
	}

	*o = CreateSubscriptionv2Request(varCreateSubscriptionv2Request)

	return err
}

type NullableCreateSubscriptionv2Request struct {
	value *CreateSubscriptionv2Request
	isSet bool
}

func (v NullableCreateSubscriptionv2Request) Get() *CreateSubscriptionv2Request {
	return v.value
}

func (v *NullableCreateSubscriptionv2Request) Set(val *CreateSubscriptionv2Request) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSubscriptionv2Request) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSubscriptionv2Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSubscriptionv2Request(val *CreateSubscriptionv2Request) *NullableCreateSubscriptionv2Request {
	return &NullableCreateSubscriptionv2Request{value: val, isSet: true}
}

func (v NullableCreateSubscriptionv2Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSubscriptionv2Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


