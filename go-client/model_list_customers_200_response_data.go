/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListCustomers200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListCustomers200ResponseData{}

// ListCustomers200ResponseData struct for ListCustomers200ResponseData
type ListCustomers200ResponseData struct {
	Customers []CustomerListing `json:"customers,omitempty"`
}

// NewListCustomers200ResponseData instantiates a new ListCustomers200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListCustomers200ResponseData() *ListCustomers200ResponseData {
	this := ListCustomers200ResponseData{}
	return &this
}

// NewListCustomers200ResponseDataWithDefaults instantiates a new ListCustomers200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListCustomers200ResponseDataWithDefaults() *ListCustomers200ResponseData {
	this := ListCustomers200ResponseData{}
	return &this
}

// GetCustomers returns the Customers field value if set, zero value otherwise.
func (o *ListCustomers200ResponseData) GetCustomers() []CustomerListing {
	if o == nil || IsNil(o.Customers) {
		var ret []CustomerListing
		return ret
	}
	return o.Customers
}

// GetCustomersOk returns a tuple with the Customers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCustomers200ResponseData) GetCustomersOk() ([]CustomerListing, bool) {
	if o == nil || IsNil(o.Customers) {
		return nil, false
	}
	return o.Customers, true
}

// HasCustomers returns a boolean if a field has been set.
func (o *ListCustomers200ResponseData) HasCustomers() bool {
	if o != nil && !IsNil(o.Customers) {
		return true
	}

	return false
}

// SetCustomers gets a reference to the given []CustomerListing and assigns it to the Customers field.
func (o *ListCustomers200ResponseData) SetCustomers(v []CustomerListing) {
	o.Customers = v
}

func (o ListCustomers200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListCustomers200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Customers) {
		toSerialize["customers"] = o.Customers
	}
	return toSerialize, nil
}

type NullableListCustomers200ResponseData struct {
	value *ListCustomers200ResponseData
	isSet bool
}

func (v NullableListCustomers200ResponseData) Get() *ListCustomers200ResponseData {
	return v.value
}

func (v *NullableListCustomers200ResponseData) Set(val *ListCustomers200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableListCustomers200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableListCustomers200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListCustomers200ResponseData(val *ListCustomers200ResponseData) *NullableListCustomers200ResponseData {
	return &NullableListCustomers200ResponseData{value: val, isSet: true}
}

func (v NullableListCustomers200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListCustomers200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


