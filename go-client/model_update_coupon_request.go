/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateCouponRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateCouponRequest{}

// UpdateCouponRequest struct for UpdateCouponRequest
type UpdateCouponRequest struct {
	Code *string `json:"code,omitempty"`
	DiscountValue *int32 `json:"discount_value,omitempty"`
	MaxUses *int32 `json:"max_uses,omitempty"`
	DiscountType *string `json:"discount_type,omitempty"`
	DisabledWithVolumeDiscounts *bool `json:"disabled_with_volume_discounts,omitempty"`
	AllRecurringBillInvoices *bool `json:"all_recurring_bill_invoices,omitempty"`
	ProductsBound []string `json:"products_bound,omitempty"`
}

// NewUpdateCouponRequest instantiates a new UpdateCouponRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCouponRequest() *UpdateCouponRequest {
	this := UpdateCouponRequest{}
	return &this
}

// NewUpdateCouponRequestWithDefaults instantiates a new UpdateCouponRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCouponRequestWithDefaults() *UpdateCouponRequest {
	this := UpdateCouponRequest{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *UpdateCouponRequest) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCouponRequest) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *UpdateCouponRequest) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *UpdateCouponRequest) SetCode(v string) {
	o.Code = &v
}

// GetDiscountValue returns the DiscountValue field value if set, zero value otherwise.
func (o *UpdateCouponRequest) GetDiscountValue() int32 {
	if o == nil || IsNil(o.DiscountValue) {
		var ret int32
		return ret
	}
	return *o.DiscountValue
}

// GetDiscountValueOk returns a tuple with the DiscountValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCouponRequest) GetDiscountValueOk() (*int32, bool) {
	if o == nil || IsNil(o.DiscountValue) {
		return nil, false
	}
	return o.DiscountValue, true
}

// HasDiscountValue returns a boolean if a field has been set.
func (o *UpdateCouponRequest) HasDiscountValue() bool {
	if o != nil && !IsNil(o.DiscountValue) {
		return true
	}

	return false
}

// SetDiscountValue gets a reference to the given int32 and assigns it to the DiscountValue field.
func (o *UpdateCouponRequest) SetDiscountValue(v int32) {
	o.DiscountValue = &v
}

// GetMaxUses returns the MaxUses field value if set, zero value otherwise.
func (o *UpdateCouponRequest) GetMaxUses() int32 {
	if o == nil || IsNil(o.MaxUses) {
		var ret int32
		return ret
	}
	return *o.MaxUses
}

// GetMaxUsesOk returns a tuple with the MaxUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCouponRequest) GetMaxUsesOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxUses) {
		return nil, false
	}
	return o.MaxUses, true
}

// HasMaxUses returns a boolean if a field has been set.
func (o *UpdateCouponRequest) HasMaxUses() bool {
	if o != nil && !IsNil(o.MaxUses) {
		return true
	}

	return false
}

// SetMaxUses gets a reference to the given int32 and assigns it to the MaxUses field.
func (o *UpdateCouponRequest) SetMaxUses(v int32) {
	o.MaxUses = &v
}

// GetDiscountType returns the DiscountType field value if set, zero value otherwise.
func (o *UpdateCouponRequest) GetDiscountType() string {
	if o == nil || IsNil(o.DiscountType) {
		var ret string
		return ret
	}
	return *o.DiscountType
}

// GetDiscountTypeOk returns a tuple with the DiscountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCouponRequest) GetDiscountTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DiscountType) {
		return nil, false
	}
	return o.DiscountType, true
}

// HasDiscountType returns a boolean if a field has been set.
func (o *UpdateCouponRequest) HasDiscountType() bool {
	if o != nil && !IsNil(o.DiscountType) {
		return true
	}

	return false
}

// SetDiscountType gets a reference to the given string and assigns it to the DiscountType field.
func (o *UpdateCouponRequest) SetDiscountType(v string) {
	o.DiscountType = &v
}

// GetDisabledWithVolumeDiscounts returns the DisabledWithVolumeDiscounts field value if set, zero value otherwise.
func (o *UpdateCouponRequest) GetDisabledWithVolumeDiscounts() bool {
	if o == nil || IsNil(o.DisabledWithVolumeDiscounts) {
		var ret bool
		return ret
	}
	return *o.DisabledWithVolumeDiscounts
}

// GetDisabledWithVolumeDiscountsOk returns a tuple with the DisabledWithVolumeDiscounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCouponRequest) GetDisabledWithVolumeDiscountsOk() (*bool, bool) {
	if o == nil || IsNil(o.DisabledWithVolumeDiscounts) {
		return nil, false
	}
	return o.DisabledWithVolumeDiscounts, true
}

// HasDisabledWithVolumeDiscounts returns a boolean if a field has been set.
func (o *UpdateCouponRequest) HasDisabledWithVolumeDiscounts() bool {
	if o != nil && !IsNil(o.DisabledWithVolumeDiscounts) {
		return true
	}

	return false
}

// SetDisabledWithVolumeDiscounts gets a reference to the given bool and assigns it to the DisabledWithVolumeDiscounts field.
func (o *UpdateCouponRequest) SetDisabledWithVolumeDiscounts(v bool) {
	o.DisabledWithVolumeDiscounts = &v
}

// GetAllRecurringBillInvoices returns the AllRecurringBillInvoices field value if set, zero value otherwise.
func (o *UpdateCouponRequest) GetAllRecurringBillInvoices() bool {
	if o == nil || IsNil(o.AllRecurringBillInvoices) {
		var ret bool
		return ret
	}
	return *o.AllRecurringBillInvoices
}

// GetAllRecurringBillInvoicesOk returns a tuple with the AllRecurringBillInvoices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCouponRequest) GetAllRecurringBillInvoicesOk() (*bool, bool) {
	if o == nil || IsNil(o.AllRecurringBillInvoices) {
		return nil, false
	}
	return o.AllRecurringBillInvoices, true
}

// HasAllRecurringBillInvoices returns a boolean if a field has been set.
func (o *UpdateCouponRequest) HasAllRecurringBillInvoices() bool {
	if o != nil && !IsNil(o.AllRecurringBillInvoices) {
		return true
	}

	return false
}

// SetAllRecurringBillInvoices gets a reference to the given bool and assigns it to the AllRecurringBillInvoices field.
func (o *UpdateCouponRequest) SetAllRecurringBillInvoices(v bool) {
	o.AllRecurringBillInvoices = &v
}

// GetProductsBound returns the ProductsBound field value if set, zero value otherwise.
func (o *UpdateCouponRequest) GetProductsBound() []string {
	if o == nil || IsNil(o.ProductsBound) {
		var ret []string
		return ret
	}
	return o.ProductsBound
}

// GetProductsBoundOk returns a tuple with the ProductsBound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCouponRequest) GetProductsBoundOk() ([]string, bool) {
	if o == nil || IsNil(o.ProductsBound) {
		return nil, false
	}
	return o.ProductsBound, true
}

// HasProductsBound returns a boolean if a field has been set.
func (o *UpdateCouponRequest) HasProductsBound() bool {
	if o != nil && !IsNil(o.ProductsBound) {
		return true
	}

	return false
}

// SetProductsBound gets a reference to the given []string and assigns it to the ProductsBound field.
func (o *UpdateCouponRequest) SetProductsBound(v []string) {
	o.ProductsBound = v
}

func (o UpdateCouponRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateCouponRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.DiscountValue) {
		toSerialize["discount_value"] = o.DiscountValue
	}
	if !IsNil(o.MaxUses) {
		toSerialize["max_uses"] = o.MaxUses
	}
	if !IsNil(o.DiscountType) {
		toSerialize["discount_type"] = o.DiscountType
	}
	if !IsNil(o.DisabledWithVolumeDiscounts) {
		toSerialize["disabled_with_volume_discounts"] = o.DisabledWithVolumeDiscounts
	}
	if !IsNil(o.AllRecurringBillInvoices) {
		toSerialize["all_recurring_bill_invoices"] = o.AllRecurringBillInvoices
	}
	if !IsNil(o.ProductsBound) {
		toSerialize["products_bound"] = o.ProductsBound
	}
	return toSerialize, nil
}

type NullableUpdateCouponRequest struct {
	value *UpdateCouponRequest
	isSet bool
}

func (v NullableUpdateCouponRequest) Get() *UpdateCouponRequest {
	return v.value
}

func (v *NullableUpdateCouponRequest) Set(val *UpdateCouponRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCouponRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCouponRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCouponRequest(val *UpdateCouponRequest) *NullableUpdateCouponRequest {
	return &NullableUpdateCouponRequest{value: val, isSet: true}
}

func (v NullableUpdateCouponRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCouponRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


