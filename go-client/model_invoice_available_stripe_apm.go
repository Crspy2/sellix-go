/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the InvoiceAvailableStripeApm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceAvailableStripeApm{}

// InvoiceAvailableStripeApm struct for InvoiceAvailableStripeApm
type InvoiceAvailableStripeApm struct {
	// The stripe ID for the APM
	Id *string `json:"id,omitempty"`
	// The stripe name for the APM
	Name *string `json:"name,omitempty"`
}

// NewInvoiceAvailableStripeApm instantiates a new InvoiceAvailableStripeApm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceAvailableStripeApm() *InvoiceAvailableStripeApm {
	this := InvoiceAvailableStripeApm{}
	return &this
}

// NewInvoiceAvailableStripeApmWithDefaults instantiates a new InvoiceAvailableStripeApm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceAvailableStripeApmWithDefaults() *InvoiceAvailableStripeApm {
	this := InvoiceAvailableStripeApm{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InvoiceAvailableStripeApm) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceAvailableStripeApm) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InvoiceAvailableStripeApm) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InvoiceAvailableStripeApm) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InvoiceAvailableStripeApm) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceAvailableStripeApm) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InvoiceAvailableStripeApm) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InvoiceAvailableStripeApm) SetName(v string) {
	o.Name = &v
}

func (o InvoiceAvailableStripeApm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceAvailableStripeApm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableInvoiceAvailableStripeApm struct {
	value *InvoiceAvailableStripeApm
	isSet bool
}

func (v NullableInvoiceAvailableStripeApm) Get() *InvoiceAvailableStripeApm {
	return v.value
}

func (v *NullableInvoiceAvailableStripeApm) Set(val *InvoiceAvailableStripeApm) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceAvailableStripeApm) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceAvailableStripeApm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceAvailableStripeApm(val *InvoiceAvailableStripeApm) *NullableInvoiceAvailableStripeApm {
	return &NullableInvoiceAvailableStripeApm{value: val, isSet: true}
}

func (v NullableInvoiceAvailableStripeApm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceAvailableStripeApm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


