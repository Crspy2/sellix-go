/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
	"time"
)

// checks if the ListedProduct type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListedProduct{}

// ListedProduct struct for ListedProduct
type ListedProduct struct {
	// Unique ID of the resource, used as reference across the API.
	Id *float32 `json:"id,omitempty"`
	// Unique ID of the resource, used as reference across the API.
	Uniqid *string `json:"uniqid,omitempty"`
	// The slug used to navigate to the product page on a storefront.
	Slug *string `json:"slug,omitempty"`
	// The shop ID to which this resource belongs.
	ShopId *float32 `json:"shop_id,omitempty"`
	// Product type.
	Type *string `json:"type,omitempty"`
	// Product subtype, can be used only with type SUBSCRIPTION.
	Subtype *string `json:"subtype,omitempty"`
	// Product title.
	Title *string `json:"title,omitempty"`
	Currency *Currency `json:"currency,omitempty"`
	// Whether or not pay-what-you-want pricing is enabled.
	PayWhatYouWant *int32 `json:"pay_what_you_want,omitempty"`
	// Product price.
	Price *float64 `json:"price,omitempty"`
	// Product price in currency.
	PriceDisplay *float64 `json:"price_display,omitempty"`
	// The discount price on the purchased goods.
	PriceDiscount *float64 `json:"price_discount,omitempty"`
	// The percentage of revenue to give to affiliates. -1 for disabled, 0 for default (10%), other number for a custom percent.
	AffiliateRevenuePercent *float32 `json:"affiliate_revenue_percent,omitempty"`
	// Variants in pricing for the product.
	PriceVariants map[string]interface{} `json:"price_variants,omitempty"`
	// Product description.
	Description *string `json:"description,omitempty"`
	// Whether product licenses are generated on successful payments
	LicensingEnabled *int32 `json:"licensing_enabled,omitempty"`
	// Amount in days that licenses will be valid for
	LicensePeriod *int32 `json:"license_period,omitempty"`
	ImageAttachment *ImageAttachment `json:"image_attachment,omitempty"`
	// Unique id of the file attachment for this product if the product type is FILE.
	FileAttachment *string `json:"file_attachment,omitempty"`
	// The url for the YouTube video of the product
	YoutubeLink *string `json:"youtube_link,omitempty"`
	// Array of volume discounts.
	VolumeDiscounts []ListedProductVolumeDiscountsInner `json:"volume_discounts,omitempty"`
	// At which frequency the customer is billed for product type SUBSCRIPTION.
	RecurringInterval *string `json:"recurring_interval,omitempty"`
	// How many recurring_interval before the customer is billed for product type SUBSCRIPTION.
	RecurringIntervalCount *int32 `json:"recurring_interval_count,omitempty"`
	// Defines a trial period before billing the customer for product type SUBSCRIPTION.
	TrialPeriod *int32 `json:"trial_period,omitempty"`
	// When a product SUBSCRIPTION is created and the gateway PAYPAL chosen, a PayPal product is automatically created on the connected account.
	PaypalProductId *string `json:"paypal_product_id,omitempty"`
	// When a product SUBSCRIPTION is created and the gateway PAYPAL chosen, a PayPal plan is automatically created on the connected account.
	PaypalPlanId *string `json:"paypal_plan_id,omitempty"`
	// When a product SUBSCRIPTION is created and the gateway STRIPE chosen, a Stripe price is automatically created on the connected account.
	StripePriceId *string `json:"stripe_price_id,omitempty"`
	// Whether or not the discord integeration is enabled for this product.
	DiscordIntegration *float32 `json:"discord_integration,omitempty"`
	// Whether or not the discord integration is optional.
	DiscordOptional *float32 `json:"discord_optional,omitempty"`
	// Whether to give users a role when added to the discord server.
	DiscordSetRole *float32 `json:"discord_set_role,omitempty"`
	// The id of the discord server the bot will add users to.
	DiscordServerId *string `json:"discord_server_id,omitempty"`
	// The role to give users when added by the discord integration.
	DiscordRoleId *float32 `json:"discord_role_id,omitempty"`
	// Whether to remove a role from the user when added to the discord server.
	DiscordRemoveRole *float32 `json:"discord_remove_role,omitempty"`
	// Minimum quantity purchasable of this product.
	QuantityMin *int32 `json:"quantity_min,omitempty"`
	// Maximum quantity purchasable of this product.
	QuantityMax *int32 `json:"quantity_max,omitempty"`
	// At which product quantity should we send a webhook and email warning the merchant.
	QuantityWarning *int32 `json:"quantity_warning,omitempty"`
	Gateways []string `json:"gateways,omitempty"`
	CustomFields []CustomFieldsArrayInner `json:"custom_fields,omitempty"`
	// Stringified array of the commands to be executed on the RCON server
	RconCommands *string `json:"rcon_commands,omitempty"`
	// The type of execution for the RCON commands. Only applies to RCON products
	RconExecutionType *string `json:"rcon_execution_type,omitempty"`
	// The time for when the RCON product should start
	RconStartTime *time.Time `json:"rcon_start_time,omitempty"`
	// Minimum number of confirmations for a crypto payment to be accepted
	CryptoConfirmationsNeeded *int32 `json:"crypto_confirmations_needed,omitempty"`
	// For PAYPAL and STRIPE, maximum risk level to accept payments in order to block fraud attempts.
	MaxRiskLevel *int32 `json:"max_risk_level,omitempty"`
	// Block VPN and Proxy purchases if the gateway is PAYPAL or STRIPE.
	BlockVpnProxies *bool `json:"block_vpn_proxies,omitempty"`
	// The text to be delivered to the customer after payment
	DeliveryText *string `json:"delivery_text,omitempty"`
	// The timestamp for when the invoice was delivered
	DeliveryTime *int32 `json:"delivery_time,omitempty"`
	// The text to be delivered to the customer after payment for a service
	ServiceText *string `json:"service_text,omitempty"`
	// How to delimit the stock if product type is SERIALS, for example with stock_delimiter \",\" and serials value first,second; the stock would have two different serials \"first\" and \"second\".
	StockDelimiter *string `json:"stock_delimiter,omitempty"`
	// Stock of the current product, can be -1 for unlimited stock.
	Stock *int32 `json:"stock,omitempty"`
	DynamicWebhook map[string]interface{} `json:"dynamic_webhook,omitempty"`
	// DEPRECATED
	Bestseller *int32 `json:"bestseller,omitempty"`
	// Sort order of this product.
	SortPriority *int32 `json:"sort_priority,omitempty"`
	// If unlisted is true, the product is not shown in the storefront but can be bought through a direct link.
	Unlisted *bool `json:"unlisted,omitempty"`
	// If on_hold is true, the product cannot be bought but is shown in the storefront.
	OnHold *bool `json:"on_hold,omitempty"`
	// Text containing the product's terms of service.
	TermsOfService *string `json:"terms_of_service,omitempty"`
	// Time, in seconds, of how much the warranty for this product lasts.
	Warranty *int32 `json:"warranty,omitempty"`
	// Clear explanation of what the warranty covers.
	WarrantyText *string `json:"warranty_text,omitempty"`
	// Whether sellix should add a watermark to your product image.
	WatermarkEnabled *float32 `json:"watermark_enabled,omitempty"`
	// The watermark to add to the product image.
	WatermarkText *string `json:"watermark_text,omitempty"`
	// The url to redirect a customer to on successful payment
	RedirectLink *string `json:"redirect_link,omitempty"`
	LabelSingular *string `json:"label_singular,omitempty"`
	LabelPlural *string `json:"label_plural,omitempty"`
	// If private is true, the product is hidden on the storefront and cannot be bought with a direct link.
	Private *bool `json:"private,omitempty"`
	// Timestamp for the creation of the product.
	CreatedAt *int32 `json:"created_at,omitempty"`
	// Date, available if the product has been edited.
	UpdatedAt *int32 `json:"updated_at,omitempty"`
	// User ID of the user who updated the product.
	UpdatedBy *int32 `json:"updated_by,omitempty"`
	// The category ID the product is a part of
	MarketplaceCategoryId *string `json:"marketplace_category_id,omitempty"`
	// The Telegram group ID
	TelegramGroupId *string `json:"telegram_group_id,omitempty"`
	// Whether or not the Telegram integration is enabled
	TelegramIntegration *int32 `json:"telegram_integration,omitempty"`
	// Whether or not the Telegram integration is optional
	TelegramOptional *int32 `json:"telegram_optional,omitempty"`
	// DEPRECATED: The name of the product image with the file type
	ImageName *string `json:"image_name,omitempty"`
	// Where the image is stored in Sellix's self-hosted CDN.
	ImageStorage *string `json:"image_storage,omitempty"`
	// The cloudflare image ID of this product, replaces image_attachment and image_name. Format https://imagedelivery.net/95QNzrEeP7RU5l5WdbyrKw/<cloudflare_image_id>/<variant_name> where variant_name can be shopItem, avatar, icon, imageAvatarFeedback, public, productImageCart.
	CloudflareImageId *string `json:"cloudflare_image_id,omitempty"`
	ImageAttachments []ImageAttachment `json:"image_attachments,omitempty"`
	Feedback *ListedProductFeedback `json:"feedback,omitempty"`
	Categories []FeedbackProductCategoriesInner `json:"categories,omitempty"`
	PaymentGatewaysFees []ListedProductPaymentGatewaysFeesInner `json:"payment_gateways_fees,omitempty"`
}

// NewListedProduct instantiates a new ListedProduct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListedProduct() *ListedProduct {
	this := ListedProduct{}
	return &this
}

// NewListedProductWithDefaults instantiates a new ListedProduct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListedProductWithDefaults() *ListedProduct {
	this := ListedProduct{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListedProduct) GetId() float32 {
	if o == nil || IsNil(o.Id) {
		var ret float32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetIdOk() (*float32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ListedProduct) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given float32 and assigns it to the Id field.
func (o *ListedProduct) SetId(v float32) {
	o.Id = &v
}

// GetUniqid returns the Uniqid field value if set, zero value otherwise.
func (o *ListedProduct) GetUniqid() string {
	if o == nil || IsNil(o.Uniqid) {
		var ret string
		return ret
	}
	return *o.Uniqid
}

// GetUniqidOk returns a tuple with the Uniqid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetUniqidOk() (*string, bool) {
	if o == nil || IsNil(o.Uniqid) {
		return nil, false
	}
	return o.Uniqid, true
}

// HasUniqid returns a boolean if a field has been set.
func (o *ListedProduct) HasUniqid() bool {
	if o != nil && !IsNil(o.Uniqid) {
		return true
	}

	return false
}

// SetUniqid gets a reference to the given string and assigns it to the Uniqid field.
func (o *ListedProduct) SetUniqid(v string) {
	o.Uniqid = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *ListedProduct) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *ListedProduct) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *ListedProduct) SetSlug(v string) {
	o.Slug = &v
}

// GetShopId returns the ShopId field value if set, zero value otherwise.
func (o *ListedProduct) GetShopId() float32 {
	if o == nil || IsNil(o.ShopId) {
		var ret float32
		return ret
	}
	return *o.ShopId
}

// GetShopIdOk returns a tuple with the ShopId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetShopIdOk() (*float32, bool) {
	if o == nil || IsNil(o.ShopId) {
		return nil, false
	}
	return o.ShopId, true
}

// HasShopId returns a boolean if a field has been set.
func (o *ListedProduct) HasShopId() bool {
	if o != nil && !IsNil(o.ShopId) {
		return true
	}

	return false
}

// SetShopId gets a reference to the given float32 and assigns it to the ShopId field.
func (o *ListedProduct) SetShopId(v float32) {
	o.ShopId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ListedProduct) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ListedProduct) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ListedProduct) SetType(v string) {
	o.Type = &v
}

// GetSubtype returns the Subtype field value if set, zero value otherwise.
func (o *ListedProduct) GetSubtype() string {
	if o == nil || IsNil(o.Subtype) {
		var ret string
		return ret
	}
	return *o.Subtype
}

// GetSubtypeOk returns a tuple with the Subtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetSubtypeOk() (*string, bool) {
	if o == nil || IsNil(o.Subtype) {
		return nil, false
	}
	return o.Subtype, true
}

// HasSubtype returns a boolean if a field has been set.
func (o *ListedProduct) HasSubtype() bool {
	if o != nil && !IsNil(o.Subtype) {
		return true
	}

	return false
}

// SetSubtype gets a reference to the given string and assigns it to the Subtype field.
func (o *ListedProduct) SetSubtype(v string) {
	o.Subtype = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ListedProduct) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ListedProduct) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ListedProduct) SetTitle(v string) {
	o.Title = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *ListedProduct) GetCurrency() Currency {
	if o == nil || IsNil(o.Currency) {
		var ret Currency
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *ListedProduct) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given Currency and assigns it to the Currency field.
func (o *ListedProduct) SetCurrency(v Currency) {
	o.Currency = &v
}

// GetPayWhatYouWant returns the PayWhatYouWant field value if set, zero value otherwise.
func (o *ListedProduct) GetPayWhatYouWant() int32 {
	if o == nil || IsNil(o.PayWhatYouWant) {
		var ret int32
		return ret
	}
	return *o.PayWhatYouWant
}

// GetPayWhatYouWantOk returns a tuple with the PayWhatYouWant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetPayWhatYouWantOk() (*int32, bool) {
	if o == nil || IsNil(o.PayWhatYouWant) {
		return nil, false
	}
	return o.PayWhatYouWant, true
}

// HasPayWhatYouWant returns a boolean if a field has been set.
func (o *ListedProduct) HasPayWhatYouWant() bool {
	if o != nil && !IsNil(o.PayWhatYouWant) {
		return true
	}

	return false
}

// SetPayWhatYouWant gets a reference to the given int32 and assigns it to the PayWhatYouWant field.
func (o *ListedProduct) SetPayWhatYouWant(v int32) {
	o.PayWhatYouWant = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *ListedProduct) GetPrice() float64 {
	if o == nil || IsNil(o.Price) {
		var ret float64
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *ListedProduct) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float64 and assigns it to the Price field.
func (o *ListedProduct) SetPrice(v float64) {
	o.Price = &v
}

// GetPriceDisplay returns the PriceDisplay field value if set, zero value otherwise.
func (o *ListedProduct) GetPriceDisplay() float64 {
	if o == nil || IsNil(o.PriceDisplay) {
		var ret float64
		return ret
	}
	return *o.PriceDisplay
}

// GetPriceDisplayOk returns a tuple with the PriceDisplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetPriceDisplayOk() (*float64, bool) {
	if o == nil || IsNil(o.PriceDisplay) {
		return nil, false
	}
	return o.PriceDisplay, true
}

// HasPriceDisplay returns a boolean if a field has been set.
func (o *ListedProduct) HasPriceDisplay() bool {
	if o != nil && !IsNil(o.PriceDisplay) {
		return true
	}

	return false
}

// SetPriceDisplay gets a reference to the given float64 and assigns it to the PriceDisplay field.
func (o *ListedProduct) SetPriceDisplay(v float64) {
	o.PriceDisplay = &v
}

// GetPriceDiscount returns the PriceDiscount field value if set, zero value otherwise.
func (o *ListedProduct) GetPriceDiscount() float64 {
	if o == nil || IsNil(o.PriceDiscount) {
		var ret float64
		return ret
	}
	return *o.PriceDiscount
}

// GetPriceDiscountOk returns a tuple with the PriceDiscount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetPriceDiscountOk() (*float64, bool) {
	if o == nil || IsNil(o.PriceDiscount) {
		return nil, false
	}
	return o.PriceDiscount, true
}

// HasPriceDiscount returns a boolean if a field has been set.
func (o *ListedProduct) HasPriceDiscount() bool {
	if o != nil && !IsNil(o.PriceDiscount) {
		return true
	}

	return false
}

// SetPriceDiscount gets a reference to the given float64 and assigns it to the PriceDiscount field.
func (o *ListedProduct) SetPriceDiscount(v float64) {
	o.PriceDiscount = &v
}

// GetAffiliateRevenuePercent returns the AffiliateRevenuePercent field value if set, zero value otherwise.
func (o *ListedProduct) GetAffiliateRevenuePercent() float32 {
	if o == nil || IsNil(o.AffiliateRevenuePercent) {
		var ret float32
		return ret
	}
	return *o.AffiliateRevenuePercent
}

// GetAffiliateRevenuePercentOk returns a tuple with the AffiliateRevenuePercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetAffiliateRevenuePercentOk() (*float32, bool) {
	if o == nil || IsNil(o.AffiliateRevenuePercent) {
		return nil, false
	}
	return o.AffiliateRevenuePercent, true
}

// HasAffiliateRevenuePercent returns a boolean if a field has been set.
func (o *ListedProduct) HasAffiliateRevenuePercent() bool {
	if o != nil && !IsNil(o.AffiliateRevenuePercent) {
		return true
	}

	return false
}

// SetAffiliateRevenuePercent gets a reference to the given float32 and assigns it to the AffiliateRevenuePercent field.
func (o *ListedProduct) SetAffiliateRevenuePercent(v float32) {
	o.AffiliateRevenuePercent = &v
}

// GetPriceVariants returns the PriceVariants field value if set, zero value otherwise.
func (o *ListedProduct) GetPriceVariants() map[string]interface{} {
	if o == nil || IsNil(o.PriceVariants) {
		var ret map[string]interface{}
		return ret
	}
	return o.PriceVariants
}

// GetPriceVariantsOk returns a tuple with the PriceVariants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetPriceVariantsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.PriceVariants) {
		return map[string]interface{}{}, false
	}
	return o.PriceVariants, true
}

// HasPriceVariants returns a boolean if a field has been set.
func (o *ListedProduct) HasPriceVariants() bool {
	if o != nil && !IsNil(o.PriceVariants) {
		return true
	}

	return false
}

// SetPriceVariants gets a reference to the given map[string]interface{} and assigns it to the PriceVariants field.
func (o *ListedProduct) SetPriceVariants(v map[string]interface{}) {
	o.PriceVariants = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ListedProduct) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ListedProduct) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ListedProduct) SetDescription(v string) {
	o.Description = &v
}

// GetLicensingEnabled returns the LicensingEnabled field value if set, zero value otherwise.
func (o *ListedProduct) GetLicensingEnabled() int32 {
	if o == nil || IsNil(o.LicensingEnabled) {
		var ret int32
		return ret
	}
	return *o.LicensingEnabled
}

// GetLicensingEnabledOk returns a tuple with the LicensingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetLicensingEnabledOk() (*int32, bool) {
	if o == nil || IsNil(o.LicensingEnabled) {
		return nil, false
	}
	return o.LicensingEnabled, true
}

// HasLicensingEnabled returns a boolean if a field has been set.
func (o *ListedProduct) HasLicensingEnabled() bool {
	if o != nil && !IsNil(o.LicensingEnabled) {
		return true
	}

	return false
}

// SetLicensingEnabled gets a reference to the given int32 and assigns it to the LicensingEnabled field.
func (o *ListedProduct) SetLicensingEnabled(v int32) {
	o.LicensingEnabled = &v
}

// GetLicensePeriod returns the LicensePeriod field value if set, zero value otherwise.
func (o *ListedProduct) GetLicensePeriod() int32 {
	if o == nil || IsNil(o.LicensePeriod) {
		var ret int32
		return ret
	}
	return *o.LicensePeriod
}

// GetLicensePeriodOk returns a tuple with the LicensePeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetLicensePeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.LicensePeriod) {
		return nil, false
	}
	return o.LicensePeriod, true
}

// HasLicensePeriod returns a boolean if a field has been set.
func (o *ListedProduct) HasLicensePeriod() bool {
	if o != nil && !IsNil(o.LicensePeriod) {
		return true
	}

	return false
}

// SetLicensePeriod gets a reference to the given int32 and assigns it to the LicensePeriod field.
func (o *ListedProduct) SetLicensePeriod(v int32) {
	o.LicensePeriod = &v
}

// GetImageAttachment returns the ImageAttachment field value if set, zero value otherwise.
func (o *ListedProduct) GetImageAttachment() ImageAttachment {
	if o == nil || IsNil(o.ImageAttachment) {
		var ret ImageAttachment
		return ret
	}
	return *o.ImageAttachment
}

// GetImageAttachmentOk returns a tuple with the ImageAttachment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetImageAttachmentOk() (*ImageAttachment, bool) {
	if o == nil || IsNil(o.ImageAttachment) {
		return nil, false
	}
	return o.ImageAttachment, true
}

// HasImageAttachment returns a boolean if a field has been set.
func (o *ListedProduct) HasImageAttachment() bool {
	if o != nil && !IsNil(o.ImageAttachment) {
		return true
	}

	return false
}

// SetImageAttachment gets a reference to the given ImageAttachment and assigns it to the ImageAttachment field.
func (o *ListedProduct) SetImageAttachment(v ImageAttachment) {
	o.ImageAttachment = &v
}

// GetFileAttachment returns the FileAttachment field value if set, zero value otherwise.
func (o *ListedProduct) GetFileAttachment() string {
	if o == nil || IsNil(o.FileAttachment) {
		var ret string
		return ret
	}
	return *o.FileAttachment
}

// GetFileAttachmentOk returns a tuple with the FileAttachment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetFileAttachmentOk() (*string, bool) {
	if o == nil || IsNil(o.FileAttachment) {
		return nil, false
	}
	return o.FileAttachment, true
}

// HasFileAttachment returns a boolean if a field has been set.
func (o *ListedProduct) HasFileAttachment() bool {
	if o != nil && !IsNil(o.FileAttachment) {
		return true
	}

	return false
}

// SetFileAttachment gets a reference to the given string and assigns it to the FileAttachment field.
func (o *ListedProduct) SetFileAttachment(v string) {
	o.FileAttachment = &v
}

// GetYoutubeLink returns the YoutubeLink field value if set, zero value otherwise.
func (o *ListedProduct) GetYoutubeLink() string {
	if o == nil || IsNil(o.YoutubeLink) {
		var ret string
		return ret
	}
	return *o.YoutubeLink
}

// GetYoutubeLinkOk returns a tuple with the YoutubeLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetYoutubeLinkOk() (*string, bool) {
	if o == nil || IsNil(o.YoutubeLink) {
		return nil, false
	}
	return o.YoutubeLink, true
}

// HasYoutubeLink returns a boolean if a field has been set.
func (o *ListedProduct) HasYoutubeLink() bool {
	if o != nil && !IsNil(o.YoutubeLink) {
		return true
	}

	return false
}

// SetYoutubeLink gets a reference to the given string and assigns it to the YoutubeLink field.
func (o *ListedProduct) SetYoutubeLink(v string) {
	o.YoutubeLink = &v
}

// GetVolumeDiscounts returns the VolumeDiscounts field value if set, zero value otherwise.
func (o *ListedProduct) GetVolumeDiscounts() []ListedProductVolumeDiscountsInner {
	if o == nil || IsNil(o.VolumeDiscounts) {
		var ret []ListedProductVolumeDiscountsInner
		return ret
	}
	return o.VolumeDiscounts
}

// GetVolumeDiscountsOk returns a tuple with the VolumeDiscounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetVolumeDiscountsOk() ([]ListedProductVolumeDiscountsInner, bool) {
	if o == nil || IsNil(o.VolumeDiscounts) {
		return nil, false
	}
	return o.VolumeDiscounts, true
}

// HasVolumeDiscounts returns a boolean if a field has been set.
func (o *ListedProduct) HasVolumeDiscounts() bool {
	if o != nil && !IsNil(o.VolumeDiscounts) {
		return true
	}

	return false
}

// SetVolumeDiscounts gets a reference to the given []ListedProductVolumeDiscountsInner and assigns it to the VolumeDiscounts field.
func (o *ListedProduct) SetVolumeDiscounts(v []ListedProductVolumeDiscountsInner) {
	o.VolumeDiscounts = v
}

// GetRecurringInterval returns the RecurringInterval field value if set, zero value otherwise.
func (o *ListedProduct) GetRecurringInterval() string {
	if o == nil || IsNil(o.RecurringInterval) {
		var ret string
		return ret
	}
	return *o.RecurringInterval
}

// GetRecurringIntervalOk returns a tuple with the RecurringInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetRecurringIntervalOk() (*string, bool) {
	if o == nil || IsNil(o.RecurringInterval) {
		return nil, false
	}
	return o.RecurringInterval, true
}

// HasRecurringInterval returns a boolean if a field has been set.
func (o *ListedProduct) HasRecurringInterval() bool {
	if o != nil && !IsNil(o.RecurringInterval) {
		return true
	}

	return false
}

// SetRecurringInterval gets a reference to the given string and assigns it to the RecurringInterval field.
func (o *ListedProduct) SetRecurringInterval(v string) {
	o.RecurringInterval = &v
}

// GetRecurringIntervalCount returns the RecurringIntervalCount field value if set, zero value otherwise.
func (o *ListedProduct) GetRecurringIntervalCount() int32 {
	if o == nil || IsNil(o.RecurringIntervalCount) {
		var ret int32
		return ret
	}
	return *o.RecurringIntervalCount
}

// GetRecurringIntervalCountOk returns a tuple with the RecurringIntervalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetRecurringIntervalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.RecurringIntervalCount) {
		return nil, false
	}
	return o.RecurringIntervalCount, true
}

// HasRecurringIntervalCount returns a boolean if a field has been set.
func (o *ListedProduct) HasRecurringIntervalCount() bool {
	if o != nil && !IsNil(o.RecurringIntervalCount) {
		return true
	}

	return false
}

// SetRecurringIntervalCount gets a reference to the given int32 and assigns it to the RecurringIntervalCount field.
func (o *ListedProduct) SetRecurringIntervalCount(v int32) {
	o.RecurringIntervalCount = &v
}

// GetTrialPeriod returns the TrialPeriod field value if set, zero value otherwise.
func (o *ListedProduct) GetTrialPeriod() int32 {
	if o == nil || IsNil(o.TrialPeriod) {
		var ret int32
		return ret
	}
	return *o.TrialPeriod
}

// GetTrialPeriodOk returns a tuple with the TrialPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetTrialPeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.TrialPeriod) {
		return nil, false
	}
	return o.TrialPeriod, true
}

// HasTrialPeriod returns a boolean if a field has been set.
func (o *ListedProduct) HasTrialPeriod() bool {
	if o != nil && !IsNil(o.TrialPeriod) {
		return true
	}

	return false
}

// SetTrialPeriod gets a reference to the given int32 and assigns it to the TrialPeriod field.
func (o *ListedProduct) SetTrialPeriod(v int32) {
	o.TrialPeriod = &v
}

// GetPaypalProductId returns the PaypalProductId field value if set, zero value otherwise.
func (o *ListedProduct) GetPaypalProductId() string {
	if o == nil || IsNil(o.PaypalProductId) {
		var ret string
		return ret
	}
	return *o.PaypalProductId
}

// GetPaypalProductIdOk returns a tuple with the PaypalProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetPaypalProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaypalProductId) {
		return nil, false
	}
	return o.PaypalProductId, true
}

// HasPaypalProductId returns a boolean if a field has been set.
func (o *ListedProduct) HasPaypalProductId() bool {
	if o != nil && !IsNil(o.PaypalProductId) {
		return true
	}

	return false
}

// SetPaypalProductId gets a reference to the given string and assigns it to the PaypalProductId field.
func (o *ListedProduct) SetPaypalProductId(v string) {
	o.PaypalProductId = &v
}

// GetPaypalPlanId returns the PaypalPlanId field value if set, zero value otherwise.
func (o *ListedProduct) GetPaypalPlanId() string {
	if o == nil || IsNil(o.PaypalPlanId) {
		var ret string
		return ret
	}
	return *o.PaypalPlanId
}

// GetPaypalPlanIdOk returns a tuple with the PaypalPlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetPaypalPlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaypalPlanId) {
		return nil, false
	}
	return o.PaypalPlanId, true
}

// HasPaypalPlanId returns a boolean if a field has been set.
func (o *ListedProduct) HasPaypalPlanId() bool {
	if o != nil && !IsNil(o.PaypalPlanId) {
		return true
	}

	return false
}

// SetPaypalPlanId gets a reference to the given string and assigns it to the PaypalPlanId field.
func (o *ListedProduct) SetPaypalPlanId(v string) {
	o.PaypalPlanId = &v
}

// GetStripePriceId returns the StripePriceId field value if set, zero value otherwise.
func (o *ListedProduct) GetStripePriceId() string {
	if o == nil || IsNil(o.StripePriceId) {
		var ret string
		return ret
	}
	return *o.StripePriceId
}

// GetStripePriceIdOk returns a tuple with the StripePriceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetStripePriceIdOk() (*string, bool) {
	if o == nil || IsNil(o.StripePriceId) {
		return nil, false
	}
	return o.StripePriceId, true
}

// HasStripePriceId returns a boolean if a field has been set.
func (o *ListedProduct) HasStripePriceId() bool {
	if o != nil && !IsNil(o.StripePriceId) {
		return true
	}

	return false
}

// SetStripePriceId gets a reference to the given string and assigns it to the StripePriceId field.
func (o *ListedProduct) SetStripePriceId(v string) {
	o.StripePriceId = &v
}

// GetDiscordIntegration returns the DiscordIntegration field value if set, zero value otherwise.
func (o *ListedProduct) GetDiscordIntegration() float32 {
	if o == nil || IsNil(o.DiscordIntegration) {
		var ret float32
		return ret
	}
	return *o.DiscordIntegration
}

// GetDiscordIntegrationOk returns a tuple with the DiscordIntegration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetDiscordIntegrationOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscordIntegration) {
		return nil, false
	}
	return o.DiscordIntegration, true
}

// HasDiscordIntegration returns a boolean if a field has been set.
func (o *ListedProduct) HasDiscordIntegration() bool {
	if o != nil && !IsNil(o.DiscordIntegration) {
		return true
	}

	return false
}

// SetDiscordIntegration gets a reference to the given float32 and assigns it to the DiscordIntegration field.
func (o *ListedProduct) SetDiscordIntegration(v float32) {
	o.DiscordIntegration = &v
}

// GetDiscordOptional returns the DiscordOptional field value if set, zero value otherwise.
func (o *ListedProduct) GetDiscordOptional() float32 {
	if o == nil || IsNil(o.DiscordOptional) {
		var ret float32
		return ret
	}
	return *o.DiscordOptional
}

// GetDiscordOptionalOk returns a tuple with the DiscordOptional field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetDiscordOptionalOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscordOptional) {
		return nil, false
	}
	return o.DiscordOptional, true
}

// HasDiscordOptional returns a boolean if a field has been set.
func (o *ListedProduct) HasDiscordOptional() bool {
	if o != nil && !IsNil(o.DiscordOptional) {
		return true
	}

	return false
}

// SetDiscordOptional gets a reference to the given float32 and assigns it to the DiscordOptional field.
func (o *ListedProduct) SetDiscordOptional(v float32) {
	o.DiscordOptional = &v
}

// GetDiscordSetRole returns the DiscordSetRole field value if set, zero value otherwise.
func (o *ListedProduct) GetDiscordSetRole() float32 {
	if o == nil || IsNil(o.DiscordSetRole) {
		var ret float32
		return ret
	}
	return *o.DiscordSetRole
}

// GetDiscordSetRoleOk returns a tuple with the DiscordSetRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetDiscordSetRoleOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscordSetRole) {
		return nil, false
	}
	return o.DiscordSetRole, true
}

// HasDiscordSetRole returns a boolean if a field has been set.
func (o *ListedProduct) HasDiscordSetRole() bool {
	if o != nil && !IsNil(o.DiscordSetRole) {
		return true
	}

	return false
}

// SetDiscordSetRole gets a reference to the given float32 and assigns it to the DiscordSetRole field.
func (o *ListedProduct) SetDiscordSetRole(v float32) {
	o.DiscordSetRole = &v
}

// GetDiscordServerId returns the DiscordServerId field value if set, zero value otherwise.
func (o *ListedProduct) GetDiscordServerId() string {
	if o == nil || IsNil(o.DiscordServerId) {
		var ret string
		return ret
	}
	return *o.DiscordServerId
}

// GetDiscordServerIdOk returns a tuple with the DiscordServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetDiscordServerIdOk() (*string, bool) {
	if o == nil || IsNil(o.DiscordServerId) {
		return nil, false
	}
	return o.DiscordServerId, true
}

// HasDiscordServerId returns a boolean if a field has been set.
func (o *ListedProduct) HasDiscordServerId() bool {
	if o != nil && !IsNil(o.DiscordServerId) {
		return true
	}

	return false
}

// SetDiscordServerId gets a reference to the given string and assigns it to the DiscordServerId field.
func (o *ListedProduct) SetDiscordServerId(v string) {
	o.DiscordServerId = &v
}

// GetDiscordRoleId returns the DiscordRoleId field value if set, zero value otherwise.
func (o *ListedProduct) GetDiscordRoleId() float32 {
	if o == nil || IsNil(o.DiscordRoleId) {
		var ret float32
		return ret
	}
	return *o.DiscordRoleId
}

// GetDiscordRoleIdOk returns a tuple with the DiscordRoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetDiscordRoleIdOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscordRoleId) {
		return nil, false
	}
	return o.DiscordRoleId, true
}

// HasDiscordRoleId returns a boolean if a field has been set.
func (o *ListedProduct) HasDiscordRoleId() bool {
	if o != nil && !IsNil(o.DiscordRoleId) {
		return true
	}

	return false
}

// SetDiscordRoleId gets a reference to the given float32 and assigns it to the DiscordRoleId field.
func (o *ListedProduct) SetDiscordRoleId(v float32) {
	o.DiscordRoleId = &v
}

// GetDiscordRemoveRole returns the DiscordRemoveRole field value if set, zero value otherwise.
func (o *ListedProduct) GetDiscordRemoveRole() float32 {
	if o == nil || IsNil(o.DiscordRemoveRole) {
		var ret float32
		return ret
	}
	return *o.DiscordRemoveRole
}

// GetDiscordRemoveRoleOk returns a tuple with the DiscordRemoveRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetDiscordRemoveRoleOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscordRemoveRole) {
		return nil, false
	}
	return o.DiscordRemoveRole, true
}

// HasDiscordRemoveRole returns a boolean if a field has been set.
func (o *ListedProduct) HasDiscordRemoveRole() bool {
	if o != nil && !IsNil(o.DiscordRemoveRole) {
		return true
	}

	return false
}

// SetDiscordRemoveRole gets a reference to the given float32 and assigns it to the DiscordRemoveRole field.
func (o *ListedProduct) SetDiscordRemoveRole(v float32) {
	o.DiscordRemoveRole = &v
}

// GetQuantityMin returns the QuantityMin field value if set, zero value otherwise.
func (o *ListedProduct) GetQuantityMin() int32 {
	if o == nil || IsNil(o.QuantityMin) {
		var ret int32
		return ret
	}
	return *o.QuantityMin
}

// GetQuantityMinOk returns a tuple with the QuantityMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetQuantityMinOk() (*int32, bool) {
	if o == nil || IsNil(o.QuantityMin) {
		return nil, false
	}
	return o.QuantityMin, true
}

// HasQuantityMin returns a boolean if a field has been set.
func (o *ListedProduct) HasQuantityMin() bool {
	if o != nil && !IsNil(o.QuantityMin) {
		return true
	}

	return false
}

// SetQuantityMin gets a reference to the given int32 and assigns it to the QuantityMin field.
func (o *ListedProduct) SetQuantityMin(v int32) {
	o.QuantityMin = &v
}

// GetQuantityMax returns the QuantityMax field value if set, zero value otherwise.
func (o *ListedProduct) GetQuantityMax() int32 {
	if o == nil || IsNil(o.QuantityMax) {
		var ret int32
		return ret
	}
	return *o.QuantityMax
}

// GetQuantityMaxOk returns a tuple with the QuantityMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetQuantityMaxOk() (*int32, bool) {
	if o == nil || IsNil(o.QuantityMax) {
		return nil, false
	}
	return o.QuantityMax, true
}

// HasQuantityMax returns a boolean if a field has been set.
func (o *ListedProduct) HasQuantityMax() bool {
	if o != nil && !IsNil(o.QuantityMax) {
		return true
	}

	return false
}

// SetQuantityMax gets a reference to the given int32 and assigns it to the QuantityMax field.
func (o *ListedProduct) SetQuantityMax(v int32) {
	o.QuantityMax = &v
}

// GetQuantityWarning returns the QuantityWarning field value if set, zero value otherwise.
func (o *ListedProduct) GetQuantityWarning() int32 {
	if o == nil || IsNil(o.QuantityWarning) {
		var ret int32
		return ret
	}
	return *o.QuantityWarning
}

// GetQuantityWarningOk returns a tuple with the QuantityWarning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetQuantityWarningOk() (*int32, bool) {
	if o == nil || IsNil(o.QuantityWarning) {
		return nil, false
	}
	return o.QuantityWarning, true
}

// HasQuantityWarning returns a boolean if a field has been set.
func (o *ListedProduct) HasQuantityWarning() bool {
	if o != nil && !IsNil(o.QuantityWarning) {
		return true
	}

	return false
}

// SetQuantityWarning gets a reference to the given int32 and assigns it to the QuantityWarning field.
func (o *ListedProduct) SetQuantityWarning(v int32) {
	o.QuantityWarning = &v
}

// GetGateways returns the Gateways field value if set, zero value otherwise.
func (o *ListedProduct) GetGateways() []string {
	if o == nil || IsNil(o.Gateways) {
		var ret []string
		return ret
	}
	return o.Gateways
}

// GetGatewaysOk returns a tuple with the Gateways field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetGatewaysOk() ([]string, bool) {
	if o == nil || IsNil(o.Gateways) {
		return nil, false
	}
	return o.Gateways, true
}

// HasGateways returns a boolean if a field has been set.
func (o *ListedProduct) HasGateways() bool {
	if o != nil && !IsNil(o.Gateways) {
		return true
	}

	return false
}

// SetGateways gets a reference to the given []string and assigns it to the Gateways field.
func (o *ListedProduct) SetGateways(v []string) {
	o.Gateways = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *ListedProduct) GetCustomFields() []CustomFieldsArrayInner {
	if o == nil || IsNil(o.CustomFields) {
		var ret []CustomFieldsArrayInner
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetCustomFieldsOk() ([]CustomFieldsArrayInner, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *ListedProduct) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given []CustomFieldsArrayInner and assigns it to the CustomFields field.
func (o *ListedProduct) SetCustomFields(v []CustomFieldsArrayInner) {
	o.CustomFields = v
}

// GetRconCommands returns the RconCommands field value if set, zero value otherwise.
func (o *ListedProduct) GetRconCommands() string {
	if o == nil || IsNil(o.RconCommands) {
		var ret string
		return ret
	}
	return *o.RconCommands
}

// GetRconCommandsOk returns a tuple with the RconCommands field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetRconCommandsOk() (*string, bool) {
	if o == nil || IsNil(o.RconCommands) {
		return nil, false
	}
	return o.RconCommands, true
}

// HasRconCommands returns a boolean if a field has been set.
func (o *ListedProduct) HasRconCommands() bool {
	if o != nil && !IsNil(o.RconCommands) {
		return true
	}

	return false
}

// SetRconCommands gets a reference to the given string and assigns it to the RconCommands field.
func (o *ListedProduct) SetRconCommands(v string) {
	o.RconCommands = &v
}

// GetRconExecutionType returns the RconExecutionType field value if set, zero value otherwise.
func (o *ListedProduct) GetRconExecutionType() string {
	if o == nil || IsNil(o.RconExecutionType) {
		var ret string
		return ret
	}
	return *o.RconExecutionType
}

// GetRconExecutionTypeOk returns a tuple with the RconExecutionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetRconExecutionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RconExecutionType) {
		return nil, false
	}
	return o.RconExecutionType, true
}

// HasRconExecutionType returns a boolean if a field has been set.
func (o *ListedProduct) HasRconExecutionType() bool {
	if o != nil && !IsNil(o.RconExecutionType) {
		return true
	}

	return false
}

// SetRconExecutionType gets a reference to the given string and assigns it to the RconExecutionType field.
func (o *ListedProduct) SetRconExecutionType(v string) {
	o.RconExecutionType = &v
}

// GetRconStartTime returns the RconStartTime field value if set, zero value otherwise.
func (o *ListedProduct) GetRconStartTime() time.Time {
	if o == nil || IsNil(o.RconStartTime) {
		var ret time.Time
		return ret
	}
	return *o.RconStartTime
}

// GetRconStartTimeOk returns a tuple with the RconStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetRconStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RconStartTime) {
		return nil, false
	}
	return o.RconStartTime, true
}

// HasRconStartTime returns a boolean if a field has been set.
func (o *ListedProduct) HasRconStartTime() bool {
	if o != nil && !IsNil(o.RconStartTime) {
		return true
	}

	return false
}

// SetRconStartTime gets a reference to the given time.Time and assigns it to the RconStartTime field.
func (o *ListedProduct) SetRconStartTime(v time.Time) {
	o.RconStartTime = &v
}

// GetCryptoConfirmationsNeeded returns the CryptoConfirmationsNeeded field value if set, zero value otherwise.
func (o *ListedProduct) GetCryptoConfirmationsNeeded() int32 {
	if o == nil || IsNil(o.CryptoConfirmationsNeeded) {
		var ret int32
		return ret
	}
	return *o.CryptoConfirmationsNeeded
}

// GetCryptoConfirmationsNeededOk returns a tuple with the CryptoConfirmationsNeeded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetCryptoConfirmationsNeededOk() (*int32, bool) {
	if o == nil || IsNil(o.CryptoConfirmationsNeeded) {
		return nil, false
	}
	return o.CryptoConfirmationsNeeded, true
}

// HasCryptoConfirmationsNeeded returns a boolean if a field has been set.
func (o *ListedProduct) HasCryptoConfirmationsNeeded() bool {
	if o != nil && !IsNil(o.CryptoConfirmationsNeeded) {
		return true
	}

	return false
}

// SetCryptoConfirmationsNeeded gets a reference to the given int32 and assigns it to the CryptoConfirmationsNeeded field.
func (o *ListedProduct) SetCryptoConfirmationsNeeded(v int32) {
	o.CryptoConfirmationsNeeded = &v
}

// GetMaxRiskLevel returns the MaxRiskLevel field value if set, zero value otherwise.
func (o *ListedProduct) GetMaxRiskLevel() int32 {
	if o == nil || IsNil(o.MaxRiskLevel) {
		var ret int32
		return ret
	}
	return *o.MaxRiskLevel
}

// GetMaxRiskLevelOk returns a tuple with the MaxRiskLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetMaxRiskLevelOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxRiskLevel) {
		return nil, false
	}
	return o.MaxRiskLevel, true
}

// HasMaxRiskLevel returns a boolean if a field has been set.
func (o *ListedProduct) HasMaxRiskLevel() bool {
	if o != nil && !IsNil(o.MaxRiskLevel) {
		return true
	}

	return false
}

// SetMaxRiskLevel gets a reference to the given int32 and assigns it to the MaxRiskLevel field.
func (o *ListedProduct) SetMaxRiskLevel(v int32) {
	o.MaxRiskLevel = &v
}

// GetBlockVpnProxies returns the BlockVpnProxies field value if set, zero value otherwise.
func (o *ListedProduct) GetBlockVpnProxies() bool {
	if o == nil || IsNil(o.BlockVpnProxies) {
		var ret bool
		return ret
	}
	return *o.BlockVpnProxies
}

// GetBlockVpnProxiesOk returns a tuple with the BlockVpnProxies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetBlockVpnProxiesOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockVpnProxies) {
		return nil, false
	}
	return o.BlockVpnProxies, true
}

// HasBlockVpnProxies returns a boolean if a field has been set.
func (o *ListedProduct) HasBlockVpnProxies() bool {
	if o != nil && !IsNil(o.BlockVpnProxies) {
		return true
	}

	return false
}

// SetBlockVpnProxies gets a reference to the given bool and assigns it to the BlockVpnProxies field.
func (o *ListedProduct) SetBlockVpnProxies(v bool) {
	o.BlockVpnProxies = &v
}

// GetDeliveryText returns the DeliveryText field value if set, zero value otherwise.
func (o *ListedProduct) GetDeliveryText() string {
	if o == nil || IsNil(o.DeliveryText) {
		var ret string
		return ret
	}
	return *o.DeliveryText
}

// GetDeliveryTextOk returns a tuple with the DeliveryText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetDeliveryTextOk() (*string, bool) {
	if o == nil || IsNil(o.DeliveryText) {
		return nil, false
	}
	return o.DeliveryText, true
}

// HasDeliveryText returns a boolean if a field has been set.
func (o *ListedProduct) HasDeliveryText() bool {
	if o != nil && !IsNil(o.DeliveryText) {
		return true
	}

	return false
}

// SetDeliveryText gets a reference to the given string and assigns it to the DeliveryText field.
func (o *ListedProduct) SetDeliveryText(v string) {
	o.DeliveryText = &v
}

// GetDeliveryTime returns the DeliveryTime field value if set, zero value otherwise.
func (o *ListedProduct) GetDeliveryTime() int32 {
	if o == nil || IsNil(o.DeliveryTime) {
		var ret int32
		return ret
	}
	return *o.DeliveryTime
}

// GetDeliveryTimeOk returns a tuple with the DeliveryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetDeliveryTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.DeliveryTime) {
		return nil, false
	}
	return o.DeliveryTime, true
}

// HasDeliveryTime returns a boolean if a field has been set.
func (o *ListedProduct) HasDeliveryTime() bool {
	if o != nil && !IsNil(o.DeliveryTime) {
		return true
	}

	return false
}

// SetDeliveryTime gets a reference to the given int32 and assigns it to the DeliveryTime field.
func (o *ListedProduct) SetDeliveryTime(v int32) {
	o.DeliveryTime = &v
}

// GetServiceText returns the ServiceText field value if set, zero value otherwise.
func (o *ListedProduct) GetServiceText() string {
	if o == nil || IsNil(o.ServiceText) {
		var ret string
		return ret
	}
	return *o.ServiceText
}

// GetServiceTextOk returns a tuple with the ServiceText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetServiceTextOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceText) {
		return nil, false
	}
	return o.ServiceText, true
}

// HasServiceText returns a boolean if a field has been set.
func (o *ListedProduct) HasServiceText() bool {
	if o != nil && !IsNil(o.ServiceText) {
		return true
	}

	return false
}

// SetServiceText gets a reference to the given string and assigns it to the ServiceText field.
func (o *ListedProduct) SetServiceText(v string) {
	o.ServiceText = &v
}

// GetStockDelimiter returns the StockDelimiter field value if set, zero value otherwise.
func (o *ListedProduct) GetStockDelimiter() string {
	if o == nil || IsNil(o.StockDelimiter) {
		var ret string
		return ret
	}
	return *o.StockDelimiter
}

// GetStockDelimiterOk returns a tuple with the StockDelimiter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetStockDelimiterOk() (*string, bool) {
	if o == nil || IsNil(o.StockDelimiter) {
		return nil, false
	}
	return o.StockDelimiter, true
}

// HasStockDelimiter returns a boolean if a field has been set.
func (o *ListedProduct) HasStockDelimiter() bool {
	if o != nil && !IsNil(o.StockDelimiter) {
		return true
	}

	return false
}

// SetStockDelimiter gets a reference to the given string and assigns it to the StockDelimiter field.
func (o *ListedProduct) SetStockDelimiter(v string) {
	o.StockDelimiter = &v
}

// GetStock returns the Stock field value if set, zero value otherwise.
func (o *ListedProduct) GetStock() int32 {
	if o == nil || IsNil(o.Stock) {
		var ret int32
		return ret
	}
	return *o.Stock
}

// GetStockOk returns a tuple with the Stock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetStockOk() (*int32, bool) {
	if o == nil || IsNil(o.Stock) {
		return nil, false
	}
	return o.Stock, true
}

// HasStock returns a boolean if a field has been set.
func (o *ListedProduct) HasStock() bool {
	if o != nil && !IsNil(o.Stock) {
		return true
	}

	return false
}

// SetStock gets a reference to the given int32 and assigns it to the Stock field.
func (o *ListedProduct) SetStock(v int32) {
	o.Stock = &v
}

// GetDynamicWebhook returns the DynamicWebhook field value if set, zero value otherwise.
func (o *ListedProduct) GetDynamicWebhook() map[string]interface{} {
	if o == nil || IsNil(o.DynamicWebhook) {
		var ret map[string]interface{}
		return ret
	}
	return o.DynamicWebhook
}

// GetDynamicWebhookOk returns a tuple with the DynamicWebhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetDynamicWebhookOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.DynamicWebhook) {
		return map[string]interface{}{}, false
	}
	return o.DynamicWebhook, true
}

// HasDynamicWebhook returns a boolean if a field has been set.
func (o *ListedProduct) HasDynamicWebhook() bool {
	if o != nil && !IsNil(o.DynamicWebhook) {
		return true
	}

	return false
}

// SetDynamicWebhook gets a reference to the given map[string]interface{} and assigns it to the DynamicWebhook field.
func (o *ListedProduct) SetDynamicWebhook(v map[string]interface{}) {
	o.DynamicWebhook = v
}

// GetBestseller returns the Bestseller field value if set, zero value otherwise.
func (o *ListedProduct) GetBestseller() int32 {
	if o == nil || IsNil(o.Bestseller) {
		var ret int32
		return ret
	}
	return *o.Bestseller
}

// GetBestsellerOk returns a tuple with the Bestseller field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetBestsellerOk() (*int32, bool) {
	if o == nil || IsNil(o.Bestseller) {
		return nil, false
	}
	return o.Bestseller, true
}

// HasBestseller returns a boolean if a field has been set.
func (o *ListedProduct) HasBestseller() bool {
	if o != nil && !IsNil(o.Bestseller) {
		return true
	}

	return false
}

// SetBestseller gets a reference to the given int32 and assigns it to the Bestseller field.
func (o *ListedProduct) SetBestseller(v int32) {
	o.Bestseller = &v
}

// GetSortPriority returns the SortPriority field value if set, zero value otherwise.
func (o *ListedProduct) GetSortPriority() int32 {
	if o == nil || IsNil(o.SortPriority) {
		var ret int32
		return ret
	}
	return *o.SortPriority
}

// GetSortPriorityOk returns a tuple with the SortPriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetSortPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.SortPriority) {
		return nil, false
	}
	return o.SortPriority, true
}

// HasSortPriority returns a boolean if a field has been set.
func (o *ListedProduct) HasSortPriority() bool {
	if o != nil && !IsNil(o.SortPriority) {
		return true
	}

	return false
}

// SetSortPriority gets a reference to the given int32 and assigns it to the SortPriority field.
func (o *ListedProduct) SetSortPriority(v int32) {
	o.SortPriority = &v
}

// GetUnlisted returns the Unlisted field value if set, zero value otherwise.
func (o *ListedProduct) GetUnlisted() bool {
	if o == nil || IsNil(o.Unlisted) {
		var ret bool
		return ret
	}
	return *o.Unlisted
}

// GetUnlistedOk returns a tuple with the Unlisted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetUnlistedOk() (*bool, bool) {
	if o == nil || IsNil(o.Unlisted) {
		return nil, false
	}
	return o.Unlisted, true
}

// HasUnlisted returns a boolean if a field has been set.
func (o *ListedProduct) HasUnlisted() bool {
	if o != nil && !IsNil(o.Unlisted) {
		return true
	}

	return false
}

// SetUnlisted gets a reference to the given bool and assigns it to the Unlisted field.
func (o *ListedProduct) SetUnlisted(v bool) {
	o.Unlisted = &v
}

// GetOnHold returns the OnHold field value if set, zero value otherwise.
func (o *ListedProduct) GetOnHold() bool {
	if o == nil || IsNil(o.OnHold) {
		var ret bool
		return ret
	}
	return *o.OnHold
}

// GetOnHoldOk returns a tuple with the OnHold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetOnHoldOk() (*bool, bool) {
	if o == nil || IsNil(o.OnHold) {
		return nil, false
	}
	return o.OnHold, true
}

// HasOnHold returns a boolean if a field has been set.
func (o *ListedProduct) HasOnHold() bool {
	if o != nil && !IsNil(o.OnHold) {
		return true
	}

	return false
}

// SetOnHold gets a reference to the given bool and assigns it to the OnHold field.
func (o *ListedProduct) SetOnHold(v bool) {
	o.OnHold = &v
}

// GetTermsOfService returns the TermsOfService field value if set, zero value otherwise.
func (o *ListedProduct) GetTermsOfService() string {
	if o == nil || IsNil(o.TermsOfService) {
		var ret string
		return ret
	}
	return *o.TermsOfService
}

// GetTermsOfServiceOk returns a tuple with the TermsOfService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetTermsOfServiceOk() (*string, bool) {
	if o == nil || IsNil(o.TermsOfService) {
		return nil, false
	}
	return o.TermsOfService, true
}

// HasTermsOfService returns a boolean if a field has been set.
func (o *ListedProduct) HasTermsOfService() bool {
	if o != nil && !IsNil(o.TermsOfService) {
		return true
	}

	return false
}

// SetTermsOfService gets a reference to the given string and assigns it to the TermsOfService field.
func (o *ListedProduct) SetTermsOfService(v string) {
	o.TermsOfService = &v
}

// GetWarranty returns the Warranty field value if set, zero value otherwise.
func (o *ListedProduct) GetWarranty() int32 {
	if o == nil || IsNil(o.Warranty) {
		var ret int32
		return ret
	}
	return *o.Warranty
}

// GetWarrantyOk returns a tuple with the Warranty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetWarrantyOk() (*int32, bool) {
	if o == nil || IsNil(o.Warranty) {
		return nil, false
	}
	return o.Warranty, true
}

// HasWarranty returns a boolean if a field has been set.
func (o *ListedProduct) HasWarranty() bool {
	if o != nil && !IsNil(o.Warranty) {
		return true
	}

	return false
}

// SetWarranty gets a reference to the given int32 and assigns it to the Warranty field.
func (o *ListedProduct) SetWarranty(v int32) {
	o.Warranty = &v
}

// GetWarrantyText returns the WarrantyText field value if set, zero value otherwise.
func (o *ListedProduct) GetWarrantyText() string {
	if o == nil || IsNil(o.WarrantyText) {
		var ret string
		return ret
	}
	return *o.WarrantyText
}

// GetWarrantyTextOk returns a tuple with the WarrantyText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetWarrantyTextOk() (*string, bool) {
	if o == nil || IsNil(o.WarrantyText) {
		return nil, false
	}
	return o.WarrantyText, true
}

// HasWarrantyText returns a boolean if a field has been set.
func (o *ListedProduct) HasWarrantyText() bool {
	if o != nil && !IsNil(o.WarrantyText) {
		return true
	}

	return false
}

// SetWarrantyText gets a reference to the given string and assigns it to the WarrantyText field.
func (o *ListedProduct) SetWarrantyText(v string) {
	o.WarrantyText = &v
}

// GetWatermarkEnabled returns the WatermarkEnabled field value if set, zero value otherwise.
func (o *ListedProduct) GetWatermarkEnabled() float32 {
	if o == nil || IsNil(o.WatermarkEnabled) {
		var ret float32
		return ret
	}
	return *o.WatermarkEnabled
}

// GetWatermarkEnabledOk returns a tuple with the WatermarkEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetWatermarkEnabledOk() (*float32, bool) {
	if o == nil || IsNil(o.WatermarkEnabled) {
		return nil, false
	}
	return o.WatermarkEnabled, true
}

// HasWatermarkEnabled returns a boolean if a field has been set.
func (o *ListedProduct) HasWatermarkEnabled() bool {
	if o != nil && !IsNil(o.WatermarkEnabled) {
		return true
	}

	return false
}

// SetWatermarkEnabled gets a reference to the given float32 and assigns it to the WatermarkEnabled field.
func (o *ListedProduct) SetWatermarkEnabled(v float32) {
	o.WatermarkEnabled = &v
}

// GetWatermarkText returns the WatermarkText field value if set, zero value otherwise.
func (o *ListedProduct) GetWatermarkText() string {
	if o == nil || IsNil(o.WatermarkText) {
		var ret string
		return ret
	}
	return *o.WatermarkText
}

// GetWatermarkTextOk returns a tuple with the WatermarkText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetWatermarkTextOk() (*string, bool) {
	if o == nil || IsNil(o.WatermarkText) {
		return nil, false
	}
	return o.WatermarkText, true
}

// HasWatermarkText returns a boolean if a field has been set.
func (o *ListedProduct) HasWatermarkText() bool {
	if o != nil && !IsNil(o.WatermarkText) {
		return true
	}

	return false
}

// SetWatermarkText gets a reference to the given string and assigns it to the WatermarkText field.
func (o *ListedProduct) SetWatermarkText(v string) {
	o.WatermarkText = &v
}

// GetRedirectLink returns the RedirectLink field value if set, zero value otherwise.
func (o *ListedProduct) GetRedirectLink() string {
	if o == nil || IsNil(o.RedirectLink) {
		var ret string
		return ret
	}
	return *o.RedirectLink
}

// GetRedirectLinkOk returns a tuple with the RedirectLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetRedirectLinkOk() (*string, bool) {
	if o == nil || IsNil(o.RedirectLink) {
		return nil, false
	}
	return o.RedirectLink, true
}

// HasRedirectLink returns a boolean if a field has been set.
func (o *ListedProduct) HasRedirectLink() bool {
	if o != nil && !IsNil(o.RedirectLink) {
		return true
	}

	return false
}

// SetRedirectLink gets a reference to the given string and assigns it to the RedirectLink field.
func (o *ListedProduct) SetRedirectLink(v string) {
	o.RedirectLink = &v
}

// GetLabelSingular returns the LabelSingular field value if set, zero value otherwise.
func (o *ListedProduct) GetLabelSingular() string {
	if o == nil || IsNil(o.LabelSingular) {
		var ret string
		return ret
	}
	return *o.LabelSingular
}

// GetLabelSingularOk returns a tuple with the LabelSingular field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetLabelSingularOk() (*string, bool) {
	if o == nil || IsNil(o.LabelSingular) {
		return nil, false
	}
	return o.LabelSingular, true
}

// HasLabelSingular returns a boolean if a field has been set.
func (o *ListedProduct) HasLabelSingular() bool {
	if o != nil && !IsNil(o.LabelSingular) {
		return true
	}

	return false
}

// SetLabelSingular gets a reference to the given string and assigns it to the LabelSingular field.
func (o *ListedProduct) SetLabelSingular(v string) {
	o.LabelSingular = &v
}

// GetLabelPlural returns the LabelPlural field value if set, zero value otherwise.
func (o *ListedProduct) GetLabelPlural() string {
	if o == nil || IsNil(o.LabelPlural) {
		var ret string
		return ret
	}
	return *o.LabelPlural
}

// GetLabelPluralOk returns a tuple with the LabelPlural field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetLabelPluralOk() (*string, bool) {
	if o == nil || IsNil(o.LabelPlural) {
		return nil, false
	}
	return o.LabelPlural, true
}

// HasLabelPlural returns a boolean if a field has been set.
func (o *ListedProduct) HasLabelPlural() bool {
	if o != nil && !IsNil(o.LabelPlural) {
		return true
	}

	return false
}

// SetLabelPlural gets a reference to the given string and assigns it to the LabelPlural field.
func (o *ListedProduct) SetLabelPlural(v string) {
	o.LabelPlural = &v
}

// GetPrivate returns the Private field value if set, zero value otherwise.
func (o *ListedProduct) GetPrivate() bool {
	if o == nil || IsNil(o.Private) {
		var ret bool
		return ret
	}
	return *o.Private
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetPrivateOk() (*bool, bool) {
	if o == nil || IsNil(o.Private) {
		return nil, false
	}
	return o.Private, true
}

// HasPrivate returns a boolean if a field has been set.
func (o *ListedProduct) HasPrivate() bool {
	if o != nil && !IsNil(o.Private) {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given bool and assigns it to the Private field.
func (o *ListedProduct) SetPrivate(v bool) {
	o.Private = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ListedProduct) GetCreatedAt() int32 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetCreatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ListedProduct) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *ListedProduct) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ListedProduct) GetUpdatedAt() int32 {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ListedProduct) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *ListedProduct) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *ListedProduct) GetUpdatedBy() int32 {
	if o == nil || IsNil(o.UpdatedBy) {
		var ret int32
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetUpdatedByOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdatedBy) {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *ListedProduct) HasUpdatedBy() bool {
	if o != nil && !IsNil(o.UpdatedBy) {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given int32 and assigns it to the UpdatedBy field.
func (o *ListedProduct) SetUpdatedBy(v int32) {
	o.UpdatedBy = &v
}

// GetMarketplaceCategoryId returns the MarketplaceCategoryId field value if set, zero value otherwise.
func (o *ListedProduct) GetMarketplaceCategoryId() string {
	if o == nil || IsNil(o.MarketplaceCategoryId) {
		var ret string
		return ret
	}
	return *o.MarketplaceCategoryId
}

// GetMarketplaceCategoryIdOk returns a tuple with the MarketplaceCategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetMarketplaceCategoryIdOk() (*string, bool) {
	if o == nil || IsNil(o.MarketplaceCategoryId) {
		return nil, false
	}
	return o.MarketplaceCategoryId, true
}

// HasMarketplaceCategoryId returns a boolean if a field has been set.
func (o *ListedProduct) HasMarketplaceCategoryId() bool {
	if o != nil && !IsNil(o.MarketplaceCategoryId) {
		return true
	}

	return false
}

// SetMarketplaceCategoryId gets a reference to the given string and assigns it to the MarketplaceCategoryId field.
func (o *ListedProduct) SetMarketplaceCategoryId(v string) {
	o.MarketplaceCategoryId = &v
}

// GetTelegramGroupId returns the TelegramGroupId field value if set, zero value otherwise.
func (o *ListedProduct) GetTelegramGroupId() string {
	if o == nil || IsNil(o.TelegramGroupId) {
		var ret string
		return ret
	}
	return *o.TelegramGroupId
}

// GetTelegramGroupIdOk returns a tuple with the TelegramGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetTelegramGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.TelegramGroupId) {
		return nil, false
	}
	return o.TelegramGroupId, true
}

// HasTelegramGroupId returns a boolean if a field has been set.
func (o *ListedProduct) HasTelegramGroupId() bool {
	if o != nil && !IsNil(o.TelegramGroupId) {
		return true
	}

	return false
}

// SetTelegramGroupId gets a reference to the given string and assigns it to the TelegramGroupId field.
func (o *ListedProduct) SetTelegramGroupId(v string) {
	o.TelegramGroupId = &v
}

// GetTelegramIntegration returns the TelegramIntegration field value if set, zero value otherwise.
func (o *ListedProduct) GetTelegramIntegration() int32 {
	if o == nil || IsNil(o.TelegramIntegration) {
		var ret int32
		return ret
	}
	return *o.TelegramIntegration
}

// GetTelegramIntegrationOk returns a tuple with the TelegramIntegration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetTelegramIntegrationOk() (*int32, bool) {
	if o == nil || IsNil(o.TelegramIntegration) {
		return nil, false
	}
	return o.TelegramIntegration, true
}

// HasTelegramIntegration returns a boolean if a field has been set.
func (o *ListedProduct) HasTelegramIntegration() bool {
	if o != nil && !IsNil(o.TelegramIntegration) {
		return true
	}

	return false
}

// SetTelegramIntegration gets a reference to the given int32 and assigns it to the TelegramIntegration field.
func (o *ListedProduct) SetTelegramIntegration(v int32) {
	o.TelegramIntegration = &v
}

// GetTelegramOptional returns the TelegramOptional field value if set, zero value otherwise.
func (o *ListedProduct) GetTelegramOptional() int32 {
	if o == nil || IsNil(o.TelegramOptional) {
		var ret int32
		return ret
	}
	return *o.TelegramOptional
}

// GetTelegramOptionalOk returns a tuple with the TelegramOptional field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetTelegramOptionalOk() (*int32, bool) {
	if o == nil || IsNil(o.TelegramOptional) {
		return nil, false
	}
	return o.TelegramOptional, true
}

// HasTelegramOptional returns a boolean if a field has been set.
func (o *ListedProduct) HasTelegramOptional() bool {
	if o != nil && !IsNil(o.TelegramOptional) {
		return true
	}

	return false
}

// SetTelegramOptional gets a reference to the given int32 and assigns it to the TelegramOptional field.
func (o *ListedProduct) SetTelegramOptional(v int32) {
	o.TelegramOptional = &v
}

// GetImageName returns the ImageName field value if set, zero value otherwise.
func (o *ListedProduct) GetImageName() string {
	if o == nil || IsNil(o.ImageName) {
		var ret string
		return ret
	}
	return *o.ImageName
}

// GetImageNameOk returns a tuple with the ImageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetImageNameOk() (*string, bool) {
	if o == nil || IsNil(o.ImageName) {
		return nil, false
	}
	return o.ImageName, true
}

// HasImageName returns a boolean if a field has been set.
func (o *ListedProduct) HasImageName() bool {
	if o != nil && !IsNil(o.ImageName) {
		return true
	}

	return false
}

// SetImageName gets a reference to the given string and assigns it to the ImageName field.
func (o *ListedProduct) SetImageName(v string) {
	o.ImageName = &v
}

// GetImageStorage returns the ImageStorage field value if set, zero value otherwise.
func (o *ListedProduct) GetImageStorage() string {
	if o == nil || IsNil(o.ImageStorage) {
		var ret string
		return ret
	}
	return *o.ImageStorage
}

// GetImageStorageOk returns a tuple with the ImageStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetImageStorageOk() (*string, bool) {
	if o == nil || IsNil(o.ImageStorage) {
		return nil, false
	}
	return o.ImageStorage, true
}

// HasImageStorage returns a boolean if a field has been set.
func (o *ListedProduct) HasImageStorage() bool {
	if o != nil && !IsNil(o.ImageStorage) {
		return true
	}

	return false
}

// SetImageStorage gets a reference to the given string and assigns it to the ImageStorage field.
func (o *ListedProduct) SetImageStorage(v string) {
	o.ImageStorage = &v
}

// GetCloudflareImageId returns the CloudflareImageId field value if set, zero value otherwise.
func (o *ListedProduct) GetCloudflareImageId() string {
	if o == nil || IsNil(o.CloudflareImageId) {
		var ret string
		return ret
	}
	return *o.CloudflareImageId
}

// GetCloudflareImageIdOk returns a tuple with the CloudflareImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetCloudflareImageIdOk() (*string, bool) {
	if o == nil || IsNil(o.CloudflareImageId) {
		return nil, false
	}
	return o.CloudflareImageId, true
}

// HasCloudflareImageId returns a boolean if a field has been set.
func (o *ListedProduct) HasCloudflareImageId() bool {
	if o != nil && !IsNil(o.CloudflareImageId) {
		return true
	}

	return false
}

// SetCloudflareImageId gets a reference to the given string and assigns it to the CloudflareImageId field.
func (o *ListedProduct) SetCloudflareImageId(v string) {
	o.CloudflareImageId = &v
}

// GetImageAttachments returns the ImageAttachments field value if set, zero value otherwise.
func (o *ListedProduct) GetImageAttachments() []ImageAttachment {
	if o == nil || IsNil(o.ImageAttachments) {
		var ret []ImageAttachment
		return ret
	}
	return o.ImageAttachments
}

// GetImageAttachmentsOk returns a tuple with the ImageAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetImageAttachmentsOk() ([]ImageAttachment, bool) {
	if o == nil || IsNil(o.ImageAttachments) {
		return nil, false
	}
	return o.ImageAttachments, true
}

// HasImageAttachments returns a boolean if a field has been set.
func (o *ListedProduct) HasImageAttachments() bool {
	if o != nil && !IsNil(o.ImageAttachments) {
		return true
	}

	return false
}

// SetImageAttachments gets a reference to the given []ImageAttachment and assigns it to the ImageAttachments field.
func (o *ListedProduct) SetImageAttachments(v []ImageAttachment) {
	o.ImageAttachments = v
}

// GetFeedback returns the Feedback field value if set, zero value otherwise.
func (o *ListedProduct) GetFeedback() ListedProductFeedback {
	if o == nil || IsNil(o.Feedback) {
		var ret ListedProductFeedback
		return ret
	}
	return *o.Feedback
}

// GetFeedbackOk returns a tuple with the Feedback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetFeedbackOk() (*ListedProductFeedback, bool) {
	if o == nil || IsNil(o.Feedback) {
		return nil, false
	}
	return o.Feedback, true
}

// HasFeedback returns a boolean if a field has been set.
func (o *ListedProduct) HasFeedback() bool {
	if o != nil && !IsNil(o.Feedback) {
		return true
	}

	return false
}

// SetFeedback gets a reference to the given ListedProductFeedback and assigns it to the Feedback field.
func (o *ListedProduct) SetFeedback(v ListedProductFeedback) {
	o.Feedback = &v
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *ListedProduct) GetCategories() []FeedbackProductCategoriesInner {
	if o == nil || IsNil(o.Categories) {
		var ret []FeedbackProductCategoriesInner
		return ret
	}
	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetCategoriesOk() ([]FeedbackProductCategoriesInner, bool) {
	if o == nil || IsNil(o.Categories) {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *ListedProduct) HasCategories() bool {
	if o != nil && !IsNil(o.Categories) {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []FeedbackProductCategoriesInner and assigns it to the Categories field.
func (o *ListedProduct) SetCategories(v []FeedbackProductCategoriesInner) {
	o.Categories = v
}

// GetPaymentGatewaysFees returns the PaymentGatewaysFees field value if set, zero value otherwise.
func (o *ListedProduct) GetPaymentGatewaysFees() []ListedProductPaymentGatewaysFeesInner {
	if o == nil || IsNil(o.PaymentGatewaysFees) {
		var ret []ListedProductPaymentGatewaysFeesInner
		return ret
	}
	return o.PaymentGatewaysFees
}

// GetPaymentGatewaysFeesOk returns a tuple with the PaymentGatewaysFees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListedProduct) GetPaymentGatewaysFeesOk() ([]ListedProductPaymentGatewaysFeesInner, bool) {
	if o == nil || IsNil(o.PaymentGatewaysFees) {
		return nil, false
	}
	return o.PaymentGatewaysFees, true
}

// HasPaymentGatewaysFees returns a boolean if a field has been set.
func (o *ListedProduct) HasPaymentGatewaysFees() bool {
	if o != nil && !IsNil(o.PaymentGatewaysFees) {
		return true
	}

	return false
}

// SetPaymentGatewaysFees gets a reference to the given []ListedProductPaymentGatewaysFeesInner and assigns it to the PaymentGatewaysFees field.
func (o *ListedProduct) SetPaymentGatewaysFees(v []ListedProductPaymentGatewaysFeesInner) {
	o.PaymentGatewaysFees = v
}

func (o ListedProduct) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListedProduct) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Uniqid) {
		toSerialize["uniqid"] = o.Uniqid
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	if !IsNil(o.ShopId) {
		toSerialize["shop_id"] = o.ShopId
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Subtype) {
		toSerialize["subtype"] = o.Subtype
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.PayWhatYouWant) {
		toSerialize["pay_what_you_want"] = o.PayWhatYouWant
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.PriceDisplay) {
		toSerialize["price_display"] = o.PriceDisplay
	}
	if !IsNil(o.PriceDiscount) {
		toSerialize["price_discount"] = o.PriceDiscount
	}
	if !IsNil(o.AffiliateRevenuePercent) {
		toSerialize["affiliate_revenue_percent"] = o.AffiliateRevenuePercent
	}
	if !IsNil(o.PriceVariants) {
		toSerialize["price_variants"] = o.PriceVariants
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.LicensingEnabled) {
		toSerialize["licensing_enabled"] = o.LicensingEnabled
	}
	if !IsNil(o.LicensePeriod) {
		toSerialize["license_period"] = o.LicensePeriod
	}
	if !IsNil(o.ImageAttachment) {
		toSerialize["image_attachment"] = o.ImageAttachment
	}
	if !IsNil(o.FileAttachment) {
		toSerialize["file_attachment"] = o.FileAttachment
	}
	if !IsNil(o.YoutubeLink) {
		toSerialize["youtube_link"] = o.YoutubeLink
	}
	if !IsNil(o.VolumeDiscounts) {
		toSerialize["volume_discounts"] = o.VolumeDiscounts
	}
	if !IsNil(o.RecurringInterval) {
		toSerialize["recurring_interval"] = o.RecurringInterval
	}
	if !IsNil(o.RecurringIntervalCount) {
		toSerialize["recurring_interval_count"] = o.RecurringIntervalCount
	}
	if !IsNil(o.TrialPeriod) {
		toSerialize["trial_period"] = o.TrialPeriod
	}
	if !IsNil(o.PaypalProductId) {
		toSerialize["paypal_product_id"] = o.PaypalProductId
	}
	if !IsNil(o.PaypalPlanId) {
		toSerialize["paypal_plan_id"] = o.PaypalPlanId
	}
	if !IsNil(o.StripePriceId) {
		toSerialize["stripe_price_id"] = o.StripePriceId
	}
	if !IsNil(o.DiscordIntegration) {
		toSerialize["discord_integration"] = o.DiscordIntegration
	}
	if !IsNil(o.DiscordOptional) {
		toSerialize["discord_optional"] = o.DiscordOptional
	}
	if !IsNil(o.DiscordSetRole) {
		toSerialize["discord_set_role"] = o.DiscordSetRole
	}
	if !IsNil(o.DiscordServerId) {
		toSerialize["discord_server_id"] = o.DiscordServerId
	}
	if !IsNil(o.DiscordRoleId) {
		toSerialize["discord_role_id"] = o.DiscordRoleId
	}
	if !IsNil(o.DiscordRemoveRole) {
		toSerialize["discord_remove_role"] = o.DiscordRemoveRole
	}
	if !IsNil(o.QuantityMin) {
		toSerialize["quantity_min"] = o.QuantityMin
	}
	if !IsNil(o.QuantityMax) {
		toSerialize["quantity_max"] = o.QuantityMax
	}
	if !IsNil(o.QuantityWarning) {
		toSerialize["quantity_warning"] = o.QuantityWarning
	}
	if !IsNil(o.Gateways) {
		toSerialize["gateways"] = o.Gateways
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if !IsNil(o.RconCommands) {
		toSerialize["rcon_commands"] = o.RconCommands
	}
	if !IsNil(o.RconExecutionType) {
		toSerialize["rcon_execution_type"] = o.RconExecutionType
	}
	if !IsNil(o.RconStartTime) {
		toSerialize["rcon_start_time"] = o.RconStartTime
	}
	if !IsNil(o.CryptoConfirmationsNeeded) {
		toSerialize["crypto_confirmations_needed"] = o.CryptoConfirmationsNeeded
	}
	if !IsNil(o.MaxRiskLevel) {
		toSerialize["max_risk_level"] = o.MaxRiskLevel
	}
	if !IsNil(o.BlockVpnProxies) {
		toSerialize["block_vpn_proxies"] = o.BlockVpnProxies
	}
	if !IsNil(o.DeliveryText) {
		toSerialize["delivery_text"] = o.DeliveryText
	}
	if !IsNil(o.DeliveryTime) {
		toSerialize["delivery_time"] = o.DeliveryTime
	}
	if !IsNil(o.ServiceText) {
		toSerialize["service_text"] = o.ServiceText
	}
	if !IsNil(o.StockDelimiter) {
		toSerialize["stock_delimiter"] = o.StockDelimiter
	}
	if !IsNil(o.Stock) {
		toSerialize["stock"] = o.Stock
	}
	if !IsNil(o.DynamicWebhook) {
		toSerialize["dynamic_webhook"] = o.DynamicWebhook
	}
	if !IsNil(o.Bestseller) {
		toSerialize["bestseller"] = o.Bestseller
	}
	if !IsNil(o.SortPriority) {
		toSerialize["sort_priority"] = o.SortPriority
	}
	if !IsNil(o.Unlisted) {
		toSerialize["unlisted"] = o.Unlisted
	}
	if !IsNil(o.OnHold) {
		toSerialize["on_hold"] = o.OnHold
	}
	if !IsNil(o.TermsOfService) {
		toSerialize["terms_of_service"] = o.TermsOfService
	}
	if !IsNil(o.Warranty) {
		toSerialize["warranty"] = o.Warranty
	}
	if !IsNil(o.WarrantyText) {
		toSerialize["warranty_text"] = o.WarrantyText
	}
	if !IsNil(o.WatermarkEnabled) {
		toSerialize["watermark_enabled"] = o.WatermarkEnabled
	}
	if !IsNil(o.WatermarkText) {
		toSerialize["watermark_text"] = o.WatermarkText
	}
	if !IsNil(o.RedirectLink) {
		toSerialize["redirect_link"] = o.RedirectLink
	}
	if !IsNil(o.LabelSingular) {
		toSerialize["label_singular"] = o.LabelSingular
	}
	if !IsNil(o.LabelPlural) {
		toSerialize["label_plural"] = o.LabelPlural
	}
	if !IsNil(o.Private) {
		toSerialize["private"] = o.Private
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.UpdatedBy) {
		toSerialize["updated_by"] = o.UpdatedBy
	}
	if !IsNil(o.MarketplaceCategoryId) {
		toSerialize["marketplace_category_id"] = o.MarketplaceCategoryId
	}
	if !IsNil(o.TelegramGroupId) {
		toSerialize["telegram_group_id"] = o.TelegramGroupId
	}
	if !IsNil(o.TelegramIntegration) {
		toSerialize["telegram_integration"] = o.TelegramIntegration
	}
	if !IsNil(o.TelegramOptional) {
		toSerialize["telegram_optional"] = o.TelegramOptional
	}
	if !IsNil(o.ImageName) {
		toSerialize["image_name"] = o.ImageName
	}
	if !IsNil(o.ImageStorage) {
		toSerialize["image_storage"] = o.ImageStorage
	}
	if !IsNil(o.CloudflareImageId) {
		toSerialize["cloudflare_image_id"] = o.CloudflareImageId
	}
	if !IsNil(o.ImageAttachments) {
		toSerialize["image_attachments"] = o.ImageAttachments
	}
	if !IsNil(o.Feedback) {
		toSerialize["feedback"] = o.Feedback
	}
	if !IsNil(o.Categories) {
		toSerialize["categories"] = o.Categories
	}
	if !IsNil(o.PaymentGatewaysFees) {
		toSerialize["payment_gateways_fees"] = o.PaymentGatewaysFees
	}
	return toSerialize, nil
}

type NullableListedProduct struct {
	value *ListedProduct
	isSet bool
}

func (v NullableListedProduct) Get() *ListedProduct {
	return v.value
}

func (v *NullableListedProduct) Set(val *ListedProduct) {
	v.value = val
	v.isSet = true
}

func (v NullableListedProduct) IsSet() bool {
	return v.isSet
}

func (v *NullableListedProduct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListedProduct(val *ListedProduct) *NullableListedProduct {
	return &NullableListedProduct{value: val, isSet: true}
}

func (v NullableListedProduct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListedProduct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


