/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the GetGroup200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetGroup200ResponseData{}

// GetGroup200ResponseData struct for GetGroup200ResponseData
type GetGroup200ResponseData struct {
	Group *Group `json:"group,omitempty"`
}

// NewGetGroup200ResponseData instantiates a new GetGroup200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetGroup200ResponseData() *GetGroup200ResponseData {
	this := GetGroup200ResponseData{}
	return &this
}

// NewGetGroup200ResponseDataWithDefaults instantiates a new GetGroup200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetGroup200ResponseDataWithDefaults() *GetGroup200ResponseData {
	this := GetGroup200ResponseData{}
	return &this
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *GetGroup200ResponseData) GetGroup() Group {
	if o == nil || IsNil(o.Group) {
		var ret Group
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetGroup200ResponseData) GetGroupOk() (*Group, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *GetGroup200ResponseData) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given Group and assigns it to the Group field.
func (o *GetGroup200ResponseData) SetGroup(v Group) {
	o.Group = &v
}

func (o GetGroup200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetGroup200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	return toSerialize, nil
}

type NullableGetGroup200ResponseData struct {
	value *GetGroup200ResponseData
	isSet bool
}

func (v NullableGetGroup200ResponseData) Get() *GetGroup200ResponseData {
	return v.value
}

func (v *NullableGetGroup200ResponseData) Set(val *GetGroup200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetGroup200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetGroup200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetGroup200ResponseData(val *GetGroup200ResponseData) *NullableGetGroup200ResponseData {
	return &NullableGetGroup200ResponseData{value: val, isSet: true}
}

func (v NullableGetGroup200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetGroup200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


