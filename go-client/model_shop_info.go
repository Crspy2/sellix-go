/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the ShopInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShopInfo{}

// ShopInfo struct for ShopInfo
type ShopInfo struct {
	// The ID of the shop
	Id *int32 `json:"id,omitempty"`
	// The ID of the user who requested the shop info
	UserId *int32 `json:"user_id,omitempty"`
	// The type of the shop
	Type *string `json:"type,omitempty"`
	// The name of the shop
	Name *string `json:"name,omitempty"`
	// The hash for the avatar
	Avatar *string `json:"avatar,omitempty"`
	Currency *Currency `json:"currency,omitempty"`
	DefaultCurrency *Currency `json:"default_currency,omitempty"`
	AvailableCurrency *Currency `json:"available_currency,omitempty"`
	// The VAT percentage setup for the store
	VatPercentage *string `json:"vat_percentage,omitempty"`
	// The tax configuration for the shop
	TaxConfiguration *string `json:"tax_configuration,omitempty"`
	// The organization mode set for the dashboard
	DashboardFeature *string `json:"dashboard_feature,omitempty"`
	// The tax percentage will be shown on the product cards of your storefront, and not on the checkout page and invoice PDF only.
	DisplayTaxOnStorefront *int32 `json:"display_tax_on_storefront,omitempty"`
	// Whether the tax is displayed in custom fields
	DisplayTaxCustomFields *int32 `json:"display_tax_custom_fields,omitempty"`
	// Wheter or not VAT validation is only done for companies
	ValidationOnlyForCompanies *int32 `json:"validation_only_for_companies,omitempty"`
	// If enabled, we will validate the Company VAT number to be sure itâ€™s correct.
	ValidateVatNumber *int32 `json:"validate_vat_number,omitempty"`
	// Whether or not product pricing incldues the VAT
	PricesTaxInclusive *int32 `json:"prices_tax_inclusive,omitempty"`
	// Send an email to your customers when the trial period is ending.
	NotifyTrialEnding *int32 `json:"notify_trial_ending,omitempty"`
	// Send an email to your customers days before an upcoming renewal.
	NotifyUpcomingRenewal *int32 `json:"notify_upcoming_renewal,omitempty"`
	// Send an email to your customers if a subscription renewal fails.
	NotifySubscriptionRenewalFailure *int32 `json:"notify_subscription_renewal_failure,omitempty"`
	// Whether or not the shop owner receives emails for orders
	OrderEmails *int32 `json:"order_emails,omitempty"`
	// In days, how much time should we wait before cancelling a subscription if no payment is completed.
	SubscriptionGracePeriod *int32 `json:"subscription_grace_period,omitempty"`
	// Whether or not the shop accepts credit cards via PayPal
	PaypalCreditCard *int32 `json:"paypal_credit_card,omitempty"`
	// Whether or not the shop delivers products to the PayPal email when the gateway is PAYPAL
	ForcePaypalEmailDelivery *int32 `json:"force_paypal_email_delivery,omitempty"`
	// The PayPal merchant ID of the PayPal account linked to the shop
	PaypalMerchantId *string `json:"paypal_merchant_id,omitempty"`
	// The Binance ID of the Binance account linked to the shop
	BinanceId *string `json:"binance_id,omitempty"`
	// The WalletConnect ID of the WalletConnect account linked to the shop
	WalletconnectId *string `json:"walletconnect_id,omitempty"`
	// Whether or not the shop uses the Sellix non-custodial crypto wallet
	NonCustodialWallet *int32 `json:"non_custodial_wallet,omitempty"`
	// Whether or not the shop has dark mode enabled
	DarkMode *int32 `json:"dark_mode,omitempty"`
	// The Discord server invite link for the shop
	DiscordLink *string `json:"discord_link,omitempty"`
	// The link to the shop's Twitter account
	TwitterLink *string `json:"twitter_link,omitempty"`
	// The link to the shop's Instagram account
	InstagramLink *string `json:"instagram_link,omitempty"`
	// The link to the shop's Facebook account
	FacebookLink *string `json:"facebook_link,omitempty"`
	// The invite link to the shop's Telegram community
	TelegramLink *string `json:"telegram_link,omitempty"`
	// The link to the shop's YouTube channel
	YoutubeLink *string `json:"youtube_link,omitempty"`
	// The link to the shop's SubReddit
	RedditLink *string `json:"reddit_link,omitempty"`
	// The link to the shop's TikTok account
	TiktokLink *string `json:"tiktok_link,omitempty"`
	// Whether or not the shop has dark mode enabled
	SearchEnabled *int32 `json:"search_enabled,omitempty"`
	// Whether or not the shop has product sorting enabled
	SortEnabled *int32 `json:"sort_enabled,omitempty"`
	// Whether or not the shop has the cart system enabled
	CartEnabled *int32 `json:"cart_enabled,omitempty"`
	// Set the maximum amount, in your currency, for an order made through the Shopping Cart.
	CartMaximumCheckout *string `json:"cart_maximum_checkout,omitempty"`
	// Automatically hide your products when out of stock.
	HideOutOfStock *int32 `json:"hide_out_of_stock,omitempty"`
	// The google analyticd tracking id the shop uses for analytics
	GoogleAnalyticsTrackingId *string `json:"google_analytics_tracking_id,omitempty"`
	// The crisp website id the shop uses for analytics
	CrispWebsiteId *string `json:"crisp_website_id,omitempty"`
	// Whether or not the shop's theme centers product titles
	CenterProductTitles *int32 `json:"center_product_titles,omitempty"`
	// Whether or not the shop's theme centers group titles
	CenterGroupTitles *int32 `json:"center_group_titles,omitempty"`
	// This message will be shown to anyone who visits your site. Do not include your Terms of Service here.
	PopupMessage *string `json:"popup_message,omitempty"`
	// Whether or not the shop is verified by Sellix
	Verified *int32 `json:"verified,omitempty"`
	// Whether or not the shop is on hold
	OnHold *int32 `json:"on_hold,omitempty"`
	// The terms of service for the shop in MDX
	TermsOfService *string `json:"terms_of_service,omitempty"`
	// The primary color of the shop's custom theme. Value is null if no custom theme is used.
	PrimaryColorCustomTheme *string `json:"primary_color_custom_theme,omitempty"`
	// The secondary color of the shop's custom theme. Value is null if no custom theme is used.
	SecondaryColorCustomTheme *string `json:"secondary_color_custom_theme,omitempty"`
	// The primary font color of the shop's custom theme. Value is null if no custom theme is used.
	PrimaryFontColorCustomTheme *string `json:"primary_font_color_custom_theme,omitempty"`
	// The secondary font color of the shop's custom theme. Value is null if no custom theme is used.
	SecondaryFontColorCustomTheme *string `json:"secondary_font_color_custom_theme,omitempty"`
	// Whether or not the shop uses a custom embed theme. Value is null if no custom theme is used.
	CustomEmbed *int32 `json:"custom_embed,omitempty"`
	// Whether or not the shop uses a custom storefront theme. Value is null if no custom theme is used.
	CustomTheme *int32 `json:"custom_theme,omitempty"`
	// The font of the shop's custom storefront theme. Value is null if no custom theme is used.
	FontCustomTheme *string `json:"font_custom_theme,omitempty"`
	// The style of the shop's custom storefront theme. Value is null if no custom theme is used.
	StyleCustomTheme *string `json:"style_custom_theme,omitempty"`
	// The style of the shop's custom embed theme. Value is null if no custom theme is used.
	EmbedStyleCustomTheme *string `json:"embed_style_custom_theme,omitempty"`
	// The index of the shop's active custom storefront theme. Value is null if no custom theme is used.
	IndexCustomTheme *string `json:"index_custom_theme,omitempty"`
	// The product_card of the shop's active custom storefront theme. Value is null if no custom theme is used.
	ProductCardCustomTheme *string `json:"product_card_custom_theme,omitempty"`
	// The storefront banner of the shop's custom theme. Value is null if no custom theme is used.
	BannerCustomTheme map[string]interface{} `json:"banner_custom_theme,omitempty"`
	// The storefront footer of the shop's custom theme. Value is null if no custom theme is used.
	FooterCustomTheme map[string]interface{} `json:"footer_custom_theme,omitempty"`
	// The storefront background image of the shop's custom theme. Value is null if no custom theme is used.
	BackgroundImageCustomTheme map[string]interface{} `json:"background_image_custom_theme,omitempty"`
	// The storefront logo of the shop's custom theme. Value is null if no custom theme is used.
	LogoCustomTheme map[string]interface{} `json:"logo_custom_theme,omitempty"`
	// The storefront header of the shop's custom theme. Value is null if no custom theme is used.
	HeaderCustomTheme map[string]interface{} `json:"header_custom_theme,omitempty"`
	// The amount of cards to display in a row on the storefront
	CardsInRowCustomTheme *int32 `json:"cards_in_row_custom_theme,omitempty"`
	// Value is null if no custom theme is used.
	CardsAlignCustomTheme map[string]interface{} `json:"cards_align_custom_theme,omitempty"`
	// Value is null if no custom theme is used.
	GroupCardCustomTheme map[string]interface{} `json:"group_card_custom_theme,omitempty"`
	// Value is null if no custom theme is used.
	CardAnimationCustomTheme map[string]interface{} `json:"card_animation_custom_theme,omitempty"`
	// The light mode font color of the shop's custom theme. Value is null if no custom theme is used.
	LightFontColorCustomTheme *string `json:"light_font_color_custom_theme,omitempty"`
	// The dark mode font color of the shop's custom theme. Value is null if no custom theme is used.
	DarkFontColorCustomTheme *string `json:"dark_font_color_custom_theme,omitempty"`
	// The light mode accent color of the shop's custom theme. Value is null if no custom theme is used.
	LightColorCustomTheme *string `json:"light_color_custom_theme,omitempty"`
	// The dark mode accent color of the shop's custom theme. Value is null if no custom theme is used.
	DarkColorCustomTheme *string `json:"dark_color_custom_theme,omitempty"`
	// The border color of the shop's custom theme. Value is null if no custom theme is used.
	BorderColorCustomTheme *string `json:"border_color_custom_theme,omitempty"`
	// The button color of the shop's custom theme. Value is null if no custom theme is used.
	ButtonColorCustomTheme *string `json:"button_color_custom_theme,omitempty"`
	// The thin font color of the shop's custom theme. Value is null if no custom theme is used.
	ThinColorCustomTheme *string `json:"thin_color_custom_theme,omitempty"`
	// The default sorting method for the storefront's custom theme
	SortCustomTheme *string `json:"sort_custom_theme,omitempty"`
	// The helpspace client id of the helpspace account linked to the shop
	HelpspaceClientId *string `json:"helpspace_client_id,omitempty"`
	// The helpspace token of the helpspace account linked to the shop
	HelpspaceToken *string `json:"helpspace_token,omitempty"`
	// Show only youtube video for invoice/product description.
	DescriptionYoutubeOnly *int32 `json:"description_youtube_only,omitempty"`
	// Skip Default Image for Product Description.
	DescriptionSkipDefaultImage *int32 `json:"description_skip_default_image,omitempty"`
	// If enabled, the number of how many products are in stock will be removed, we will only show 'In Stock' or 'Out of Stock'.
	HideStockCounter *int32 `json:"hide_stock_counter,omitempty"`
	// The width of the storefront image
	ImageWidth *int32 `json:"image_width,omitempty"`
	// The height of the storefront image
	ImageHeight *int32 `json:"image_height,omitempty"`
	// The default sorting method for the storefront
	DefaultSort *string `json:"default_sort,omitempty"`
	// Whether or not the shop has a description image
	DescriptionImage *int32 `json:"description_image,omitempty"`
	// Hide the products sold counter on your storefront, only your average feedback will be displayed.
	HideProductsSold *int32 `json:"hide_products_sold,omitempty"`
	// Choose whether to display your business starting date from the day of your first sale or the day you have signed up to Sellix.
	ServiceDateFrom *string `json:"service_date_from,omitempty"`
	// DEPRECATED: The name of the product image with the file type
	CardsType *string `json:"cards_type,omitempty"`
	// Whether or not the shop has completed the setup wizzard
	SetupWizard *int32 `json:"setup_wizard,omitempty"`
	// Whether or not the shop has setup cryptocurrencies
	SetupCryptocurrencies *int32 `json:"setup_cryptocurrencies,omitempty"`
	// The notices for the shop
	NoticesBanner *string `json:"notices_banner,omitempty"`
	// The percentage of each payment given to affiliates
	AffiliateRevenuePercent *int32 `json:"affiliate_revenue_percent,omitempty"`
	// Timestamp for the creation of the subscription.
	CreatedAt *int32 `json:"created_at,omitempty"`
	// DEPRECATED: The name of the product image with the file type
	ImageName *string `json:"image_name,omitempty"`
	// Where the image is stored in Sellix's self-hosted CDN.
	ImageStorage *string `json:"image_storage,omitempty"`
	// The cloudflare image ID of this product, replaces image_attachment and image_name. Format https://imagedelivery.net/95QNzrEeP7RU5l5WdbyrKw/<cloudflare_image_id>/<variant_name> where variant_name can be shopItem, avatar, icon, imageAvatarFeedback, public, productImageCart.
	CloudflareImageId *string `json:"cloudflare_image_id,omitempty"`
	// Whether or not the shop is a verified marketplace
	MarketplaceVerified *int32 `json:"marketplace_verified,omitempty"`
}

// NewShopInfo instantiates a new ShopInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShopInfo() *ShopInfo {
	this := ShopInfo{}
	return &this
}

// NewShopInfoWithDefaults instantiates a new ShopInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShopInfoWithDefaults() *ShopInfo {
	this := ShopInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ShopInfo) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ShopInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ShopInfo) SetId(v int32) {
	o.Id = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ShopInfo) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ShopInfo) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *ShopInfo) SetUserId(v int32) {
	o.UserId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ShopInfo) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ShopInfo) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ShopInfo) SetType(v string) {
	o.Type = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ShopInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ShopInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ShopInfo) SetName(v string) {
	o.Name = &v
}

// GetAvatar returns the Avatar field value if set, zero value otherwise.
func (o *ShopInfo) GetAvatar() string {
	if o == nil || IsNil(o.Avatar) {
		var ret string
		return ret
	}
	return *o.Avatar
}

// GetAvatarOk returns a tuple with the Avatar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetAvatarOk() (*string, bool) {
	if o == nil || IsNil(o.Avatar) {
		return nil, false
	}
	return o.Avatar, true
}

// HasAvatar returns a boolean if a field has been set.
func (o *ShopInfo) HasAvatar() bool {
	if o != nil && !IsNil(o.Avatar) {
		return true
	}

	return false
}

// SetAvatar gets a reference to the given string and assigns it to the Avatar field.
func (o *ShopInfo) SetAvatar(v string) {
	o.Avatar = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *ShopInfo) GetCurrency() Currency {
	if o == nil || IsNil(o.Currency) {
		var ret Currency
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *ShopInfo) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given Currency and assigns it to the Currency field.
func (o *ShopInfo) SetCurrency(v Currency) {
	o.Currency = &v
}

// GetDefaultCurrency returns the DefaultCurrency field value if set, zero value otherwise.
func (o *ShopInfo) GetDefaultCurrency() Currency {
	if o == nil || IsNil(o.DefaultCurrency) {
		var ret Currency
		return ret
	}
	return *o.DefaultCurrency
}

// GetDefaultCurrencyOk returns a tuple with the DefaultCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetDefaultCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.DefaultCurrency) {
		return nil, false
	}
	return o.DefaultCurrency, true
}

// HasDefaultCurrency returns a boolean if a field has been set.
func (o *ShopInfo) HasDefaultCurrency() bool {
	if o != nil && !IsNil(o.DefaultCurrency) {
		return true
	}

	return false
}

// SetDefaultCurrency gets a reference to the given Currency and assigns it to the DefaultCurrency field.
func (o *ShopInfo) SetDefaultCurrency(v Currency) {
	o.DefaultCurrency = &v
}

// GetAvailableCurrency returns the AvailableCurrency field value if set, zero value otherwise.
func (o *ShopInfo) GetAvailableCurrency() Currency {
	if o == nil || IsNil(o.AvailableCurrency) {
		var ret Currency
		return ret
	}
	return *o.AvailableCurrency
}

// GetAvailableCurrencyOk returns a tuple with the AvailableCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetAvailableCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.AvailableCurrency) {
		return nil, false
	}
	return o.AvailableCurrency, true
}

// HasAvailableCurrency returns a boolean if a field has been set.
func (o *ShopInfo) HasAvailableCurrency() bool {
	if o != nil && !IsNil(o.AvailableCurrency) {
		return true
	}

	return false
}

// SetAvailableCurrency gets a reference to the given Currency and assigns it to the AvailableCurrency field.
func (o *ShopInfo) SetAvailableCurrency(v Currency) {
	o.AvailableCurrency = &v
}

// GetVatPercentage returns the VatPercentage field value if set, zero value otherwise.
func (o *ShopInfo) GetVatPercentage() string {
	if o == nil || IsNil(o.VatPercentage) {
		var ret string
		return ret
	}
	return *o.VatPercentage
}

// GetVatPercentageOk returns a tuple with the VatPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetVatPercentageOk() (*string, bool) {
	if o == nil || IsNil(o.VatPercentage) {
		return nil, false
	}
	return o.VatPercentage, true
}

// HasVatPercentage returns a boolean if a field has been set.
func (o *ShopInfo) HasVatPercentage() bool {
	if o != nil && !IsNil(o.VatPercentage) {
		return true
	}

	return false
}

// SetVatPercentage gets a reference to the given string and assigns it to the VatPercentage field.
func (o *ShopInfo) SetVatPercentage(v string) {
	o.VatPercentage = &v
}

// GetTaxConfiguration returns the TaxConfiguration field value if set, zero value otherwise.
func (o *ShopInfo) GetTaxConfiguration() string {
	if o == nil || IsNil(o.TaxConfiguration) {
		var ret string
		return ret
	}
	return *o.TaxConfiguration
}

// GetTaxConfigurationOk returns a tuple with the TaxConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetTaxConfigurationOk() (*string, bool) {
	if o == nil || IsNil(o.TaxConfiguration) {
		return nil, false
	}
	return o.TaxConfiguration, true
}

// HasTaxConfiguration returns a boolean if a field has been set.
func (o *ShopInfo) HasTaxConfiguration() bool {
	if o != nil && !IsNil(o.TaxConfiguration) {
		return true
	}

	return false
}

// SetTaxConfiguration gets a reference to the given string and assigns it to the TaxConfiguration field.
func (o *ShopInfo) SetTaxConfiguration(v string) {
	o.TaxConfiguration = &v
}

// GetDashboardFeature returns the DashboardFeature field value if set, zero value otherwise.
func (o *ShopInfo) GetDashboardFeature() string {
	if o == nil || IsNil(o.DashboardFeature) {
		var ret string
		return ret
	}
	return *o.DashboardFeature
}

// GetDashboardFeatureOk returns a tuple with the DashboardFeature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetDashboardFeatureOk() (*string, bool) {
	if o == nil || IsNil(o.DashboardFeature) {
		return nil, false
	}
	return o.DashboardFeature, true
}

// HasDashboardFeature returns a boolean if a field has been set.
func (o *ShopInfo) HasDashboardFeature() bool {
	if o != nil && !IsNil(o.DashboardFeature) {
		return true
	}

	return false
}

// SetDashboardFeature gets a reference to the given string and assigns it to the DashboardFeature field.
func (o *ShopInfo) SetDashboardFeature(v string) {
	o.DashboardFeature = &v
}

// GetDisplayTaxOnStorefront returns the DisplayTaxOnStorefront field value if set, zero value otherwise.
func (o *ShopInfo) GetDisplayTaxOnStorefront() int32 {
	if o == nil || IsNil(o.DisplayTaxOnStorefront) {
		var ret int32
		return ret
	}
	return *o.DisplayTaxOnStorefront
}

// GetDisplayTaxOnStorefrontOk returns a tuple with the DisplayTaxOnStorefront field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetDisplayTaxOnStorefrontOk() (*int32, bool) {
	if o == nil || IsNil(o.DisplayTaxOnStorefront) {
		return nil, false
	}
	return o.DisplayTaxOnStorefront, true
}

// HasDisplayTaxOnStorefront returns a boolean if a field has been set.
func (o *ShopInfo) HasDisplayTaxOnStorefront() bool {
	if o != nil && !IsNil(o.DisplayTaxOnStorefront) {
		return true
	}

	return false
}

// SetDisplayTaxOnStorefront gets a reference to the given int32 and assigns it to the DisplayTaxOnStorefront field.
func (o *ShopInfo) SetDisplayTaxOnStorefront(v int32) {
	o.DisplayTaxOnStorefront = &v
}

// GetDisplayTaxCustomFields returns the DisplayTaxCustomFields field value if set, zero value otherwise.
func (o *ShopInfo) GetDisplayTaxCustomFields() int32 {
	if o == nil || IsNil(o.DisplayTaxCustomFields) {
		var ret int32
		return ret
	}
	return *o.DisplayTaxCustomFields
}

// GetDisplayTaxCustomFieldsOk returns a tuple with the DisplayTaxCustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetDisplayTaxCustomFieldsOk() (*int32, bool) {
	if o == nil || IsNil(o.DisplayTaxCustomFields) {
		return nil, false
	}
	return o.DisplayTaxCustomFields, true
}

// HasDisplayTaxCustomFields returns a boolean if a field has been set.
func (o *ShopInfo) HasDisplayTaxCustomFields() bool {
	if o != nil && !IsNil(o.DisplayTaxCustomFields) {
		return true
	}

	return false
}

// SetDisplayTaxCustomFields gets a reference to the given int32 and assigns it to the DisplayTaxCustomFields field.
func (o *ShopInfo) SetDisplayTaxCustomFields(v int32) {
	o.DisplayTaxCustomFields = &v
}

// GetValidationOnlyForCompanies returns the ValidationOnlyForCompanies field value if set, zero value otherwise.
func (o *ShopInfo) GetValidationOnlyForCompanies() int32 {
	if o == nil || IsNil(o.ValidationOnlyForCompanies) {
		var ret int32
		return ret
	}
	return *o.ValidationOnlyForCompanies
}

// GetValidationOnlyForCompaniesOk returns a tuple with the ValidationOnlyForCompanies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetValidationOnlyForCompaniesOk() (*int32, bool) {
	if o == nil || IsNil(o.ValidationOnlyForCompanies) {
		return nil, false
	}
	return o.ValidationOnlyForCompanies, true
}

// HasValidationOnlyForCompanies returns a boolean if a field has been set.
func (o *ShopInfo) HasValidationOnlyForCompanies() bool {
	if o != nil && !IsNil(o.ValidationOnlyForCompanies) {
		return true
	}

	return false
}

// SetValidationOnlyForCompanies gets a reference to the given int32 and assigns it to the ValidationOnlyForCompanies field.
func (o *ShopInfo) SetValidationOnlyForCompanies(v int32) {
	o.ValidationOnlyForCompanies = &v
}

// GetValidateVatNumber returns the ValidateVatNumber field value if set, zero value otherwise.
func (o *ShopInfo) GetValidateVatNumber() int32 {
	if o == nil || IsNil(o.ValidateVatNumber) {
		var ret int32
		return ret
	}
	return *o.ValidateVatNumber
}

// GetValidateVatNumberOk returns a tuple with the ValidateVatNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetValidateVatNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.ValidateVatNumber) {
		return nil, false
	}
	return o.ValidateVatNumber, true
}

// HasValidateVatNumber returns a boolean if a field has been set.
func (o *ShopInfo) HasValidateVatNumber() bool {
	if o != nil && !IsNil(o.ValidateVatNumber) {
		return true
	}

	return false
}

// SetValidateVatNumber gets a reference to the given int32 and assigns it to the ValidateVatNumber field.
func (o *ShopInfo) SetValidateVatNumber(v int32) {
	o.ValidateVatNumber = &v
}

// GetPricesTaxInclusive returns the PricesTaxInclusive field value if set, zero value otherwise.
func (o *ShopInfo) GetPricesTaxInclusive() int32 {
	if o == nil || IsNil(o.PricesTaxInclusive) {
		var ret int32
		return ret
	}
	return *o.PricesTaxInclusive
}

// GetPricesTaxInclusiveOk returns a tuple with the PricesTaxInclusive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetPricesTaxInclusiveOk() (*int32, bool) {
	if o == nil || IsNil(o.PricesTaxInclusive) {
		return nil, false
	}
	return o.PricesTaxInclusive, true
}

// HasPricesTaxInclusive returns a boolean if a field has been set.
func (o *ShopInfo) HasPricesTaxInclusive() bool {
	if o != nil && !IsNil(o.PricesTaxInclusive) {
		return true
	}

	return false
}

// SetPricesTaxInclusive gets a reference to the given int32 and assigns it to the PricesTaxInclusive field.
func (o *ShopInfo) SetPricesTaxInclusive(v int32) {
	o.PricesTaxInclusive = &v
}

// GetNotifyTrialEnding returns the NotifyTrialEnding field value if set, zero value otherwise.
func (o *ShopInfo) GetNotifyTrialEnding() int32 {
	if o == nil || IsNil(o.NotifyTrialEnding) {
		var ret int32
		return ret
	}
	return *o.NotifyTrialEnding
}

// GetNotifyTrialEndingOk returns a tuple with the NotifyTrialEnding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetNotifyTrialEndingOk() (*int32, bool) {
	if o == nil || IsNil(o.NotifyTrialEnding) {
		return nil, false
	}
	return o.NotifyTrialEnding, true
}

// HasNotifyTrialEnding returns a boolean if a field has been set.
func (o *ShopInfo) HasNotifyTrialEnding() bool {
	if o != nil && !IsNil(o.NotifyTrialEnding) {
		return true
	}

	return false
}

// SetNotifyTrialEnding gets a reference to the given int32 and assigns it to the NotifyTrialEnding field.
func (o *ShopInfo) SetNotifyTrialEnding(v int32) {
	o.NotifyTrialEnding = &v
}

// GetNotifyUpcomingRenewal returns the NotifyUpcomingRenewal field value if set, zero value otherwise.
func (o *ShopInfo) GetNotifyUpcomingRenewal() int32 {
	if o == nil || IsNil(o.NotifyUpcomingRenewal) {
		var ret int32
		return ret
	}
	return *o.NotifyUpcomingRenewal
}

// GetNotifyUpcomingRenewalOk returns a tuple with the NotifyUpcomingRenewal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetNotifyUpcomingRenewalOk() (*int32, bool) {
	if o == nil || IsNil(o.NotifyUpcomingRenewal) {
		return nil, false
	}
	return o.NotifyUpcomingRenewal, true
}

// HasNotifyUpcomingRenewal returns a boolean if a field has been set.
func (o *ShopInfo) HasNotifyUpcomingRenewal() bool {
	if o != nil && !IsNil(o.NotifyUpcomingRenewal) {
		return true
	}

	return false
}

// SetNotifyUpcomingRenewal gets a reference to the given int32 and assigns it to the NotifyUpcomingRenewal field.
func (o *ShopInfo) SetNotifyUpcomingRenewal(v int32) {
	o.NotifyUpcomingRenewal = &v
}

// GetNotifySubscriptionRenewalFailure returns the NotifySubscriptionRenewalFailure field value if set, zero value otherwise.
func (o *ShopInfo) GetNotifySubscriptionRenewalFailure() int32 {
	if o == nil || IsNil(o.NotifySubscriptionRenewalFailure) {
		var ret int32
		return ret
	}
	return *o.NotifySubscriptionRenewalFailure
}

// GetNotifySubscriptionRenewalFailureOk returns a tuple with the NotifySubscriptionRenewalFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetNotifySubscriptionRenewalFailureOk() (*int32, bool) {
	if o == nil || IsNil(o.NotifySubscriptionRenewalFailure) {
		return nil, false
	}
	return o.NotifySubscriptionRenewalFailure, true
}

// HasNotifySubscriptionRenewalFailure returns a boolean if a field has been set.
func (o *ShopInfo) HasNotifySubscriptionRenewalFailure() bool {
	if o != nil && !IsNil(o.NotifySubscriptionRenewalFailure) {
		return true
	}

	return false
}

// SetNotifySubscriptionRenewalFailure gets a reference to the given int32 and assigns it to the NotifySubscriptionRenewalFailure field.
func (o *ShopInfo) SetNotifySubscriptionRenewalFailure(v int32) {
	o.NotifySubscriptionRenewalFailure = &v
}

// GetOrderEmails returns the OrderEmails field value if set, zero value otherwise.
func (o *ShopInfo) GetOrderEmails() int32 {
	if o == nil || IsNil(o.OrderEmails) {
		var ret int32
		return ret
	}
	return *o.OrderEmails
}

// GetOrderEmailsOk returns a tuple with the OrderEmails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetOrderEmailsOk() (*int32, bool) {
	if o == nil || IsNil(o.OrderEmails) {
		return nil, false
	}
	return o.OrderEmails, true
}

// HasOrderEmails returns a boolean if a field has been set.
func (o *ShopInfo) HasOrderEmails() bool {
	if o != nil && !IsNil(o.OrderEmails) {
		return true
	}

	return false
}

// SetOrderEmails gets a reference to the given int32 and assigns it to the OrderEmails field.
func (o *ShopInfo) SetOrderEmails(v int32) {
	o.OrderEmails = &v
}

// GetSubscriptionGracePeriod returns the SubscriptionGracePeriod field value if set, zero value otherwise.
func (o *ShopInfo) GetSubscriptionGracePeriod() int32 {
	if o == nil || IsNil(o.SubscriptionGracePeriod) {
		var ret int32
		return ret
	}
	return *o.SubscriptionGracePeriod
}

// GetSubscriptionGracePeriodOk returns a tuple with the SubscriptionGracePeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetSubscriptionGracePeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.SubscriptionGracePeriod) {
		return nil, false
	}
	return o.SubscriptionGracePeriod, true
}

// HasSubscriptionGracePeriod returns a boolean if a field has been set.
func (o *ShopInfo) HasSubscriptionGracePeriod() bool {
	if o != nil && !IsNil(o.SubscriptionGracePeriod) {
		return true
	}

	return false
}

// SetSubscriptionGracePeriod gets a reference to the given int32 and assigns it to the SubscriptionGracePeriod field.
func (o *ShopInfo) SetSubscriptionGracePeriod(v int32) {
	o.SubscriptionGracePeriod = &v
}

// GetPaypalCreditCard returns the PaypalCreditCard field value if set, zero value otherwise.
func (o *ShopInfo) GetPaypalCreditCard() int32 {
	if o == nil || IsNil(o.PaypalCreditCard) {
		var ret int32
		return ret
	}
	return *o.PaypalCreditCard
}

// GetPaypalCreditCardOk returns a tuple with the PaypalCreditCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetPaypalCreditCardOk() (*int32, bool) {
	if o == nil || IsNil(o.PaypalCreditCard) {
		return nil, false
	}
	return o.PaypalCreditCard, true
}

// HasPaypalCreditCard returns a boolean if a field has been set.
func (o *ShopInfo) HasPaypalCreditCard() bool {
	if o != nil && !IsNil(o.PaypalCreditCard) {
		return true
	}

	return false
}

// SetPaypalCreditCard gets a reference to the given int32 and assigns it to the PaypalCreditCard field.
func (o *ShopInfo) SetPaypalCreditCard(v int32) {
	o.PaypalCreditCard = &v
}

// GetForcePaypalEmailDelivery returns the ForcePaypalEmailDelivery field value if set, zero value otherwise.
func (o *ShopInfo) GetForcePaypalEmailDelivery() int32 {
	if o == nil || IsNil(o.ForcePaypalEmailDelivery) {
		var ret int32
		return ret
	}
	return *o.ForcePaypalEmailDelivery
}

// GetForcePaypalEmailDeliveryOk returns a tuple with the ForcePaypalEmailDelivery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetForcePaypalEmailDeliveryOk() (*int32, bool) {
	if o == nil || IsNil(o.ForcePaypalEmailDelivery) {
		return nil, false
	}
	return o.ForcePaypalEmailDelivery, true
}

// HasForcePaypalEmailDelivery returns a boolean if a field has been set.
func (o *ShopInfo) HasForcePaypalEmailDelivery() bool {
	if o != nil && !IsNil(o.ForcePaypalEmailDelivery) {
		return true
	}

	return false
}

// SetForcePaypalEmailDelivery gets a reference to the given int32 and assigns it to the ForcePaypalEmailDelivery field.
func (o *ShopInfo) SetForcePaypalEmailDelivery(v int32) {
	o.ForcePaypalEmailDelivery = &v
}

// GetPaypalMerchantId returns the PaypalMerchantId field value if set, zero value otherwise.
func (o *ShopInfo) GetPaypalMerchantId() string {
	if o == nil || IsNil(o.PaypalMerchantId) {
		var ret string
		return ret
	}
	return *o.PaypalMerchantId
}

// GetPaypalMerchantIdOk returns a tuple with the PaypalMerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetPaypalMerchantIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaypalMerchantId) {
		return nil, false
	}
	return o.PaypalMerchantId, true
}

// HasPaypalMerchantId returns a boolean if a field has been set.
func (o *ShopInfo) HasPaypalMerchantId() bool {
	if o != nil && !IsNil(o.PaypalMerchantId) {
		return true
	}

	return false
}

// SetPaypalMerchantId gets a reference to the given string and assigns it to the PaypalMerchantId field.
func (o *ShopInfo) SetPaypalMerchantId(v string) {
	o.PaypalMerchantId = &v
}

// GetBinanceId returns the BinanceId field value if set, zero value otherwise.
func (o *ShopInfo) GetBinanceId() string {
	if o == nil || IsNil(o.BinanceId) {
		var ret string
		return ret
	}
	return *o.BinanceId
}

// GetBinanceIdOk returns a tuple with the BinanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetBinanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.BinanceId) {
		return nil, false
	}
	return o.BinanceId, true
}

// HasBinanceId returns a boolean if a field has been set.
func (o *ShopInfo) HasBinanceId() bool {
	if o != nil && !IsNil(o.BinanceId) {
		return true
	}

	return false
}

// SetBinanceId gets a reference to the given string and assigns it to the BinanceId field.
func (o *ShopInfo) SetBinanceId(v string) {
	o.BinanceId = &v
}

// GetWalletconnectId returns the WalletconnectId field value if set, zero value otherwise.
func (o *ShopInfo) GetWalletconnectId() string {
	if o == nil || IsNil(o.WalletconnectId) {
		var ret string
		return ret
	}
	return *o.WalletconnectId
}

// GetWalletconnectIdOk returns a tuple with the WalletconnectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetWalletconnectIdOk() (*string, bool) {
	if o == nil || IsNil(o.WalletconnectId) {
		return nil, false
	}
	return o.WalletconnectId, true
}

// HasWalletconnectId returns a boolean if a field has been set.
func (o *ShopInfo) HasWalletconnectId() bool {
	if o != nil && !IsNil(o.WalletconnectId) {
		return true
	}

	return false
}

// SetWalletconnectId gets a reference to the given string and assigns it to the WalletconnectId field.
func (o *ShopInfo) SetWalletconnectId(v string) {
	o.WalletconnectId = &v
}

// GetNonCustodialWallet returns the NonCustodialWallet field value if set, zero value otherwise.
func (o *ShopInfo) GetNonCustodialWallet() int32 {
	if o == nil || IsNil(o.NonCustodialWallet) {
		var ret int32
		return ret
	}
	return *o.NonCustodialWallet
}

// GetNonCustodialWalletOk returns a tuple with the NonCustodialWallet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetNonCustodialWalletOk() (*int32, bool) {
	if o == nil || IsNil(o.NonCustodialWallet) {
		return nil, false
	}
	return o.NonCustodialWallet, true
}

// HasNonCustodialWallet returns a boolean if a field has been set.
func (o *ShopInfo) HasNonCustodialWallet() bool {
	if o != nil && !IsNil(o.NonCustodialWallet) {
		return true
	}

	return false
}

// SetNonCustodialWallet gets a reference to the given int32 and assigns it to the NonCustodialWallet field.
func (o *ShopInfo) SetNonCustodialWallet(v int32) {
	o.NonCustodialWallet = &v
}

// GetDarkMode returns the DarkMode field value if set, zero value otherwise.
func (o *ShopInfo) GetDarkMode() int32 {
	if o == nil || IsNil(o.DarkMode) {
		var ret int32
		return ret
	}
	return *o.DarkMode
}

// GetDarkModeOk returns a tuple with the DarkMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetDarkModeOk() (*int32, bool) {
	if o == nil || IsNil(o.DarkMode) {
		return nil, false
	}
	return o.DarkMode, true
}

// HasDarkMode returns a boolean if a field has been set.
func (o *ShopInfo) HasDarkMode() bool {
	if o != nil && !IsNil(o.DarkMode) {
		return true
	}

	return false
}

// SetDarkMode gets a reference to the given int32 and assigns it to the DarkMode field.
func (o *ShopInfo) SetDarkMode(v int32) {
	o.DarkMode = &v
}

// GetDiscordLink returns the DiscordLink field value if set, zero value otherwise.
func (o *ShopInfo) GetDiscordLink() string {
	if o == nil || IsNil(o.DiscordLink) {
		var ret string
		return ret
	}
	return *o.DiscordLink
}

// GetDiscordLinkOk returns a tuple with the DiscordLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetDiscordLinkOk() (*string, bool) {
	if o == nil || IsNil(o.DiscordLink) {
		return nil, false
	}
	return o.DiscordLink, true
}

// HasDiscordLink returns a boolean if a field has been set.
func (o *ShopInfo) HasDiscordLink() bool {
	if o != nil && !IsNil(o.DiscordLink) {
		return true
	}

	return false
}

// SetDiscordLink gets a reference to the given string and assigns it to the DiscordLink field.
func (o *ShopInfo) SetDiscordLink(v string) {
	o.DiscordLink = &v
}

// GetTwitterLink returns the TwitterLink field value if set, zero value otherwise.
func (o *ShopInfo) GetTwitterLink() string {
	if o == nil || IsNil(o.TwitterLink) {
		var ret string
		return ret
	}
	return *o.TwitterLink
}

// GetTwitterLinkOk returns a tuple with the TwitterLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetTwitterLinkOk() (*string, bool) {
	if o == nil || IsNil(o.TwitterLink) {
		return nil, false
	}
	return o.TwitterLink, true
}

// HasTwitterLink returns a boolean if a field has been set.
func (o *ShopInfo) HasTwitterLink() bool {
	if o != nil && !IsNil(o.TwitterLink) {
		return true
	}

	return false
}

// SetTwitterLink gets a reference to the given string and assigns it to the TwitterLink field.
func (o *ShopInfo) SetTwitterLink(v string) {
	o.TwitterLink = &v
}

// GetInstagramLink returns the InstagramLink field value if set, zero value otherwise.
func (o *ShopInfo) GetInstagramLink() string {
	if o == nil || IsNil(o.InstagramLink) {
		var ret string
		return ret
	}
	return *o.InstagramLink
}

// GetInstagramLinkOk returns a tuple with the InstagramLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetInstagramLinkOk() (*string, bool) {
	if o == nil || IsNil(o.InstagramLink) {
		return nil, false
	}
	return o.InstagramLink, true
}

// HasInstagramLink returns a boolean if a field has been set.
func (o *ShopInfo) HasInstagramLink() bool {
	if o != nil && !IsNil(o.InstagramLink) {
		return true
	}

	return false
}

// SetInstagramLink gets a reference to the given string and assigns it to the InstagramLink field.
func (o *ShopInfo) SetInstagramLink(v string) {
	o.InstagramLink = &v
}

// GetFacebookLink returns the FacebookLink field value if set, zero value otherwise.
func (o *ShopInfo) GetFacebookLink() string {
	if o == nil || IsNil(o.FacebookLink) {
		var ret string
		return ret
	}
	return *o.FacebookLink
}

// GetFacebookLinkOk returns a tuple with the FacebookLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetFacebookLinkOk() (*string, bool) {
	if o == nil || IsNil(o.FacebookLink) {
		return nil, false
	}
	return o.FacebookLink, true
}

// HasFacebookLink returns a boolean if a field has been set.
func (o *ShopInfo) HasFacebookLink() bool {
	if o != nil && !IsNil(o.FacebookLink) {
		return true
	}

	return false
}

// SetFacebookLink gets a reference to the given string and assigns it to the FacebookLink field.
func (o *ShopInfo) SetFacebookLink(v string) {
	o.FacebookLink = &v
}

// GetTelegramLink returns the TelegramLink field value if set, zero value otherwise.
func (o *ShopInfo) GetTelegramLink() string {
	if o == nil || IsNil(o.TelegramLink) {
		var ret string
		return ret
	}
	return *o.TelegramLink
}

// GetTelegramLinkOk returns a tuple with the TelegramLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetTelegramLinkOk() (*string, bool) {
	if o == nil || IsNil(o.TelegramLink) {
		return nil, false
	}
	return o.TelegramLink, true
}

// HasTelegramLink returns a boolean if a field has been set.
func (o *ShopInfo) HasTelegramLink() bool {
	if o != nil && !IsNil(o.TelegramLink) {
		return true
	}

	return false
}

// SetTelegramLink gets a reference to the given string and assigns it to the TelegramLink field.
func (o *ShopInfo) SetTelegramLink(v string) {
	o.TelegramLink = &v
}

// GetYoutubeLink returns the YoutubeLink field value if set, zero value otherwise.
func (o *ShopInfo) GetYoutubeLink() string {
	if o == nil || IsNil(o.YoutubeLink) {
		var ret string
		return ret
	}
	return *o.YoutubeLink
}

// GetYoutubeLinkOk returns a tuple with the YoutubeLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetYoutubeLinkOk() (*string, bool) {
	if o == nil || IsNil(o.YoutubeLink) {
		return nil, false
	}
	return o.YoutubeLink, true
}

// HasYoutubeLink returns a boolean if a field has been set.
func (o *ShopInfo) HasYoutubeLink() bool {
	if o != nil && !IsNil(o.YoutubeLink) {
		return true
	}

	return false
}

// SetYoutubeLink gets a reference to the given string and assigns it to the YoutubeLink field.
func (o *ShopInfo) SetYoutubeLink(v string) {
	o.YoutubeLink = &v
}

// GetRedditLink returns the RedditLink field value if set, zero value otherwise.
func (o *ShopInfo) GetRedditLink() string {
	if o == nil || IsNil(o.RedditLink) {
		var ret string
		return ret
	}
	return *o.RedditLink
}

// GetRedditLinkOk returns a tuple with the RedditLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetRedditLinkOk() (*string, bool) {
	if o == nil || IsNil(o.RedditLink) {
		return nil, false
	}
	return o.RedditLink, true
}

// HasRedditLink returns a boolean if a field has been set.
func (o *ShopInfo) HasRedditLink() bool {
	if o != nil && !IsNil(o.RedditLink) {
		return true
	}

	return false
}

// SetRedditLink gets a reference to the given string and assigns it to the RedditLink field.
func (o *ShopInfo) SetRedditLink(v string) {
	o.RedditLink = &v
}

// GetTiktokLink returns the TiktokLink field value if set, zero value otherwise.
func (o *ShopInfo) GetTiktokLink() string {
	if o == nil || IsNil(o.TiktokLink) {
		var ret string
		return ret
	}
	return *o.TiktokLink
}

// GetTiktokLinkOk returns a tuple with the TiktokLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetTiktokLinkOk() (*string, bool) {
	if o == nil || IsNil(o.TiktokLink) {
		return nil, false
	}
	return o.TiktokLink, true
}

// HasTiktokLink returns a boolean if a field has been set.
func (o *ShopInfo) HasTiktokLink() bool {
	if o != nil && !IsNil(o.TiktokLink) {
		return true
	}

	return false
}

// SetTiktokLink gets a reference to the given string and assigns it to the TiktokLink field.
func (o *ShopInfo) SetTiktokLink(v string) {
	o.TiktokLink = &v
}

// GetSearchEnabled returns the SearchEnabled field value if set, zero value otherwise.
func (o *ShopInfo) GetSearchEnabled() int32 {
	if o == nil || IsNil(o.SearchEnabled) {
		var ret int32
		return ret
	}
	return *o.SearchEnabled
}

// GetSearchEnabledOk returns a tuple with the SearchEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetSearchEnabledOk() (*int32, bool) {
	if o == nil || IsNil(o.SearchEnabled) {
		return nil, false
	}
	return o.SearchEnabled, true
}

// HasSearchEnabled returns a boolean if a field has been set.
func (o *ShopInfo) HasSearchEnabled() bool {
	if o != nil && !IsNil(o.SearchEnabled) {
		return true
	}

	return false
}

// SetSearchEnabled gets a reference to the given int32 and assigns it to the SearchEnabled field.
func (o *ShopInfo) SetSearchEnabled(v int32) {
	o.SearchEnabled = &v
}

// GetSortEnabled returns the SortEnabled field value if set, zero value otherwise.
func (o *ShopInfo) GetSortEnabled() int32 {
	if o == nil || IsNil(o.SortEnabled) {
		var ret int32
		return ret
	}
	return *o.SortEnabled
}

// GetSortEnabledOk returns a tuple with the SortEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetSortEnabledOk() (*int32, bool) {
	if o == nil || IsNil(o.SortEnabled) {
		return nil, false
	}
	return o.SortEnabled, true
}

// HasSortEnabled returns a boolean if a field has been set.
func (o *ShopInfo) HasSortEnabled() bool {
	if o != nil && !IsNil(o.SortEnabled) {
		return true
	}

	return false
}

// SetSortEnabled gets a reference to the given int32 and assigns it to the SortEnabled field.
func (o *ShopInfo) SetSortEnabled(v int32) {
	o.SortEnabled = &v
}

// GetCartEnabled returns the CartEnabled field value if set, zero value otherwise.
func (o *ShopInfo) GetCartEnabled() int32 {
	if o == nil || IsNil(o.CartEnabled) {
		var ret int32
		return ret
	}
	return *o.CartEnabled
}

// GetCartEnabledOk returns a tuple with the CartEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetCartEnabledOk() (*int32, bool) {
	if o == nil || IsNil(o.CartEnabled) {
		return nil, false
	}
	return o.CartEnabled, true
}

// HasCartEnabled returns a boolean if a field has been set.
func (o *ShopInfo) HasCartEnabled() bool {
	if o != nil && !IsNil(o.CartEnabled) {
		return true
	}

	return false
}

// SetCartEnabled gets a reference to the given int32 and assigns it to the CartEnabled field.
func (o *ShopInfo) SetCartEnabled(v int32) {
	o.CartEnabled = &v
}

// GetCartMaximumCheckout returns the CartMaximumCheckout field value if set, zero value otherwise.
func (o *ShopInfo) GetCartMaximumCheckout() string {
	if o == nil || IsNil(o.CartMaximumCheckout) {
		var ret string
		return ret
	}
	return *o.CartMaximumCheckout
}

// GetCartMaximumCheckoutOk returns a tuple with the CartMaximumCheckout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetCartMaximumCheckoutOk() (*string, bool) {
	if o == nil || IsNil(o.CartMaximumCheckout) {
		return nil, false
	}
	return o.CartMaximumCheckout, true
}

// HasCartMaximumCheckout returns a boolean if a field has been set.
func (o *ShopInfo) HasCartMaximumCheckout() bool {
	if o != nil && !IsNil(o.CartMaximumCheckout) {
		return true
	}

	return false
}

// SetCartMaximumCheckout gets a reference to the given string and assigns it to the CartMaximumCheckout field.
func (o *ShopInfo) SetCartMaximumCheckout(v string) {
	o.CartMaximumCheckout = &v
}

// GetHideOutOfStock returns the HideOutOfStock field value if set, zero value otherwise.
func (o *ShopInfo) GetHideOutOfStock() int32 {
	if o == nil || IsNil(o.HideOutOfStock) {
		var ret int32
		return ret
	}
	return *o.HideOutOfStock
}

// GetHideOutOfStockOk returns a tuple with the HideOutOfStock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetHideOutOfStockOk() (*int32, bool) {
	if o == nil || IsNil(o.HideOutOfStock) {
		return nil, false
	}
	return o.HideOutOfStock, true
}

// HasHideOutOfStock returns a boolean if a field has been set.
func (o *ShopInfo) HasHideOutOfStock() bool {
	if o != nil && !IsNil(o.HideOutOfStock) {
		return true
	}

	return false
}

// SetHideOutOfStock gets a reference to the given int32 and assigns it to the HideOutOfStock field.
func (o *ShopInfo) SetHideOutOfStock(v int32) {
	o.HideOutOfStock = &v
}

// GetGoogleAnalyticsTrackingId returns the GoogleAnalyticsTrackingId field value if set, zero value otherwise.
func (o *ShopInfo) GetGoogleAnalyticsTrackingId() string {
	if o == nil || IsNil(o.GoogleAnalyticsTrackingId) {
		var ret string
		return ret
	}
	return *o.GoogleAnalyticsTrackingId
}

// GetGoogleAnalyticsTrackingIdOk returns a tuple with the GoogleAnalyticsTrackingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetGoogleAnalyticsTrackingIdOk() (*string, bool) {
	if o == nil || IsNil(o.GoogleAnalyticsTrackingId) {
		return nil, false
	}
	return o.GoogleAnalyticsTrackingId, true
}

// HasGoogleAnalyticsTrackingId returns a boolean if a field has been set.
func (o *ShopInfo) HasGoogleAnalyticsTrackingId() bool {
	if o != nil && !IsNil(o.GoogleAnalyticsTrackingId) {
		return true
	}

	return false
}

// SetGoogleAnalyticsTrackingId gets a reference to the given string and assigns it to the GoogleAnalyticsTrackingId field.
func (o *ShopInfo) SetGoogleAnalyticsTrackingId(v string) {
	o.GoogleAnalyticsTrackingId = &v
}

// GetCrispWebsiteId returns the CrispWebsiteId field value if set, zero value otherwise.
func (o *ShopInfo) GetCrispWebsiteId() string {
	if o == nil || IsNil(o.CrispWebsiteId) {
		var ret string
		return ret
	}
	return *o.CrispWebsiteId
}

// GetCrispWebsiteIdOk returns a tuple with the CrispWebsiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetCrispWebsiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.CrispWebsiteId) {
		return nil, false
	}
	return o.CrispWebsiteId, true
}

// HasCrispWebsiteId returns a boolean if a field has been set.
func (o *ShopInfo) HasCrispWebsiteId() bool {
	if o != nil && !IsNil(o.CrispWebsiteId) {
		return true
	}

	return false
}

// SetCrispWebsiteId gets a reference to the given string and assigns it to the CrispWebsiteId field.
func (o *ShopInfo) SetCrispWebsiteId(v string) {
	o.CrispWebsiteId = &v
}

// GetCenterProductTitles returns the CenterProductTitles field value if set, zero value otherwise.
func (o *ShopInfo) GetCenterProductTitles() int32 {
	if o == nil || IsNil(o.CenterProductTitles) {
		var ret int32
		return ret
	}
	return *o.CenterProductTitles
}

// GetCenterProductTitlesOk returns a tuple with the CenterProductTitles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetCenterProductTitlesOk() (*int32, bool) {
	if o == nil || IsNil(o.CenterProductTitles) {
		return nil, false
	}
	return o.CenterProductTitles, true
}

// HasCenterProductTitles returns a boolean if a field has been set.
func (o *ShopInfo) HasCenterProductTitles() bool {
	if o != nil && !IsNil(o.CenterProductTitles) {
		return true
	}

	return false
}

// SetCenterProductTitles gets a reference to the given int32 and assigns it to the CenterProductTitles field.
func (o *ShopInfo) SetCenterProductTitles(v int32) {
	o.CenterProductTitles = &v
}

// GetCenterGroupTitles returns the CenterGroupTitles field value if set, zero value otherwise.
func (o *ShopInfo) GetCenterGroupTitles() int32 {
	if o == nil || IsNil(o.CenterGroupTitles) {
		var ret int32
		return ret
	}
	return *o.CenterGroupTitles
}

// GetCenterGroupTitlesOk returns a tuple with the CenterGroupTitles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetCenterGroupTitlesOk() (*int32, bool) {
	if o == nil || IsNil(o.CenterGroupTitles) {
		return nil, false
	}
	return o.CenterGroupTitles, true
}

// HasCenterGroupTitles returns a boolean if a field has been set.
func (o *ShopInfo) HasCenterGroupTitles() bool {
	if o != nil && !IsNil(o.CenterGroupTitles) {
		return true
	}

	return false
}

// SetCenterGroupTitles gets a reference to the given int32 and assigns it to the CenterGroupTitles field.
func (o *ShopInfo) SetCenterGroupTitles(v int32) {
	o.CenterGroupTitles = &v
}

// GetPopupMessage returns the PopupMessage field value if set, zero value otherwise.
func (o *ShopInfo) GetPopupMessage() string {
	if o == nil || IsNil(o.PopupMessage) {
		var ret string
		return ret
	}
	return *o.PopupMessage
}

// GetPopupMessageOk returns a tuple with the PopupMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetPopupMessageOk() (*string, bool) {
	if o == nil || IsNil(o.PopupMessage) {
		return nil, false
	}
	return o.PopupMessage, true
}

// HasPopupMessage returns a boolean if a field has been set.
func (o *ShopInfo) HasPopupMessage() bool {
	if o != nil && !IsNil(o.PopupMessage) {
		return true
	}

	return false
}

// SetPopupMessage gets a reference to the given string and assigns it to the PopupMessage field.
func (o *ShopInfo) SetPopupMessage(v string) {
	o.PopupMessage = &v
}

// GetVerified returns the Verified field value if set, zero value otherwise.
func (o *ShopInfo) GetVerified() int32 {
	if o == nil || IsNil(o.Verified) {
		var ret int32
		return ret
	}
	return *o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetVerifiedOk() (*int32, bool) {
	if o == nil || IsNil(o.Verified) {
		return nil, false
	}
	return o.Verified, true
}

// HasVerified returns a boolean if a field has been set.
func (o *ShopInfo) HasVerified() bool {
	if o != nil && !IsNil(o.Verified) {
		return true
	}

	return false
}

// SetVerified gets a reference to the given int32 and assigns it to the Verified field.
func (o *ShopInfo) SetVerified(v int32) {
	o.Verified = &v
}

// GetOnHold returns the OnHold field value if set, zero value otherwise.
func (o *ShopInfo) GetOnHold() int32 {
	if o == nil || IsNil(o.OnHold) {
		var ret int32
		return ret
	}
	return *o.OnHold
}

// GetOnHoldOk returns a tuple with the OnHold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetOnHoldOk() (*int32, bool) {
	if o == nil || IsNil(o.OnHold) {
		return nil, false
	}
	return o.OnHold, true
}

// HasOnHold returns a boolean if a field has been set.
func (o *ShopInfo) HasOnHold() bool {
	if o != nil && !IsNil(o.OnHold) {
		return true
	}

	return false
}

// SetOnHold gets a reference to the given int32 and assigns it to the OnHold field.
func (o *ShopInfo) SetOnHold(v int32) {
	o.OnHold = &v
}

// GetTermsOfService returns the TermsOfService field value if set, zero value otherwise.
func (o *ShopInfo) GetTermsOfService() string {
	if o == nil || IsNil(o.TermsOfService) {
		var ret string
		return ret
	}
	return *o.TermsOfService
}

// GetTermsOfServiceOk returns a tuple with the TermsOfService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetTermsOfServiceOk() (*string, bool) {
	if o == nil || IsNil(o.TermsOfService) {
		return nil, false
	}
	return o.TermsOfService, true
}

// HasTermsOfService returns a boolean if a field has been set.
func (o *ShopInfo) HasTermsOfService() bool {
	if o != nil && !IsNil(o.TermsOfService) {
		return true
	}

	return false
}

// SetTermsOfService gets a reference to the given string and assigns it to the TermsOfService field.
func (o *ShopInfo) SetTermsOfService(v string) {
	o.TermsOfService = &v
}

// GetPrimaryColorCustomTheme returns the PrimaryColorCustomTheme field value if set, zero value otherwise.
func (o *ShopInfo) GetPrimaryColorCustomTheme() string {
	if o == nil || IsNil(o.PrimaryColorCustomTheme) {
		var ret string
		return ret
	}
	return *o.PrimaryColorCustomTheme
}

// GetPrimaryColorCustomThemeOk returns a tuple with the PrimaryColorCustomTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetPrimaryColorCustomThemeOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryColorCustomTheme) {
		return nil, false
	}
	return o.PrimaryColorCustomTheme, true
}

// HasPrimaryColorCustomTheme returns a boolean if a field has been set.
func (o *ShopInfo) HasPrimaryColorCustomTheme() bool {
	if o != nil && !IsNil(o.PrimaryColorCustomTheme) {
		return true
	}

	return false
}

// SetPrimaryColorCustomTheme gets a reference to the given string and assigns it to the PrimaryColorCustomTheme field.
func (o *ShopInfo) SetPrimaryColorCustomTheme(v string) {
	o.PrimaryColorCustomTheme = &v
}

// GetSecondaryColorCustomTheme returns the SecondaryColorCustomTheme field value if set, zero value otherwise.
func (o *ShopInfo) GetSecondaryColorCustomTheme() string {
	if o == nil || IsNil(o.SecondaryColorCustomTheme) {
		var ret string
		return ret
	}
	return *o.SecondaryColorCustomTheme
}

// GetSecondaryColorCustomThemeOk returns a tuple with the SecondaryColorCustomTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetSecondaryColorCustomThemeOk() (*string, bool) {
	if o == nil || IsNil(o.SecondaryColorCustomTheme) {
		return nil, false
	}
	return o.SecondaryColorCustomTheme, true
}

// HasSecondaryColorCustomTheme returns a boolean if a field has been set.
func (o *ShopInfo) HasSecondaryColorCustomTheme() bool {
	if o != nil && !IsNil(o.SecondaryColorCustomTheme) {
		return true
	}

	return false
}

// SetSecondaryColorCustomTheme gets a reference to the given string and assigns it to the SecondaryColorCustomTheme field.
func (o *ShopInfo) SetSecondaryColorCustomTheme(v string) {
	o.SecondaryColorCustomTheme = &v
}

// GetPrimaryFontColorCustomTheme returns the PrimaryFontColorCustomTheme field value if set, zero value otherwise.
func (o *ShopInfo) GetPrimaryFontColorCustomTheme() string {
	if o == nil || IsNil(o.PrimaryFontColorCustomTheme) {
		var ret string
		return ret
	}
	return *o.PrimaryFontColorCustomTheme
}

// GetPrimaryFontColorCustomThemeOk returns a tuple with the PrimaryFontColorCustomTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetPrimaryFontColorCustomThemeOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryFontColorCustomTheme) {
		return nil, false
	}
	return o.PrimaryFontColorCustomTheme, true
}

// HasPrimaryFontColorCustomTheme returns a boolean if a field has been set.
func (o *ShopInfo) HasPrimaryFontColorCustomTheme() bool {
	if o != nil && !IsNil(o.PrimaryFontColorCustomTheme) {
		return true
	}

	return false
}

// SetPrimaryFontColorCustomTheme gets a reference to the given string and assigns it to the PrimaryFontColorCustomTheme field.
func (o *ShopInfo) SetPrimaryFontColorCustomTheme(v string) {
	o.PrimaryFontColorCustomTheme = &v
}

// GetSecondaryFontColorCustomTheme returns the SecondaryFontColorCustomTheme field value if set, zero value otherwise.
func (o *ShopInfo) GetSecondaryFontColorCustomTheme() string {
	if o == nil || IsNil(o.SecondaryFontColorCustomTheme) {
		var ret string
		return ret
	}
	return *o.SecondaryFontColorCustomTheme
}

// GetSecondaryFontColorCustomThemeOk returns a tuple with the SecondaryFontColorCustomTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetSecondaryFontColorCustomThemeOk() (*string, bool) {
	if o == nil || IsNil(o.SecondaryFontColorCustomTheme) {
		return nil, false
	}
	return o.SecondaryFontColorCustomTheme, true
}

// HasSecondaryFontColorCustomTheme returns a boolean if a field has been set.
func (o *ShopInfo) HasSecondaryFontColorCustomTheme() bool {
	if o != nil && !IsNil(o.SecondaryFontColorCustomTheme) {
		return true
	}

	return false
}

// SetSecondaryFontColorCustomTheme gets a reference to the given string and assigns it to the SecondaryFontColorCustomTheme field.
func (o *ShopInfo) SetSecondaryFontColorCustomTheme(v string) {
	o.SecondaryFontColorCustomTheme = &v
}

// GetCustomEmbed returns the CustomEmbed field value if set, zero value otherwise.
func (o *ShopInfo) GetCustomEmbed() int32 {
	if o == nil || IsNil(o.CustomEmbed) {
		var ret int32
		return ret
	}
	return *o.CustomEmbed
}

// GetCustomEmbedOk returns a tuple with the CustomEmbed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetCustomEmbedOk() (*int32, bool) {
	if o == nil || IsNil(o.CustomEmbed) {
		return nil, false
	}
	return o.CustomEmbed, true
}

// HasCustomEmbed returns a boolean if a field has been set.
func (o *ShopInfo) HasCustomEmbed() bool {
	if o != nil && !IsNil(o.CustomEmbed) {
		return true
	}

	return false
}

// SetCustomEmbed gets a reference to the given int32 and assigns it to the CustomEmbed field.
func (o *ShopInfo) SetCustomEmbed(v int32) {
	o.CustomEmbed = &v
}

// GetCustomTheme returns the CustomTheme field value if set, zero value otherwise.
func (o *ShopInfo) GetCustomTheme() int32 {
	if o == nil || IsNil(o.CustomTheme) {
		var ret int32
		return ret
	}
	return *o.CustomTheme
}

// GetCustomThemeOk returns a tuple with the CustomTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetCustomThemeOk() (*int32, bool) {
	if o == nil || IsNil(o.CustomTheme) {
		return nil, false
	}
	return o.CustomTheme, true
}

// HasCustomTheme returns a boolean if a field has been set.
func (o *ShopInfo) HasCustomTheme() bool {
	if o != nil && !IsNil(o.CustomTheme) {
		return true
	}

	return false
}

// SetCustomTheme gets a reference to the given int32 and assigns it to the CustomTheme field.
func (o *ShopInfo) SetCustomTheme(v int32) {
	o.CustomTheme = &v
}

// GetFontCustomTheme returns the FontCustomTheme field value if set, zero value otherwise.
func (o *ShopInfo) GetFontCustomTheme() string {
	if o == nil || IsNil(o.FontCustomTheme) {
		var ret string
		return ret
	}
	return *o.FontCustomTheme
}

// GetFontCustomThemeOk returns a tuple with the FontCustomTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetFontCustomThemeOk() (*string, bool) {
	if o == nil || IsNil(o.FontCustomTheme) {
		return nil, false
	}
	return o.FontCustomTheme, true
}

// HasFontCustomTheme returns a boolean if a field has been set.
func (o *ShopInfo) HasFontCustomTheme() bool {
	if o != nil && !IsNil(o.FontCustomTheme) {
		return true
	}

	return false
}

// SetFontCustomTheme gets a reference to the given string and assigns it to the FontCustomTheme field.
func (o *ShopInfo) SetFontCustomTheme(v string) {
	o.FontCustomTheme = &v
}

// GetStyleCustomTheme returns the StyleCustomTheme field value if set, zero value otherwise.
func (o *ShopInfo) GetStyleCustomTheme() string {
	if o == nil || IsNil(o.StyleCustomTheme) {
		var ret string
		return ret
	}
	return *o.StyleCustomTheme
}

// GetStyleCustomThemeOk returns a tuple with the StyleCustomTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetStyleCustomThemeOk() (*string, bool) {
	if o == nil || IsNil(o.StyleCustomTheme) {
		return nil, false
	}
	return o.StyleCustomTheme, true
}

// HasStyleCustomTheme returns a boolean if a field has been set.
func (o *ShopInfo) HasStyleCustomTheme() bool {
	if o != nil && !IsNil(o.StyleCustomTheme) {
		return true
	}

	return false
}

// SetStyleCustomTheme gets a reference to the given string and assigns it to the StyleCustomTheme field.
func (o *ShopInfo) SetStyleCustomTheme(v string) {
	o.StyleCustomTheme = &v
}

// GetEmbedStyleCustomTheme returns the EmbedStyleCustomTheme field value if set, zero value otherwise.
func (o *ShopInfo) GetEmbedStyleCustomTheme() string {
	if o == nil || IsNil(o.EmbedStyleCustomTheme) {
		var ret string
		return ret
	}
	return *o.EmbedStyleCustomTheme
}

// GetEmbedStyleCustomThemeOk returns a tuple with the EmbedStyleCustomTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetEmbedStyleCustomThemeOk() (*string, bool) {
	if o == nil || IsNil(o.EmbedStyleCustomTheme) {
		return nil, false
	}
	return o.EmbedStyleCustomTheme, true
}

// HasEmbedStyleCustomTheme returns a boolean if a field has been set.
func (o *ShopInfo) HasEmbedStyleCustomTheme() bool {
	if o != nil && !IsNil(o.EmbedStyleCustomTheme) {
		return true
	}

	return false
}

// SetEmbedStyleCustomTheme gets a reference to the given string and assigns it to the EmbedStyleCustomTheme field.
func (o *ShopInfo) SetEmbedStyleCustomTheme(v string) {
	o.EmbedStyleCustomTheme = &v
}

// GetIndexCustomTheme returns the IndexCustomTheme field value if set, zero value otherwise.
func (o *ShopInfo) GetIndexCustomTheme() string {
	if o == nil || IsNil(o.IndexCustomTheme) {
		var ret string
		return ret
	}
	return *o.IndexCustomTheme
}

// GetIndexCustomThemeOk returns a tuple with the IndexCustomTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetIndexCustomThemeOk() (*string, bool) {
	if o == nil || IsNil(o.IndexCustomTheme) {
		return nil, false
	}
	return o.IndexCustomTheme, true
}

// HasIndexCustomTheme returns a boolean if a field has been set.
func (o *ShopInfo) HasIndexCustomTheme() bool {
	if o != nil && !IsNil(o.IndexCustomTheme) {
		return true
	}

	return false
}

// SetIndexCustomTheme gets a reference to the given string and assigns it to the IndexCustomTheme field.
func (o *ShopInfo) SetIndexCustomTheme(v string) {
	o.IndexCustomTheme = &v
}

// GetProductCardCustomTheme returns the ProductCardCustomTheme field value if set, zero value otherwise.
func (o *ShopInfo) GetProductCardCustomTheme() string {
	if o == nil || IsNil(o.ProductCardCustomTheme) {
		var ret string
		return ret
	}
	return *o.ProductCardCustomTheme
}

// GetProductCardCustomThemeOk returns a tuple with the ProductCardCustomTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetProductCardCustomThemeOk() (*string, bool) {
	if o == nil || IsNil(o.ProductCardCustomTheme) {
		return nil, false
	}
	return o.ProductCardCustomTheme, true
}

// HasProductCardCustomTheme returns a boolean if a field has been set.
func (o *ShopInfo) HasProductCardCustomTheme() bool {
	if o != nil && !IsNil(o.ProductCardCustomTheme) {
		return true
	}

	return false
}

// SetProductCardCustomTheme gets a reference to the given string and assigns it to the ProductCardCustomTheme field.
func (o *ShopInfo) SetProductCardCustomTheme(v string) {
	o.ProductCardCustomTheme = &v
}

// GetBannerCustomTheme returns the BannerCustomTheme field value if set, zero value otherwise.
func (o *ShopInfo) GetBannerCustomTheme() map[string]interface{} {
	if o == nil || IsNil(o.BannerCustomTheme) {
		var ret map[string]interface{}
		return ret
	}
	return o.BannerCustomTheme
}

// GetBannerCustomThemeOk returns a tuple with the BannerCustomTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetBannerCustomThemeOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.BannerCustomTheme) {
		return map[string]interface{}{}, false
	}
	return o.BannerCustomTheme, true
}

// HasBannerCustomTheme returns a boolean if a field has been set.
func (o *ShopInfo) HasBannerCustomTheme() bool {
	if o != nil && !IsNil(o.BannerCustomTheme) {
		return true
	}

	return false
}

// SetBannerCustomTheme gets a reference to the given map[string]interface{} and assigns it to the BannerCustomTheme field.
func (o *ShopInfo) SetBannerCustomTheme(v map[string]interface{}) {
	o.BannerCustomTheme = v
}

// GetFooterCustomTheme returns the FooterCustomTheme field value if set, zero value otherwise.
func (o *ShopInfo) GetFooterCustomTheme() map[string]interface{} {
	if o == nil || IsNil(o.FooterCustomTheme) {
		var ret map[string]interface{}
		return ret
	}
	return o.FooterCustomTheme
}

// GetFooterCustomThemeOk returns a tuple with the FooterCustomTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetFooterCustomThemeOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.FooterCustomTheme) {
		return map[string]interface{}{}, false
	}
	return o.FooterCustomTheme, true
}

// HasFooterCustomTheme returns a boolean if a field has been set.
func (o *ShopInfo) HasFooterCustomTheme() bool {
	if o != nil && !IsNil(o.FooterCustomTheme) {
		return true
	}

	return false
}

// SetFooterCustomTheme gets a reference to the given map[string]interface{} and assigns it to the FooterCustomTheme field.
func (o *ShopInfo) SetFooterCustomTheme(v map[string]interface{}) {
	o.FooterCustomTheme = v
}

// GetBackgroundImageCustomTheme returns the BackgroundImageCustomTheme field value if set, zero value otherwise.
func (o *ShopInfo) GetBackgroundImageCustomTheme() map[string]interface{} {
	if o == nil || IsNil(o.BackgroundImageCustomTheme) {
		var ret map[string]interface{}
		return ret
	}
	return o.BackgroundImageCustomTheme
}

// GetBackgroundImageCustomThemeOk returns a tuple with the BackgroundImageCustomTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetBackgroundImageCustomThemeOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.BackgroundImageCustomTheme) {
		return map[string]interface{}{}, false
	}
	return o.BackgroundImageCustomTheme, true
}

// HasBackgroundImageCustomTheme returns a boolean if a field has been set.
func (o *ShopInfo) HasBackgroundImageCustomTheme() bool {
	if o != nil && !IsNil(o.BackgroundImageCustomTheme) {
		return true
	}

	return false
}

// SetBackgroundImageCustomTheme gets a reference to the given map[string]interface{} and assigns it to the BackgroundImageCustomTheme field.
func (o *ShopInfo) SetBackgroundImageCustomTheme(v map[string]interface{}) {
	o.BackgroundImageCustomTheme = v
}

// GetLogoCustomTheme returns the LogoCustomTheme field value if set, zero value otherwise.
func (o *ShopInfo) GetLogoCustomTheme() map[string]interface{} {
	if o == nil || IsNil(o.LogoCustomTheme) {
		var ret map[string]interface{}
		return ret
	}
	return o.LogoCustomTheme
}

// GetLogoCustomThemeOk returns a tuple with the LogoCustomTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetLogoCustomThemeOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.LogoCustomTheme) {
		return map[string]interface{}{}, false
	}
	return o.LogoCustomTheme, true
}

// HasLogoCustomTheme returns a boolean if a field has been set.
func (o *ShopInfo) HasLogoCustomTheme() bool {
	if o != nil && !IsNil(o.LogoCustomTheme) {
		return true
	}

	return false
}

// SetLogoCustomTheme gets a reference to the given map[string]interface{} and assigns it to the LogoCustomTheme field.
func (o *ShopInfo) SetLogoCustomTheme(v map[string]interface{}) {
	o.LogoCustomTheme = v
}

// GetHeaderCustomTheme returns the HeaderCustomTheme field value if set, zero value otherwise.
func (o *ShopInfo) GetHeaderCustomTheme() map[string]interface{} {
	if o == nil || IsNil(o.HeaderCustomTheme) {
		var ret map[string]interface{}
		return ret
	}
	return o.HeaderCustomTheme
}

// GetHeaderCustomThemeOk returns a tuple with the HeaderCustomTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetHeaderCustomThemeOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.HeaderCustomTheme) {
		return map[string]interface{}{}, false
	}
	return o.HeaderCustomTheme, true
}

// HasHeaderCustomTheme returns a boolean if a field has been set.
func (o *ShopInfo) HasHeaderCustomTheme() bool {
	if o != nil && !IsNil(o.HeaderCustomTheme) {
		return true
	}

	return false
}

// SetHeaderCustomTheme gets a reference to the given map[string]interface{} and assigns it to the HeaderCustomTheme field.
func (o *ShopInfo) SetHeaderCustomTheme(v map[string]interface{}) {
	o.HeaderCustomTheme = v
}

// GetCardsInRowCustomTheme returns the CardsInRowCustomTheme field value if set, zero value otherwise.
func (o *ShopInfo) GetCardsInRowCustomTheme() int32 {
	if o == nil || IsNil(o.CardsInRowCustomTheme) {
		var ret int32
		return ret
	}
	return *o.CardsInRowCustomTheme
}

// GetCardsInRowCustomThemeOk returns a tuple with the CardsInRowCustomTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetCardsInRowCustomThemeOk() (*int32, bool) {
	if o == nil || IsNil(o.CardsInRowCustomTheme) {
		return nil, false
	}
	return o.CardsInRowCustomTheme, true
}

// HasCardsInRowCustomTheme returns a boolean if a field has been set.
func (o *ShopInfo) HasCardsInRowCustomTheme() bool {
	if o != nil && !IsNil(o.CardsInRowCustomTheme) {
		return true
	}

	return false
}

// SetCardsInRowCustomTheme gets a reference to the given int32 and assigns it to the CardsInRowCustomTheme field.
func (o *ShopInfo) SetCardsInRowCustomTheme(v int32) {
	o.CardsInRowCustomTheme = &v
}

// GetCardsAlignCustomTheme returns the CardsAlignCustomTheme field value if set, zero value otherwise.
func (o *ShopInfo) GetCardsAlignCustomTheme() map[string]interface{} {
	if o == nil || IsNil(o.CardsAlignCustomTheme) {
		var ret map[string]interface{}
		return ret
	}
	return o.CardsAlignCustomTheme
}

// GetCardsAlignCustomThemeOk returns a tuple with the CardsAlignCustomTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetCardsAlignCustomThemeOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CardsAlignCustomTheme) {
		return map[string]interface{}{}, false
	}
	return o.CardsAlignCustomTheme, true
}

// HasCardsAlignCustomTheme returns a boolean if a field has been set.
func (o *ShopInfo) HasCardsAlignCustomTheme() bool {
	if o != nil && !IsNil(o.CardsAlignCustomTheme) {
		return true
	}

	return false
}

// SetCardsAlignCustomTheme gets a reference to the given map[string]interface{} and assigns it to the CardsAlignCustomTheme field.
func (o *ShopInfo) SetCardsAlignCustomTheme(v map[string]interface{}) {
	o.CardsAlignCustomTheme = v
}

// GetGroupCardCustomTheme returns the GroupCardCustomTheme field value if set, zero value otherwise.
func (o *ShopInfo) GetGroupCardCustomTheme() map[string]interface{} {
	if o == nil || IsNil(o.GroupCardCustomTheme) {
		var ret map[string]interface{}
		return ret
	}
	return o.GroupCardCustomTheme
}

// GetGroupCardCustomThemeOk returns a tuple with the GroupCardCustomTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetGroupCardCustomThemeOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.GroupCardCustomTheme) {
		return map[string]interface{}{}, false
	}
	return o.GroupCardCustomTheme, true
}

// HasGroupCardCustomTheme returns a boolean if a field has been set.
func (o *ShopInfo) HasGroupCardCustomTheme() bool {
	if o != nil && !IsNil(o.GroupCardCustomTheme) {
		return true
	}

	return false
}

// SetGroupCardCustomTheme gets a reference to the given map[string]interface{} and assigns it to the GroupCardCustomTheme field.
func (o *ShopInfo) SetGroupCardCustomTheme(v map[string]interface{}) {
	o.GroupCardCustomTheme = v
}

// GetCardAnimationCustomTheme returns the CardAnimationCustomTheme field value if set, zero value otherwise.
func (o *ShopInfo) GetCardAnimationCustomTheme() map[string]interface{} {
	if o == nil || IsNil(o.CardAnimationCustomTheme) {
		var ret map[string]interface{}
		return ret
	}
	return o.CardAnimationCustomTheme
}

// GetCardAnimationCustomThemeOk returns a tuple with the CardAnimationCustomTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetCardAnimationCustomThemeOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CardAnimationCustomTheme) {
		return map[string]interface{}{}, false
	}
	return o.CardAnimationCustomTheme, true
}

// HasCardAnimationCustomTheme returns a boolean if a field has been set.
func (o *ShopInfo) HasCardAnimationCustomTheme() bool {
	if o != nil && !IsNil(o.CardAnimationCustomTheme) {
		return true
	}

	return false
}

// SetCardAnimationCustomTheme gets a reference to the given map[string]interface{} and assigns it to the CardAnimationCustomTheme field.
func (o *ShopInfo) SetCardAnimationCustomTheme(v map[string]interface{}) {
	o.CardAnimationCustomTheme = v
}

// GetLightFontColorCustomTheme returns the LightFontColorCustomTheme field value if set, zero value otherwise.
func (o *ShopInfo) GetLightFontColorCustomTheme() string {
	if o == nil || IsNil(o.LightFontColorCustomTheme) {
		var ret string
		return ret
	}
	return *o.LightFontColorCustomTheme
}

// GetLightFontColorCustomThemeOk returns a tuple with the LightFontColorCustomTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetLightFontColorCustomThemeOk() (*string, bool) {
	if o == nil || IsNil(o.LightFontColorCustomTheme) {
		return nil, false
	}
	return o.LightFontColorCustomTheme, true
}

// HasLightFontColorCustomTheme returns a boolean if a field has been set.
func (o *ShopInfo) HasLightFontColorCustomTheme() bool {
	if o != nil && !IsNil(o.LightFontColorCustomTheme) {
		return true
	}

	return false
}

// SetLightFontColorCustomTheme gets a reference to the given string and assigns it to the LightFontColorCustomTheme field.
func (o *ShopInfo) SetLightFontColorCustomTheme(v string) {
	o.LightFontColorCustomTheme = &v
}

// GetDarkFontColorCustomTheme returns the DarkFontColorCustomTheme field value if set, zero value otherwise.
func (o *ShopInfo) GetDarkFontColorCustomTheme() string {
	if o == nil || IsNil(o.DarkFontColorCustomTheme) {
		var ret string
		return ret
	}
	return *o.DarkFontColorCustomTheme
}

// GetDarkFontColorCustomThemeOk returns a tuple with the DarkFontColorCustomTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetDarkFontColorCustomThemeOk() (*string, bool) {
	if o == nil || IsNil(o.DarkFontColorCustomTheme) {
		return nil, false
	}
	return o.DarkFontColorCustomTheme, true
}

// HasDarkFontColorCustomTheme returns a boolean if a field has been set.
func (o *ShopInfo) HasDarkFontColorCustomTheme() bool {
	if o != nil && !IsNil(o.DarkFontColorCustomTheme) {
		return true
	}

	return false
}

// SetDarkFontColorCustomTheme gets a reference to the given string and assigns it to the DarkFontColorCustomTheme field.
func (o *ShopInfo) SetDarkFontColorCustomTheme(v string) {
	o.DarkFontColorCustomTheme = &v
}

// GetLightColorCustomTheme returns the LightColorCustomTheme field value if set, zero value otherwise.
func (o *ShopInfo) GetLightColorCustomTheme() string {
	if o == nil || IsNil(o.LightColorCustomTheme) {
		var ret string
		return ret
	}
	return *o.LightColorCustomTheme
}

// GetLightColorCustomThemeOk returns a tuple with the LightColorCustomTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetLightColorCustomThemeOk() (*string, bool) {
	if o == nil || IsNil(o.LightColorCustomTheme) {
		return nil, false
	}
	return o.LightColorCustomTheme, true
}

// HasLightColorCustomTheme returns a boolean if a field has been set.
func (o *ShopInfo) HasLightColorCustomTheme() bool {
	if o != nil && !IsNil(o.LightColorCustomTheme) {
		return true
	}

	return false
}

// SetLightColorCustomTheme gets a reference to the given string and assigns it to the LightColorCustomTheme field.
func (o *ShopInfo) SetLightColorCustomTheme(v string) {
	o.LightColorCustomTheme = &v
}

// GetDarkColorCustomTheme returns the DarkColorCustomTheme field value if set, zero value otherwise.
func (o *ShopInfo) GetDarkColorCustomTheme() string {
	if o == nil || IsNil(o.DarkColorCustomTheme) {
		var ret string
		return ret
	}
	return *o.DarkColorCustomTheme
}

// GetDarkColorCustomThemeOk returns a tuple with the DarkColorCustomTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetDarkColorCustomThemeOk() (*string, bool) {
	if o == nil || IsNil(o.DarkColorCustomTheme) {
		return nil, false
	}
	return o.DarkColorCustomTheme, true
}

// HasDarkColorCustomTheme returns a boolean if a field has been set.
func (o *ShopInfo) HasDarkColorCustomTheme() bool {
	if o != nil && !IsNil(o.DarkColorCustomTheme) {
		return true
	}

	return false
}

// SetDarkColorCustomTheme gets a reference to the given string and assigns it to the DarkColorCustomTheme field.
func (o *ShopInfo) SetDarkColorCustomTheme(v string) {
	o.DarkColorCustomTheme = &v
}

// GetBorderColorCustomTheme returns the BorderColorCustomTheme field value if set, zero value otherwise.
func (o *ShopInfo) GetBorderColorCustomTheme() string {
	if o == nil || IsNil(o.BorderColorCustomTheme) {
		var ret string
		return ret
	}
	return *o.BorderColorCustomTheme
}

// GetBorderColorCustomThemeOk returns a tuple with the BorderColorCustomTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetBorderColorCustomThemeOk() (*string, bool) {
	if o == nil || IsNil(o.BorderColorCustomTheme) {
		return nil, false
	}
	return o.BorderColorCustomTheme, true
}

// HasBorderColorCustomTheme returns a boolean if a field has been set.
func (o *ShopInfo) HasBorderColorCustomTheme() bool {
	if o != nil && !IsNil(o.BorderColorCustomTheme) {
		return true
	}

	return false
}

// SetBorderColorCustomTheme gets a reference to the given string and assigns it to the BorderColorCustomTheme field.
func (o *ShopInfo) SetBorderColorCustomTheme(v string) {
	o.BorderColorCustomTheme = &v
}

// GetButtonColorCustomTheme returns the ButtonColorCustomTheme field value if set, zero value otherwise.
func (o *ShopInfo) GetButtonColorCustomTheme() string {
	if o == nil || IsNil(o.ButtonColorCustomTheme) {
		var ret string
		return ret
	}
	return *o.ButtonColorCustomTheme
}

// GetButtonColorCustomThemeOk returns a tuple with the ButtonColorCustomTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetButtonColorCustomThemeOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonColorCustomTheme) {
		return nil, false
	}
	return o.ButtonColorCustomTheme, true
}

// HasButtonColorCustomTheme returns a boolean if a field has been set.
func (o *ShopInfo) HasButtonColorCustomTheme() bool {
	if o != nil && !IsNil(o.ButtonColorCustomTheme) {
		return true
	}

	return false
}

// SetButtonColorCustomTheme gets a reference to the given string and assigns it to the ButtonColorCustomTheme field.
func (o *ShopInfo) SetButtonColorCustomTheme(v string) {
	o.ButtonColorCustomTheme = &v
}

// GetThinColorCustomTheme returns the ThinColorCustomTheme field value if set, zero value otherwise.
func (o *ShopInfo) GetThinColorCustomTheme() string {
	if o == nil || IsNil(o.ThinColorCustomTheme) {
		var ret string
		return ret
	}
	return *o.ThinColorCustomTheme
}

// GetThinColorCustomThemeOk returns a tuple with the ThinColorCustomTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetThinColorCustomThemeOk() (*string, bool) {
	if o == nil || IsNil(o.ThinColorCustomTheme) {
		return nil, false
	}
	return o.ThinColorCustomTheme, true
}

// HasThinColorCustomTheme returns a boolean if a field has been set.
func (o *ShopInfo) HasThinColorCustomTheme() bool {
	if o != nil && !IsNil(o.ThinColorCustomTheme) {
		return true
	}

	return false
}

// SetThinColorCustomTheme gets a reference to the given string and assigns it to the ThinColorCustomTheme field.
func (o *ShopInfo) SetThinColorCustomTheme(v string) {
	o.ThinColorCustomTheme = &v
}

// GetSortCustomTheme returns the SortCustomTheme field value if set, zero value otherwise.
func (o *ShopInfo) GetSortCustomTheme() string {
	if o == nil || IsNil(o.SortCustomTheme) {
		var ret string
		return ret
	}
	return *o.SortCustomTheme
}

// GetSortCustomThemeOk returns a tuple with the SortCustomTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetSortCustomThemeOk() (*string, bool) {
	if o == nil || IsNil(o.SortCustomTheme) {
		return nil, false
	}
	return o.SortCustomTheme, true
}

// HasSortCustomTheme returns a boolean if a field has been set.
func (o *ShopInfo) HasSortCustomTheme() bool {
	if o != nil && !IsNil(o.SortCustomTheme) {
		return true
	}

	return false
}

// SetSortCustomTheme gets a reference to the given string and assigns it to the SortCustomTheme field.
func (o *ShopInfo) SetSortCustomTheme(v string) {
	o.SortCustomTheme = &v
}

// GetHelpspaceClientId returns the HelpspaceClientId field value if set, zero value otherwise.
func (o *ShopInfo) GetHelpspaceClientId() string {
	if o == nil || IsNil(o.HelpspaceClientId) {
		var ret string
		return ret
	}
	return *o.HelpspaceClientId
}

// GetHelpspaceClientIdOk returns a tuple with the HelpspaceClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetHelpspaceClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.HelpspaceClientId) {
		return nil, false
	}
	return o.HelpspaceClientId, true
}

// HasHelpspaceClientId returns a boolean if a field has been set.
func (o *ShopInfo) HasHelpspaceClientId() bool {
	if o != nil && !IsNil(o.HelpspaceClientId) {
		return true
	}

	return false
}

// SetHelpspaceClientId gets a reference to the given string and assigns it to the HelpspaceClientId field.
func (o *ShopInfo) SetHelpspaceClientId(v string) {
	o.HelpspaceClientId = &v
}

// GetHelpspaceToken returns the HelpspaceToken field value if set, zero value otherwise.
func (o *ShopInfo) GetHelpspaceToken() string {
	if o == nil || IsNil(o.HelpspaceToken) {
		var ret string
		return ret
	}
	return *o.HelpspaceToken
}

// GetHelpspaceTokenOk returns a tuple with the HelpspaceToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetHelpspaceTokenOk() (*string, bool) {
	if o == nil || IsNil(o.HelpspaceToken) {
		return nil, false
	}
	return o.HelpspaceToken, true
}

// HasHelpspaceToken returns a boolean if a field has been set.
func (o *ShopInfo) HasHelpspaceToken() bool {
	if o != nil && !IsNil(o.HelpspaceToken) {
		return true
	}

	return false
}

// SetHelpspaceToken gets a reference to the given string and assigns it to the HelpspaceToken field.
func (o *ShopInfo) SetHelpspaceToken(v string) {
	o.HelpspaceToken = &v
}

// GetDescriptionYoutubeOnly returns the DescriptionYoutubeOnly field value if set, zero value otherwise.
func (o *ShopInfo) GetDescriptionYoutubeOnly() int32 {
	if o == nil || IsNil(o.DescriptionYoutubeOnly) {
		var ret int32
		return ret
	}
	return *o.DescriptionYoutubeOnly
}

// GetDescriptionYoutubeOnlyOk returns a tuple with the DescriptionYoutubeOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetDescriptionYoutubeOnlyOk() (*int32, bool) {
	if o == nil || IsNil(o.DescriptionYoutubeOnly) {
		return nil, false
	}
	return o.DescriptionYoutubeOnly, true
}

// HasDescriptionYoutubeOnly returns a boolean if a field has been set.
func (o *ShopInfo) HasDescriptionYoutubeOnly() bool {
	if o != nil && !IsNil(o.DescriptionYoutubeOnly) {
		return true
	}

	return false
}

// SetDescriptionYoutubeOnly gets a reference to the given int32 and assigns it to the DescriptionYoutubeOnly field.
func (o *ShopInfo) SetDescriptionYoutubeOnly(v int32) {
	o.DescriptionYoutubeOnly = &v
}

// GetDescriptionSkipDefaultImage returns the DescriptionSkipDefaultImage field value if set, zero value otherwise.
func (o *ShopInfo) GetDescriptionSkipDefaultImage() int32 {
	if o == nil || IsNil(o.DescriptionSkipDefaultImage) {
		var ret int32
		return ret
	}
	return *o.DescriptionSkipDefaultImage
}

// GetDescriptionSkipDefaultImageOk returns a tuple with the DescriptionSkipDefaultImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetDescriptionSkipDefaultImageOk() (*int32, bool) {
	if o == nil || IsNil(o.DescriptionSkipDefaultImage) {
		return nil, false
	}
	return o.DescriptionSkipDefaultImage, true
}

// HasDescriptionSkipDefaultImage returns a boolean if a field has been set.
func (o *ShopInfo) HasDescriptionSkipDefaultImage() bool {
	if o != nil && !IsNil(o.DescriptionSkipDefaultImage) {
		return true
	}

	return false
}

// SetDescriptionSkipDefaultImage gets a reference to the given int32 and assigns it to the DescriptionSkipDefaultImage field.
func (o *ShopInfo) SetDescriptionSkipDefaultImage(v int32) {
	o.DescriptionSkipDefaultImage = &v
}

// GetHideStockCounter returns the HideStockCounter field value if set, zero value otherwise.
func (o *ShopInfo) GetHideStockCounter() int32 {
	if o == nil || IsNil(o.HideStockCounter) {
		var ret int32
		return ret
	}
	return *o.HideStockCounter
}

// GetHideStockCounterOk returns a tuple with the HideStockCounter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetHideStockCounterOk() (*int32, bool) {
	if o == nil || IsNil(o.HideStockCounter) {
		return nil, false
	}
	return o.HideStockCounter, true
}

// HasHideStockCounter returns a boolean if a field has been set.
func (o *ShopInfo) HasHideStockCounter() bool {
	if o != nil && !IsNil(o.HideStockCounter) {
		return true
	}

	return false
}

// SetHideStockCounter gets a reference to the given int32 and assigns it to the HideStockCounter field.
func (o *ShopInfo) SetHideStockCounter(v int32) {
	o.HideStockCounter = &v
}

// GetImageWidth returns the ImageWidth field value if set, zero value otherwise.
func (o *ShopInfo) GetImageWidth() int32 {
	if o == nil || IsNil(o.ImageWidth) {
		var ret int32
		return ret
	}
	return *o.ImageWidth
}

// GetImageWidthOk returns a tuple with the ImageWidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetImageWidthOk() (*int32, bool) {
	if o == nil || IsNil(o.ImageWidth) {
		return nil, false
	}
	return o.ImageWidth, true
}

// HasImageWidth returns a boolean if a field has been set.
func (o *ShopInfo) HasImageWidth() bool {
	if o != nil && !IsNil(o.ImageWidth) {
		return true
	}

	return false
}

// SetImageWidth gets a reference to the given int32 and assigns it to the ImageWidth field.
func (o *ShopInfo) SetImageWidth(v int32) {
	o.ImageWidth = &v
}

// GetImageHeight returns the ImageHeight field value if set, zero value otherwise.
func (o *ShopInfo) GetImageHeight() int32 {
	if o == nil || IsNil(o.ImageHeight) {
		var ret int32
		return ret
	}
	return *o.ImageHeight
}

// GetImageHeightOk returns a tuple with the ImageHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetImageHeightOk() (*int32, bool) {
	if o == nil || IsNil(o.ImageHeight) {
		return nil, false
	}
	return o.ImageHeight, true
}

// HasImageHeight returns a boolean if a field has been set.
func (o *ShopInfo) HasImageHeight() bool {
	if o != nil && !IsNil(o.ImageHeight) {
		return true
	}

	return false
}

// SetImageHeight gets a reference to the given int32 and assigns it to the ImageHeight field.
func (o *ShopInfo) SetImageHeight(v int32) {
	o.ImageHeight = &v
}

// GetDefaultSort returns the DefaultSort field value if set, zero value otherwise.
func (o *ShopInfo) GetDefaultSort() string {
	if o == nil || IsNil(o.DefaultSort) {
		var ret string
		return ret
	}
	return *o.DefaultSort
}

// GetDefaultSortOk returns a tuple with the DefaultSort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetDefaultSortOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultSort) {
		return nil, false
	}
	return o.DefaultSort, true
}

// HasDefaultSort returns a boolean if a field has been set.
func (o *ShopInfo) HasDefaultSort() bool {
	if o != nil && !IsNil(o.DefaultSort) {
		return true
	}

	return false
}

// SetDefaultSort gets a reference to the given string and assigns it to the DefaultSort field.
func (o *ShopInfo) SetDefaultSort(v string) {
	o.DefaultSort = &v
}

// GetDescriptionImage returns the DescriptionImage field value if set, zero value otherwise.
func (o *ShopInfo) GetDescriptionImage() int32 {
	if o == nil || IsNil(o.DescriptionImage) {
		var ret int32
		return ret
	}
	return *o.DescriptionImage
}

// GetDescriptionImageOk returns a tuple with the DescriptionImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetDescriptionImageOk() (*int32, bool) {
	if o == nil || IsNil(o.DescriptionImage) {
		return nil, false
	}
	return o.DescriptionImage, true
}

// HasDescriptionImage returns a boolean if a field has been set.
func (o *ShopInfo) HasDescriptionImage() bool {
	if o != nil && !IsNil(o.DescriptionImage) {
		return true
	}

	return false
}

// SetDescriptionImage gets a reference to the given int32 and assigns it to the DescriptionImage field.
func (o *ShopInfo) SetDescriptionImage(v int32) {
	o.DescriptionImage = &v
}

// GetHideProductsSold returns the HideProductsSold field value if set, zero value otherwise.
func (o *ShopInfo) GetHideProductsSold() int32 {
	if o == nil || IsNil(o.HideProductsSold) {
		var ret int32
		return ret
	}
	return *o.HideProductsSold
}

// GetHideProductsSoldOk returns a tuple with the HideProductsSold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetHideProductsSoldOk() (*int32, bool) {
	if o == nil || IsNil(o.HideProductsSold) {
		return nil, false
	}
	return o.HideProductsSold, true
}

// HasHideProductsSold returns a boolean if a field has been set.
func (o *ShopInfo) HasHideProductsSold() bool {
	if o != nil && !IsNil(o.HideProductsSold) {
		return true
	}

	return false
}

// SetHideProductsSold gets a reference to the given int32 and assigns it to the HideProductsSold field.
func (o *ShopInfo) SetHideProductsSold(v int32) {
	o.HideProductsSold = &v
}

// GetServiceDateFrom returns the ServiceDateFrom field value if set, zero value otherwise.
func (o *ShopInfo) GetServiceDateFrom() string {
	if o == nil || IsNil(o.ServiceDateFrom) {
		var ret string
		return ret
	}
	return *o.ServiceDateFrom
}

// GetServiceDateFromOk returns a tuple with the ServiceDateFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetServiceDateFromOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceDateFrom) {
		return nil, false
	}
	return o.ServiceDateFrom, true
}

// HasServiceDateFrom returns a boolean if a field has been set.
func (o *ShopInfo) HasServiceDateFrom() bool {
	if o != nil && !IsNil(o.ServiceDateFrom) {
		return true
	}

	return false
}

// SetServiceDateFrom gets a reference to the given string and assigns it to the ServiceDateFrom field.
func (o *ShopInfo) SetServiceDateFrom(v string) {
	o.ServiceDateFrom = &v
}

// GetCardsType returns the CardsType field value if set, zero value otherwise.
func (o *ShopInfo) GetCardsType() string {
	if o == nil || IsNil(o.CardsType) {
		var ret string
		return ret
	}
	return *o.CardsType
}

// GetCardsTypeOk returns a tuple with the CardsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetCardsTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CardsType) {
		return nil, false
	}
	return o.CardsType, true
}

// HasCardsType returns a boolean if a field has been set.
func (o *ShopInfo) HasCardsType() bool {
	if o != nil && !IsNil(o.CardsType) {
		return true
	}

	return false
}

// SetCardsType gets a reference to the given string and assigns it to the CardsType field.
func (o *ShopInfo) SetCardsType(v string) {
	o.CardsType = &v
}

// GetSetupWizard returns the SetupWizard field value if set, zero value otherwise.
func (o *ShopInfo) GetSetupWizard() int32 {
	if o == nil || IsNil(o.SetupWizard) {
		var ret int32
		return ret
	}
	return *o.SetupWizard
}

// GetSetupWizardOk returns a tuple with the SetupWizard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetSetupWizardOk() (*int32, bool) {
	if o == nil || IsNil(o.SetupWizard) {
		return nil, false
	}
	return o.SetupWizard, true
}

// HasSetupWizard returns a boolean if a field has been set.
func (o *ShopInfo) HasSetupWizard() bool {
	if o != nil && !IsNil(o.SetupWizard) {
		return true
	}

	return false
}

// SetSetupWizard gets a reference to the given int32 and assigns it to the SetupWizard field.
func (o *ShopInfo) SetSetupWizard(v int32) {
	o.SetupWizard = &v
}

// GetSetupCryptocurrencies returns the SetupCryptocurrencies field value if set, zero value otherwise.
func (o *ShopInfo) GetSetupCryptocurrencies() int32 {
	if o == nil || IsNil(o.SetupCryptocurrencies) {
		var ret int32
		return ret
	}
	return *o.SetupCryptocurrencies
}

// GetSetupCryptocurrenciesOk returns a tuple with the SetupCryptocurrencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetSetupCryptocurrenciesOk() (*int32, bool) {
	if o == nil || IsNil(o.SetupCryptocurrencies) {
		return nil, false
	}
	return o.SetupCryptocurrencies, true
}

// HasSetupCryptocurrencies returns a boolean if a field has been set.
func (o *ShopInfo) HasSetupCryptocurrencies() bool {
	if o != nil && !IsNil(o.SetupCryptocurrencies) {
		return true
	}

	return false
}

// SetSetupCryptocurrencies gets a reference to the given int32 and assigns it to the SetupCryptocurrencies field.
func (o *ShopInfo) SetSetupCryptocurrencies(v int32) {
	o.SetupCryptocurrencies = &v
}

// GetNoticesBanner returns the NoticesBanner field value if set, zero value otherwise.
func (o *ShopInfo) GetNoticesBanner() string {
	if o == nil || IsNil(o.NoticesBanner) {
		var ret string
		return ret
	}
	return *o.NoticesBanner
}

// GetNoticesBannerOk returns a tuple with the NoticesBanner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetNoticesBannerOk() (*string, bool) {
	if o == nil || IsNil(o.NoticesBanner) {
		return nil, false
	}
	return o.NoticesBanner, true
}

// HasNoticesBanner returns a boolean if a field has been set.
func (o *ShopInfo) HasNoticesBanner() bool {
	if o != nil && !IsNil(o.NoticesBanner) {
		return true
	}

	return false
}

// SetNoticesBanner gets a reference to the given string and assigns it to the NoticesBanner field.
func (o *ShopInfo) SetNoticesBanner(v string) {
	o.NoticesBanner = &v
}

// GetAffiliateRevenuePercent returns the AffiliateRevenuePercent field value if set, zero value otherwise.
func (o *ShopInfo) GetAffiliateRevenuePercent() int32 {
	if o == nil || IsNil(o.AffiliateRevenuePercent) {
		var ret int32
		return ret
	}
	return *o.AffiliateRevenuePercent
}

// GetAffiliateRevenuePercentOk returns a tuple with the AffiliateRevenuePercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetAffiliateRevenuePercentOk() (*int32, bool) {
	if o == nil || IsNil(o.AffiliateRevenuePercent) {
		return nil, false
	}
	return o.AffiliateRevenuePercent, true
}

// HasAffiliateRevenuePercent returns a boolean if a field has been set.
func (o *ShopInfo) HasAffiliateRevenuePercent() bool {
	if o != nil && !IsNil(o.AffiliateRevenuePercent) {
		return true
	}

	return false
}

// SetAffiliateRevenuePercent gets a reference to the given int32 and assigns it to the AffiliateRevenuePercent field.
func (o *ShopInfo) SetAffiliateRevenuePercent(v int32) {
	o.AffiliateRevenuePercent = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ShopInfo) GetCreatedAt() int32 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetCreatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ShopInfo) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *ShopInfo) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetImageName returns the ImageName field value if set, zero value otherwise.
func (o *ShopInfo) GetImageName() string {
	if o == nil || IsNil(o.ImageName) {
		var ret string
		return ret
	}
	return *o.ImageName
}

// GetImageNameOk returns a tuple with the ImageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetImageNameOk() (*string, bool) {
	if o == nil || IsNil(o.ImageName) {
		return nil, false
	}
	return o.ImageName, true
}

// HasImageName returns a boolean if a field has been set.
func (o *ShopInfo) HasImageName() bool {
	if o != nil && !IsNil(o.ImageName) {
		return true
	}

	return false
}

// SetImageName gets a reference to the given string and assigns it to the ImageName field.
func (o *ShopInfo) SetImageName(v string) {
	o.ImageName = &v
}

// GetImageStorage returns the ImageStorage field value if set, zero value otherwise.
func (o *ShopInfo) GetImageStorage() string {
	if o == nil || IsNil(o.ImageStorage) {
		var ret string
		return ret
	}
	return *o.ImageStorage
}

// GetImageStorageOk returns a tuple with the ImageStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetImageStorageOk() (*string, bool) {
	if o == nil || IsNil(o.ImageStorage) {
		return nil, false
	}
	return o.ImageStorage, true
}

// HasImageStorage returns a boolean if a field has been set.
func (o *ShopInfo) HasImageStorage() bool {
	if o != nil && !IsNil(o.ImageStorage) {
		return true
	}

	return false
}

// SetImageStorage gets a reference to the given string and assigns it to the ImageStorage field.
func (o *ShopInfo) SetImageStorage(v string) {
	o.ImageStorage = &v
}

// GetCloudflareImageId returns the CloudflareImageId field value if set, zero value otherwise.
func (o *ShopInfo) GetCloudflareImageId() string {
	if o == nil || IsNil(o.CloudflareImageId) {
		var ret string
		return ret
	}
	return *o.CloudflareImageId
}

// GetCloudflareImageIdOk returns a tuple with the CloudflareImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetCloudflareImageIdOk() (*string, bool) {
	if o == nil || IsNil(o.CloudflareImageId) {
		return nil, false
	}
	return o.CloudflareImageId, true
}

// HasCloudflareImageId returns a boolean if a field has been set.
func (o *ShopInfo) HasCloudflareImageId() bool {
	if o != nil && !IsNil(o.CloudflareImageId) {
		return true
	}

	return false
}

// SetCloudflareImageId gets a reference to the given string and assigns it to the CloudflareImageId field.
func (o *ShopInfo) SetCloudflareImageId(v string) {
	o.CloudflareImageId = &v
}

// GetMarketplaceVerified returns the MarketplaceVerified field value if set, zero value otherwise.
func (o *ShopInfo) GetMarketplaceVerified() int32 {
	if o == nil || IsNil(o.MarketplaceVerified) {
		var ret int32
		return ret
	}
	return *o.MarketplaceVerified
}

// GetMarketplaceVerifiedOk returns a tuple with the MarketplaceVerified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShopInfo) GetMarketplaceVerifiedOk() (*int32, bool) {
	if o == nil || IsNil(o.MarketplaceVerified) {
		return nil, false
	}
	return o.MarketplaceVerified, true
}

// HasMarketplaceVerified returns a boolean if a field has been set.
func (o *ShopInfo) HasMarketplaceVerified() bool {
	if o != nil && !IsNil(o.MarketplaceVerified) {
		return true
	}

	return false
}

// SetMarketplaceVerified gets a reference to the given int32 and assigns it to the MarketplaceVerified field.
func (o *ShopInfo) SetMarketplaceVerified(v int32) {
	o.MarketplaceVerified = &v
}

func (o ShopInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShopInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Avatar) {
		toSerialize["avatar"] = o.Avatar
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.DefaultCurrency) {
		toSerialize["default_currency"] = o.DefaultCurrency
	}
	if !IsNil(o.AvailableCurrency) {
		toSerialize["available_currency"] = o.AvailableCurrency
	}
	if !IsNil(o.VatPercentage) {
		toSerialize["vat_percentage"] = o.VatPercentage
	}
	if !IsNil(o.TaxConfiguration) {
		toSerialize["tax_configuration"] = o.TaxConfiguration
	}
	if !IsNil(o.DashboardFeature) {
		toSerialize["dashboard_feature"] = o.DashboardFeature
	}
	if !IsNil(o.DisplayTaxOnStorefront) {
		toSerialize["display_tax_on_storefront"] = o.DisplayTaxOnStorefront
	}
	if !IsNil(o.DisplayTaxCustomFields) {
		toSerialize["display_tax_custom_fields"] = o.DisplayTaxCustomFields
	}
	if !IsNil(o.ValidationOnlyForCompanies) {
		toSerialize["validation_only_for_companies"] = o.ValidationOnlyForCompanies
	}
	if !IsNil(o.ValidateVatNumber) {
		toSerialize["validate_vat_number"] = o.ValidateVatNumber
	}
	if !IsNil(o.PricesTaxInclusive) {
		toSerialize["prices_tax_inclusive"] = o.PricesTaxInclusive
	}
	if !IsNil(o.NotifyTrialEnding) {
		toSerialize["notify_trial_ending"] = o.NotifyTrialEnding
	}
	if !IsNil(o.NotifyUpcomingRenewal) {
		toSerialize["notify_upcoming_renewal"] = o.NotifyUpcomingRenewal
	}
	if !IsNil(o.NotifySubscriptionRenewalFailure) {
		toSerialize["notify_subscription_renewal_failure"] = o.NotifySubscriptionRenewalFailure
	}
	if !IsNil(o.OrderEmails) {
		toSerialize["order_emails"] = o.OrderEmails
	}
	if !IsNil(o.SubscriptionGracePeriod) {
		toSerialize["subscription_grace_period"] = o.SubscriptionGracePeriod
	}
	if !IsNil(o.PaypalCreditCard) {
		toSerialize["paypal_credit_card"] = o.PaypalCreditCard
	}
	if !IsNil(o.ForcePaypalEmailDelivery) {
		toSerialize["force_paypal_email_delivery"] = o.ForcePaypalEmailDelivery
	}
	if !IsNil(o.PaypalMerchantId) {
		toSerialize["paypal_merchant_id"] = o.PaypalMerchantId
	}
	if !IsNil(o.BinanceId) {
		toSerialize["binance_id"] = o.BinanceId
	}
	if !IsNil(o.WalletconnectId) {
		toSerialize["walletconnect_id"] = o.WalletconnectId
	}
	if !IsNil(o.NonCustodialWallet) {
		toSerialize["non_custodial_wallet"] = o.NonCustodialWallet
	}
	if !IsNil(o.DarkMode) {
		toSerialize["dark_mode"] = o.DarkMode
	}
	if !IsNil(o.DiscordLink) {
		toSerialize["discord_link"] = o.DiscordLink
	}
	if !IsNil(o.TwitterLink) {
		toSerialize["twitter_link"] = o.TwitterLink
	}
	if !IsNil(o.InstagramLink) {
		toSerialize["instagram_link"] = o.InstagramLink
	}
	if !IsNil(o.FacebookLink) {
		toSerialize["facebook_link"] = o.FacebookLink
	}
	if !IsNil(o.TelegramLink) {
		toSerialize["telegram_link"] = o.TelegramLink
	}
	if !IsNil(o.YoutubeLink) {
		toSerialize["youtube_link"] = o.YoutubeLink
	}
	if !IsNil(o.RedditLink) {
		toSerialize["reddit_link"] = o.RedditLink
	}
	if !IsNil(o.TiktokLink) {
		toSerialize["tiktok_link"] = o.TiktokLink
	}
	if !IsNil(o.SearchEnabled) {
		toSerialize["search_enabled"] = o.SearchEnabled
	}
	if !IsNil(o.SortEnabled) {
		toSerialize["sort_enabled"] = o.SortEnabled
	}
	if !IsNil(o.CartEnabled) {
		toSerialize["cart_enabled"] = o.CartEnabled
	}
	if !IsNil(o.CartMaximumCheckout) {
		toSerialize["cart_maximum_checkout"] = o.CartMaximumCheckout
	}
	if !IsNil(o.HideOutOfStock) {
		toSerialize["hide_out_of_stock"] = o.HideOutOfStock
	}
	if !IsNil(o.GoogleAnalyticsTrackingId) {
		toSerialize["google_analytics_tracking_id"] = o.GoogleAnalyticsTrackingId
	}
	if !IsNil(o.CrispWebsiteId) {
		toSerialize["crisp_website_id"] = o.CrispWebsiteId
	}
	if !IsNil(o.CenterProductTitles) {
		toSerialize["center_product_titles"] = o.CenterProductTitles
	}
	if !IsNil(o.CenterGroupTitles) {
		toSerialize["center_group_titles"] = o.CenterGroupTitles
	}
	if !IsNil(o.PopupMessage) {
		toSerialize["popup_message"] = o.PopupMessage
	}
	if !IsNil(o.Verified) {
		toSerialize["verified"] = o.Verified
	}
	if !IsNil(o.OnHold) {
		toSerialize["on_hold"] = o.OnHold
	}
	if !IsNil(o.TermsOfService) {
		toSerialize["terms_of_service"] = o.TermsOfService
	}
	if !IsNil(o.PrimaryColorCustomTheme) {
		toSerialize["primary_color_custom_theme"] = o.PrimaryColorCustomTheme
	}
	if !IsNil(o.SecondaryColorCustomTheme) {
		toSerialize["secondary_color_custom_theme"] = o.SecondaryColorCustomTheme
	}
	if !IsNil(o.PrimaryFontColorCustomTheme) {
		toSerialize["primary_font_color_custom_theme"] = o.PrimaryFontColorCustomTheme
	}
	if !IsNil(o.SecondaryFontColorCustomTheme) {
		toSerialize["secondary_font_color_custom_theme"] = o.SecondaryFontColorCustomTheme
	}
	if !IsNil(o.CustomEmbed) {
		toSerialize["custom_embed"] = o.CustomEmbed
	}
	if !IsNil(o.CustomTheme) {
		toSerialize["custom_theme"] = o.CustomTheme
	}
	if !IsNil(o.FontCustomTheme) {
		toSerialize["font_custom_theme"] = o.FontCustomTheme
	}
	if !IsNil(o.StyleCustomTheme) {
		toSerialize["style_custom_theme"] = o.StyleCustomTheme
	}
	if !IsNil(o.EmbedStyleCustomTheme) {
		toSerialize["embed_style_custom_theme"] = o.EmbedStyleCustomTheme
	}
	if !IsNil(o.IndexCustomTheme) {
		toSerialize["index_custom_theme"] = o.IndexCustomTheme
	}
	if !IsNil(o.ProductCardCustomTheme) {
		toSerialize["product_card_custom_theme"] = o.ProductCardCustomTheme
	}
	if !IsNil(o.BannerCustomTheme) {
		toSerialize["banner_custom_theme"] = o.BannerCustomTheme
	}
	if !IsNil(o.FooterCustomTheme) {
		toSerialize["footer_custom_theme"] = o.FooterCustomTheme
	}
	if !IsNil(o.BackgroundImageCustomTheme) {
		toSerialize["background_image_custom_theme"] = o.BackgroundImageCustomTheme
	}
	if !IsNil(o.LogoCustomTheme) {
		toSerialize["logo_custom_theme"] = o.LogoCustomTheme
	}
	if !IsNil(o.HeaderCustomTheme) {
		toSerialize["header_custom_theme"] = o.HeaderCustomTheme
	}
	if !IsNil(o.CardsInRowCustomTheme) {
		toSerialize["cards_in_row_custom_theme"] = o.CardsInRowCustomTheme
	}
	if !IsNil(o.CardsAlignCustomTheme) {
		toSerialize["cards_align_custom_theme"] = o.CardsAlignCustomTheme
	}
	if !IsNil(o.GroupCardCustomTheme) {
		toSerialize["group_card_custom_theme"] = o.GroupCardCustomTheme
	}
	if !IsNil(o.CardAnimationCustomTheme) {
		toSerialize["card_animation_custom_theme"] = o.CardAnimationCustomTheme
	}
	if !IsNil(o.LightFontColorCustomTheme) {
		toSerialize["light_font_color_custom_theme"] = o.LightFontColorCustomTheme
	}
	if !IsNil(o.DarkFontColorCustomTheme) {
		toSerialize["dark_font_color_custom_theme"] = o.DarkFontColorCustomTheme
	}
	if !IsNil(o.LightColorCustomTheme) {
		toSerialize["light_color_custom_theme"] = o.LightColorCustomTheme
	}
	if !IsNil(o.DarkColorCustomTheme) {
		toSerialize["dark_color_custom_theme"] = o.DarkColorCustomTheme
	}
	if !IsNil(o.BorderColorCustomTheme) {
		toSerialize["border_color_custom_theme"] = o.BorderColorCustomTheme
	}
	if !IsNil(o.ButtonColorCustomTheme) {
		toSerialize["button_color_custom_theme"] = o.ButtonColorCustomTheme
	}
	if !IsNil(o.ThinColorCustomTheme) {
		toSerialize["thin_color_custom_theme"] = o.ThinColorCustomTheme
	}
	if !IsNil(o.SortCustomTheme) {
		toSerialize["sort_custom_theme"] = o.SortCustomTheme
	}
	if !IsNil(o.HelpspaceClientId) {
		toSerialize["helpspace_client_id"] = o.HelpspaceClientId
	}
	if !IsNil(o.HelpspaceToken) {
		toSerialize["helpspace_token"] = o.HelpspaceToken
	}
	if !IsNil(o.DescriptionYoutubeOnly) {
		toSerialize["description_youtube_only"] = o.DescriptionYoutubeOnly
	}
	if !IsNil(o.DescriptionSkipDefaultImage) {
		toSerialize["description_skip_default_image"] = o.DescriptionSkipDefaultImage
	}
	if !IsNil(o.HideStockCounter) {
		toSerialize["hide_stock_counter"] = o.HideStockCounter
	}
	if !IsNil(o.ImageWidth) {
		toSerialize["image_width"] = o.ImageWidth
	}
	if !IsNil(o.ImageHeight) {
		toSerialize["image_height"] = o.ImageHeight
	}
	if !IsNil(o.DefaultSort) {
		toSerialize["default_sort"] = o.DefaultSort
	}
	if !IsNil(o.DescriptionImage) {
		toSerialize["description_image"] = o.DescriptionImage
	}
	if !IsNil(o.HideProductsSold) {
		toSerialize["hide_products_sold"] = o.HideProductsSold
	}
	if !IsNil(o.ServiceDateFrom) {
		toSerialize["service_date_from"] = o.ServiceDateFrom
	}
	if !IsNil(o.CardsType) {
		toSerialize["cards_type"] = o.CardsType
	}
	if !IsNil(o.SetupWizard) {
		toSerialize["setup_wizard"] = o.SetupWizard
	}
	if !IsNil(o.SetupCryptocurrencies) {
		toSerialize["setup_cryptocurrencies"] = o.SetupCryptocurrencies
	}
	if !IsNil(o.NoticesBanner) {
		toSerialize["notices_banner"] = o.NoticesBanner
	}
	if !IsNil(o.AffiliateRevenuePercent) {
		toSerialize["affiliate_revenue_percent"] = o.AffiliateRevenuePercent
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.ImageName) {
		toSerialize["image_name"] = o.ImageName
	}
	if !IsNil(o.ImageStorage) {
		toSerialize["image_storage"] = o.ImageStorage
	}
	if !IsNil(o.CloudflareImageId) {
		toSerialize["cloudflare_image_id"] = o.CloudflareImageId
	}
	if !IsNil(o.MarketplaceVerified) {
		toSerialize["marketplace_verified"] = o.MarketplaceVerified
	}
	return toSerialize, nil
}

type NullableShopInfo struct {
	value *ShopInfo
	isSet bool
}

func (v NullableShopInfo) Get() *ShopInfo {
	return v.value
}

func (v *NullableShopInfo) Set(val *ShopInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableShopInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableShopInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShopInfo(val *ShopInfo) *NullableShopInfo {
	return &NullableShopInfo{value: val, isSet: true}
}

func (v NullableShopInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShopInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


