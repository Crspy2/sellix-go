/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the FeeBreakdownServiceFeeBreakdownPercentage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FeeBreakdownServiceFeeBreakdownPercentage{}

// FeeBreakdownServiceFeeBreakdownPercentage struct for FeeBreakdownServiceFeeBreakdownPercentage
type FeeBreakdownServiceFeeBreakdownPercentage struct {
	// The plan of the service fee.
	Plan *string `json:"plan,omitempty"`
	// The amount of the service fee.
	Value *float32 `json:"value,omitempty"`
	// The amount of the service fee.
	Amount *float32 `json:"amount,omitempty"`
	Currency *Currency `json:"currency,omitempty"`
}

// NewFeeBreakdownServiceFeeBreakdownPercentage instantiates a new FeeBreakdownServiceFeeBreakdownPercentage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeeBreakdownServiceFeeBreakdownPercentage() *FeeBreakdownServiceFeeBreakdownPercentage {
	this := FeeBreakdownServiceFeeBreakdownPercentage{}
	return &this
}

// NewFeeBreakdownServiceFeeBreakdownPercentageWithDefaults instantiates a new FeeBreakdownServiceFeeBreakdownPercentage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeeBreakdownServiceFeeBreakdownPercentageWithDefaults() *FeeBreakdownServiceFeeBreakdownPercentage {
	this := FeeBreakdownServiceFeeBreakdownPercentage{}
	return &this
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *FeeBreakdownServiceFeeBreakdownPercentage) GetPlan() string {
	if o == nil || IsNil(o.Plan) {
		var ret string
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeeBreakdownServiceFeeBreakdownPercentage) GetPlanOk() (*string, bool) {
	if o == nil || IsNil(o.Plan) {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *FeeBreakdownServiceFeeBreakdownPercentage) HasPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given string and assigns it to the Plan field.
func (o *FeeBreakdownServiceFeeBreakdownPercentage) SetPlan(v string) {
	o.Plan = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *FeeBreakdownServiceFeeBreakdownPercentage) GetValue() float32 {
	if o == nil || IsNil(o.Value) {
		var ret float32
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeeBreakdownServiceFeeBreakdownPercentage) GetValueOk() (*float32, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *FeeBreakdownServiceFeeBreakdownPercentage) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given float32 and assigns it to the Value field.
func (o *FeeBreakdownServiceFeeBreakdownPercentage) SetValue(v float32) {
	o.Value = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *FeeBreakdownServiceFeeBreakdownPercentage) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeeBreakdownServiceFeeBreakdownPercentage) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *FeeBreakdownServiceFeeBreakdownPercentage) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *FeeBreakdownServiceFeeBreakdownPercentage) SetAmount(v float32) {
	o.Amount = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *FeeBreakdownServiceFeeBreakdownPercentage) GetCurrency() Currency {
	if o == nil || IsNil(o.Currency) {
		var ret Currency
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeeBreakdownServiceFeeBreakdownPercentage) GetCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *FeeBreakdownServiceFeeBreakdownPercentage) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given Currency and assigns it to the Currency field.
func (o *FeeBreakdownServiceFeeBreakdownPercentage) SetCurrency(v Currency) {
	o.Currency = &v
}

func (o FeeBreakdownServiceFeeBreakdownPercentage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FeeBreakdownServiceFeeBreakdownPercentage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	return toSerialize, nil
}

type NullableFeeBreakdownServiceFeeBreakdownPercentage struct {
	value *FeeBreakdownServiceFeeBreakdownPercentage
	isSet bool
}

func (v NullableFeeBreakdownServiceFeeBreakdownPercentage) Get() *FeeBreakdownServiceFeeBreakdownPercentage {
	return v.value
}

func (v *NullableFeeBreakdownServiceFeeBreakdownPercentage) Set(val *FeeBreakdownServiceFeeBreakdownPercentage) {
	v.value = val
	v.isSet = true
}

func (v NullableFeeBreakdownServiceFeeBreakdownPercentage) IsSet() bool {
	return v.isSet
}

func (v *NullableFeeBreakdownServiceFeeBreakdownPercentage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeeBreakdownServiceFeeBreakdownPercentage(val *FeeBreakdownServiceFeeBreakdownPercentage) *NullableFeeBreakdownServiceFeeBreakdownPercentage {
	return &NullableFeeBreakdownServiceFeeBreakdownPercentage{value: val, isSet: true}
}

func (v NullableFeeBreakdownServiceFeeBreakdownPercentage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeeBreakdownServiceFeeBreakdownPercentage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


