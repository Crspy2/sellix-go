/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the MiniInvoice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MiniInvoice{}

// MiniInvoice struct for MiniInvoice
type MiniInvoice struct {
	// ID of the resource.
	Id *int32 `json:"id,omitempty"`
	// Unique ID of the resource, used as reference across the API.
	Uniqid *string `json:"uniqid,omitempty"`
	// Unique ID of the recurring bill.
	RecurringBillingId *string `json:"recurring_billing_id,omitempty"`
	// The timestamp for when the billing for the invoice started
	BillingPeriodStart *float32 `json:"billing_period_start,omitempty"`
	// The timestamp for when the billing for the invoice ended
	BillingPeriodEnd *float32 `json:"billing_period_end,omitempty"`
	// Invoice type. For subscriptions, the invoice type is PRODUCT_SUBSCRIPTION as SUBSCRIPTION is reserved for Sellix-own plans.
	Type *string `json:"type,omitempty"`
	// Product type.
	Subtype *string `json:"subtype,omitempty"`
	// How the invoice was created
	Origin *string `json:"origin,omitempty"`
	// The shop ID to which this invoice belongs.
	ShopId *int32 `json:"shop_id,omitempty"`
	// The ID of the wallet platform used during checkout
	PlatformId *string `json:"platform_id,omitempty"`
	// ID of the customer.
	CustomerId *string `json:"customer_id,omitempty"`
	// Unique ID of the product linked to this invoice, if any.
	ProductId *string `json:"product_id,omitempty"`
	ProductVariants []ProductVariant `json:"product_variants,omitempty"`
	// ID of the customer who is affiliated to the purchase.
	AffiliateRevenueCustomerId *string `json:"affiliate_revenue_customer_id,omitempty"`
	ProductAddons []ProductAddonsInner `json:"product_addons,omitempty"`
	// Product type.
	ProductType *string `json:"product_type,omitempty"`
	// Product title.
	ProductTitle *string `json:"product_title,omitempty"`
	// Field reserved for Sellix-own plans. Unique ID of the subscription purchased.
	SubscriptionId *int32 `json:"subscription_id,omitempty"`
	// Field reserved for Sellix-own plans. Time, in seconds, of the subscription purchased.
	SubscriptionTime *int32 `json:"subscription_time,omitempty"`
	Gateway *Gateway `json:"gateway,omitempty"`
	Blockchain *Blockchain `json:"blockchain,omitempty"`
	GatewaysAccepted []string `json:"gateways_accepted,omitempty"`
	// PayPal Alternative Payment Method name, such as iDEAL, used if gateway is PAYPAL.
	PaypalApm *string `json:"paypal_apm,omitempty"`
	// Stripe Alternative Payment Method name, such as iDEAL, used if gateway is STRIPE.
	StripeApm *string `json:"stripe_apm,omitempty"`
	// Qauntity of product purchased.
	Quantity *int32 `json:"quantity,omitempty"`
	// Invoice total, unit_price*quantity where quantity is applicable.
	Total *float64 `json:"total,omitempty"`
	// Invoice total in the currency chosen.
	TotalDisplay *float64 `json:"total_display,omitempty"`
	// The percentage of tax applied on the transaction
	TaxPercentage *float32 `json:"tax_percentage,omitempty"`
	// Unique ID of the coupon, if used, for the discount.
	CouponId *string `json:"coupon_id,omitempty"`
	// If a coupon or volume_discount is used, the discount value presents the total amount of discount over the total cost of the invoice.
	Discount *float64 `json:"discount,omitempty"`
	// If a coupon or volume_discount is used, the displayed discount value presents the total amount of discount over the total cost of the invoice.
	DiscountDisplay *float64 `json:"discount_display,omitempty"`
	// Representation of how discount was applied to invoice
	DiscountBreakdown map[string]interface{} `json:"discount_breakdown,omitempty"`
	BundleConfig []BundleConfig `json:"bundle_config,omitempty"`
	// The discount value applied from a volume_discount.
	VolumeDiscount *float64 `json:"volume_discount,omitempty"`
	// The diplayed discount value applied from a volume_discount.
	VolumeDiscountDisplay *float64 `json:"volume_discount_display,omitempty"`
	Currency *Currency `json:"currency,omitempty"`
	// Exchange rate between currency chosen and USD.
	ExchangeRate *float64 `json:"exchange_rate,omitempty"`
	// Exchange rate between the cryptocurrency chosen (if any) and USD.
	CryptoExchangeRate *float64 `json:"crypto_exchange_rate,omitempty"`
	// Email of the customer.
	CustomerEmail *string `json:"customer_email,omitempty"`
	// The oauth access token provided by discord during checkout
	DiscordCustomerToken *string `json:"discord_customer_token,omitempty"`
	// The oauth refresh token provided by discord during checkout
	DiscordCustomerRefreshToken *string `json:"discord_customer_refresh_token,omitempty"`
	// Timstamp for the expiration of the discord oauth tokens
	DiscordCustomerTokenExpiresAt *float32 `json:"discord_customer_token_expires_at,omitempty"`
	// If true and gateway is PAYPAL, the product will be shipped to the PayPal email on record instead of the customer email.
	PaypalEmailDelivery *bool `json:"paypal_email_delivery,omitempty"`
	// Merchant PayPal email.
	PaypalEmail *string `json:"paypal_email,omitempty"`
	// This field contains the PayPal order ID.
	PaypalOrderId *string `json:"paypal_order_id,omitempty"`
	// This field contains the PayPal authorization ID.
	PaypalAuthorizationId *string `json:"paypal_authorization_id,omitempty"`
	// This field contains the PayPal capture ID.
	PaypalCaptureId *string `json:"paypal_capture_id,omitempty"`
	// This field is updated after the invoice is completed with the PayPal's email used for the purchase.
	PaypalPayerEmail *string `json:"paypal_payer_email,omitempty"`
	// This field is updated after the invoice is completed with the fee taken by PayPal over the invoice total.
	PaypalFee *string `json:"paypal_fee,omitempty"`
	PaypalFeeCurrency *Currency `json:"paypal_fee_currency,omitempty"`
	// This field contains the API version of PayPal that is used.
	PaypalApiCredentials *string `json:"paypal_api_credentials,omitempty"`
	// ID of the paypal subscription.
	PaypalSubscriptionId *int32 `json:"paypal_subscription_id,omitempty"`
	// Link for the merchant to purchase the subscription from.
	PaypalSubscriptionLink *int32 `json:"paypal_subscription_link,omitempty"`
	// DEPRECATED
	LexOrderId *string `json:"lex_order_id,omitempty"`
	// DEPRECATED
	LexPaymentMethod *string `json:"lex_payment_method,omitempty"`
	// DEPRECATED
	LexSecret *string `json:"lex_secret,omitempty"`
	// DEPRECATED
	VirtualPaymentsId *string `json:"virtual_payments_id,omitempty"`
	// DEPRECATED
	PaydashPaymentID *string `json:"paydash_paymentID,omitempty"`
	// DEPRECATED
	PaydashApiKey *string `json:"paydash_apiKey,omitempty"`
	// Merchant Skrill email.
	SkrillEmail *string `json:"skrill_email,omitempty"`
	// Skrill unique ID linked to the invoice.
	SkrillSid *string `json:"skrill_sid,omitempty"`
	// Skrill link to redirect the customer to.
	SkrillLink *string `json:"skrill_link,omitempty"`
	// Client ID used to create the STRIPE paymentIntent.
	StripeId *string `json:"stripe_id,omitempty"`
	// Client secret used to create the STRIPE paymentIntent.
	StripeClientSecret *string `json:"stripe_client_secret,omitempty"`
	// If the invoice type is PRODUCT_SUBSCRIPTION or SUBSCRIPTION, refers to the STRIPE price ID.
	StripePriceId *string `json:"stripe_price_id,omitempty"`
	// The ID of the stripe customer the invoice is for
	StripeCustomerId *string `json:"stripe_customer_id,omitempty"`
	// If the invoice type is SUBSCRIPTION, refers to the STRIPE subscription ID.
	StripeSubscriptionId *string `json:"stripe_subscription_id,omitempty"`
	// If the invoice type not is SUBSCRIPTION, refers to the STRIPE invoice ID.
	StripeInvoiceId *string `json:"stripe_invoice_id,omitempty"`
	// PerfectMoney payment ID linked to the invoice.
	PerfectmoneyId *string `json:"perfectmoney_id,omitempty"`
	// ID for binance invoice
	BinanceInvoiceId *string `json:"binance_invoice_id,omitempty"`
	// Full Binance QRCODE string
	BinanceQrcode *string `json:"binance_qrcode,omitempty"`
	// Checkout URL for Binance invoice
	BinanceCheckoutUrl *string `json:"binance_checkout_url,omitempty"`
	// Whether or not the binance invoice was payed out
	BinancePayout *int32 `json:"binance_payout,omitempty"`
	// Full CashApp QRCODE string.
	CashappQrcode *string `json:"cashapp_qrcode,omitempty"`
	// Unique note for the customer to leave in the CashApp payment.
	CashappNote *string `json:"cashapp_note,omitempty"`
	// CashApp cashtag used to create the QRCODE.
	CashappCashtag *string `json:"cashapp_cashtag,omitempty"`
	// Cryptocurrency address linked to this invoice.
	CryptoAddress *string `json:"crypto_address,omitempty"`
	// Cryptocurrency amount converted based on crypto_exchange_rate.
	CryptoAmount *float64 `json:"crypto_amount,omitempty"`
	// Cryptocurrency amount received, paid by the customer.
	CryptoReceived *float64 `json:"crypto_received,omitempty"`
	// The amount of money already sent for the crypto transaction's fee
	CryptoFeePaid *float32 `json:"crypto_fee_paid,omitempty"`
	// The amount remaining to be paid for the crypto transaction's fee
	CryptoFeeOwed *float32 `json:"crypto_fee_owed,omitempty"`
	// URI used to create the QRCODE.
	CryptoUri *string `json:"crypto_uri,omitempty"`
	// The bitcoin lightning r hash if applicable
	BitcoinLnRHash *string `json:"bitcoin_ln_r_hash,omitempty"`
	// Crypto confirmations needed to process the invoice.
	CryptoConfirmationsNeeded *int32 `json:"crypto_confirmations_needed,omitempty"`
	// The version of the Sellix Crypto Wallet being used
	CryptoWalletVersion *string `json:"crypto_wallet_version,omitempty"`
	// If true, an instant payout for this invoice's cryptocurrency address has been sent.
	CryptoPayout *bool `json:"crypto_payout,omitempty"`
	// If true, a scheduled payout for this invoice's cryptocurrency address has been sent.
	CryptoScheduledPayout *bool `json:"crypto_scheduled_payout,omitempty"`
	// The payout type for the crypto
	CryptoPayoutType *string `json:"crypto_payout_type,omitempty"`
	// If true, the Sellix fee_percentage has already been collected.
	FeeBilled *bool `json:"fee_billed,omitempty"`
	// If invoice type is MONTHLY_BILL, contains a breakdown of the fees that need to be collected.
	BillInfo map[string]interface{} `json:"bill_info,omitempty"`
	// Customer country.
	Country *string `json:"country,omitempty"`
	// Customer location.
	Location *string `json:"location,omitempty"`
	// Customer IP.
	Ip *string `json:"ip,omitempty"`
	// If true, a VPN or Proxy has been detected.
	IsVpnOrProxy *bool `json:"is_vpn_or_proxy,omitempty"`
	// Customer User Agent.
	UserAgent *string `json:"user_agent,omitempty"`
	// key-value JSON having as key the custom field name and as value the custom field value inserted by the customer. Custom fields can both be used as inputs from the customers but also as metadata for invoices, letting you pass hidden fields for internal referencing.
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	// If true, this invoice has been created through the Developers API.
	DeveloperInvoice *bool `json:"developer_invoice,omitempty"`
	// If a product_id is not passed through the Developers API, a title must be specified.
	DeveloperTitle *string `json:"developer_title,omitempty"`
	// Additional webhook URL to which updates regarding this invoice will be sent.
	DeveloperWebhook *string `json:"developer_webhook,omitempty"`
	// If present, the customer will be redirected to this URL after the invoice has been paid.
	DeveloperReturnUrl *string `json:"developer_return_url,omitempty"`
	// DEPRECATED. Value is actually a stringified null
	PayoutConfiguration *string `json:"payout_configuration,omitempty"`
	// What cut does Sellix take out of the total. To learn more about Sellix fees please refer to https://sellix.io/fees.
	FeePercentage *int32 `json:"fee_percentage,omitempty"`
	FeeBreakdown *FeeBreakdown `json:"fee_breakdown,omitempty"`
	// Amount of money left to process
	ToProcess *float32 `json:"to_process,omitempty"`
	// Status of the invoice.
	Status *string `json:"status,omitempty"`
	// If CART_PARTIAL_OUT_OF_STOCK, the invoice has been completed but some products in the cart were out of stock.
	StatusDetails *string `json:"status_details,omitempty"`
	// If the invoice is VOIDED and the product (or all the products in the cart) were out of stock, this additional status is set.
	VoidDetails *string `json:"void_details,omitempty"`
	// The environment the invoice was made under
	Environment *string `json:"environment,omitempty"`
	// Day value, number.
	DayValue *int32 `json:"day_value,omitempty"`
	// First three letters of the day name.
	Day *string `json:"day,omitempty"`
	// First three letters of the month name.
	Month *string `json:"month,omitempty"`
	// : Year number.
	Year *int32 `json:"year,omitempty"`
	// Timestamp for the creation of the invoice.
	CreatedAt *int32 `json:"created_at,omitempty"`
	// Timestamp, available of the last time the gateway has been updated.
	GatewayUpdatedAt *int32 `json:"gateway_updated_at,omitempty"`
	// Date, available if the blacklist has been edited.
	UpdatedAt *int32 `json:"updated_at,omitempty"`
	// User ID of the user who updated the invoice.
	UpdatedBy *int32 `json:"updated_by,omitempty"`
	// Whether or not the invoice was created from a marketplace
	IsMarketplace *int32 `json:"is_marketplace,omitempty"`
	// Payment ID for the squarespace payment method
	SquarePaymentId *string `json:"square_payment_id,omitempty"`
	// The payment ID for the volume payment gateway
	VolumePaymentId *string `json:"volume_payment_id,omitempty"`
	// The reference ID for the volume payment gateway
	VolumeReferenceId *string `json:"volume_reference_id,omitempty"`
	// The internal ID of the Sellix product plan associated to the subscription v2 product
	ProductPlanId *int32 `json:"product_plan_id,omitempty"`
	// Name of the merchant.
	Name *string `json:"name,omitempty"`
	// If true, the merchant has enabled purchase with Credit Card through PayPal.
	ShopPaypalCreditCard *bool `json:"shop_paypal_credit_card,omitempty"`
	// If true, the merchant has enabled invoice shipment to the PayPal customer email.
	ShopForcePaypalEmailDelivery *bool `json:"shop_force_paypal_email_delivery,omitempty"`
}

// NewMiniInvoice instantiates a new MiniInvoice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMiniInvoice() *MiniInvoice {
	this := MiniInvoice{}
	return &this
}

// NewMiniInvoiceWithDefaults instantiates a new MiniInvoice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMiniInvoiceWithDefaults() *MiniInvoice {
	this := MiniInvoice{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MiniInvoice) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MiniInvoice) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MiniInvoice) SetId(v int32) {
	o.Id = &v
}

// GetUniqid returns the Uniqid field value if set, zero value otherwise.
func (o *MiniInvoice) GetUniqid() string {
	if o == nil || IsNil(o.Uniqid) {
		var ret string
		return ret
	}
	return *o.Uniqid
}

// GetUniqidOk returns a tuple with the Uniqid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetUniqidOk() (*string, bool) {
	if o == nil || IsNil(o.Uniqid) {
		return nil, false
	}
	return o.Uniqid, true
}

// HasUniqid returns a boolean if a field has been set.
func (o *MiniInvoice) HasUniqid() bool {
	if o != nil && !IsNil(o.Uniqid) {
		return true
	}

	return false
}

// SetUniqid gets a reference to the given string and assigns it to the Uniqid field.
func (o *MiniInvoice) SetUniqid(v string) {
	o.Uniqid = &v
}

// GetRecurringBillingId returns the RecurringBillingId field value if set, zero value otherwise.
func (o *MiniInvoice) GetRecurringBillingId() string {
	if o == nil || IsNil(o.RecurringBillingId) {
		var ret string
		return ret
	}
	return *o.RecurringBillingId
}

// GetRecurringBillingIdOk returns a tuple with the RecurringBillingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetRecurringBillingIdOk() (*string, bool) {
	if o == nil || IsNil(o.RecurringBillingId) {
		return nil, false
	}
	return o.RecurringBillingId, true
}

// HasRecurringBillingId returns a boolean if a field has been set.
func (o *MiniInvoice) HasRecurringBillingId() bool {
	if o != nil && !IsNil(o.RecurringBillingId) {
		return true
	}

	return false
}

// SetRecurringBillingId gets a reference to the given string and assigns it to the RecurringBillingId field.
func (o *MiniInvoice) SetRecurringBillingId(v string) {
	o.RecurringBillingId = &v
}

// GetBillingPeriodStart returns the BillingPeriodStart field value if set, zero value otherwise.
func (o *MiniInvoice) GetBillingPeriodStart() float32 {
	if o == nil || IsNil(o.BillingPeriodStart) {
		var ret float32
		return ret
	}
	return *o.BillingPeriodStart
}

// GetBillingPeriodStartOk returns a tuple with the BillingPeriodStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetBillingPeriodStartOk() (*float32, bool) {
	if o == nil || IsNil(o.BillingPeriodStart) {
		return nil, false
	}
	return o.BillingPeriodStart, true
}

// HasBillingPeriodStart returns a boolean if a field has been set.
func (o *MiniInvoice) HasBillingPeriodStart() bool {
	if o != nil && !IsNil(o.BillingPeriodStart) {
		return true
	}

	return false
}

// SetBillingPeriodStart gets a reference to the given float32 and assigns it to the BillingPeriodStart field.
func (o *MiniInvoice) SetBillingPeriodStart(v float32) {
	o.BillingPeriodStart = &v
}

// GetBillingPeriodEnd returns the BillingPeriodEnd field value if set, zero value otherwise.
func (o *MiniInvoice) GetBillingPeriodEnd() float32 {
	if o == nil || IsNil(o.BillingPeriodEnd) {
		var ret float32
		return ret
	}
	return *o.BillingPeriodEnd
}

// GetBillingPeriodEndOk returns a tuple with the BillingPeriodEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetBillingPeriodEndOk() (*float32, bool) {
	if o == nil || IsNil(o.BillingPeriodEnd) {
		return nil, false
	}
	return o.BillingPeriodEnd, true
}

// HasBillingPeriodEnd returns a boolean if a field has been set.
func (o *MiniInvoice) HasBillingPeriodEnd() bool {
	if o != nil && !IsNil(o.BillingPeriodEnd) {
		return true
	}

	return false
}

// SetBillingPeriodEnd gets a reference to the given float32 and assigns it to the BillingPeriodEnd field.
func (o *MiniInvoice) SetBillingPeriodEnd(v float32) {
	o.BillingPeriodEnd = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MiniInvoice) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MiniInvoice) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *MiniInvoice) SetType(v string) {
	o.Type = &v
}

// GetSubtype returns the Subtype field value if set, zero value otherwise.
func (o *MiniInvoice) GetSubtype() string {
	if o == nil || IsNil(o.Subtype) {
		var ret string
		return ret
	}
	return *o.Subtype
}

// GetSubtypeOk returns a tuple with the Subtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetSubtypeOk() (*string, bool) {
	if o == nil || IsNil(o.Subtype) {
		return nil, false
	}
	return o.Subtype, true
}

// HasSubtype returns a boolean if a field has been set.
func (o *MiniInvoice) HasSubtype() bool {
	if o != nil && !IsNil(o.Subtype) {
		return true
	}

	return false
}

// SetSubtype gets a reference to the given string and assigns it to the Subtype field.
func (o *MiniInvoice) SetSubtype(v string) {
	o.Subtype = &v
}

// GetOrigin returns the Origin field value if set, zero value otherwise.
func (o *MiniInvoice) GetOrigin() string {
	if o == nil || IsNil(o.Origin) {
		var ret string
		return ret
	}
	return *o.Origin
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetOriginOk() (*string, bool) {
	if o == nil || IsNil(o.Origin) {
		return nil, false
	}
	return o.Origin, true
}

// HasOrigin returns a boolean if a field has been set.
func (o *MiniInvoice) HasOrigin() bool {
	if o != nil && !IsNil(o.Origin) {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given string and assigns it to the Origin field.
func (o *MiniInvoice) SetOrigin(v string) {
	o.Origin = &v
}

// GetShopId returns the ShopId field value if set, zero value otherwise.
func (o *MiniInvoice) GetShopId() int32 {
	if o == nil || IsNil(o.ShopId) {
		var ret int32
		return ret
	}
	return *o.ShopId
}

// GetShopIdOk returns a tuple with the ShopId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetShopIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ShopId) {
		return nil, false
	}
	return o.ShopId, true
}

// HasShopId returns a boolean if a field has been set.
func (o *MiniInvoice) HasShopId() bool {
	if o != nil && !IsNil(o.ShopId) {
		return true
	}

	return false
}

// SetShopId gets a reference to the given int32 and assigns it to the ShopId field.
func (o *MiniInvoice) SetShopId(v int32) {
	o.ShopId = &v
}

// GetPlatformId returns the PlatformId field value if set, zero value otherwise.
func (o *MiniInvoice) GetPlatformId() string {
	if o == nil || IsNil(o.PlatformId) {
		var ret string
		return ret
	}
	return *o.PlatformId
}

// GetPlatformIdOk returns a tuple with the PlatformId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetPlatformIdOk() (*string, bool) {
	if o == nil || IsNil(o.PlatformId) {
		return nil, false
	}
	return o.PlatformId, true
}

// HasPlatformId returns a boolean if a field has been set.
func (o *MiniInvoice) HasPlatformId() bool {
	if o != nil && !IsNil(o.PlatformId) {
		return true
	}

	return false
}

// SetPlatformId gets a reference to the given string and assigns it to the PlatformId field.
func (o *MiniInvoice) SetPlatformId(v string) {
	o.PlatformId = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *MiniInvoice) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId) {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *MiniInvoice) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *MiniInvoice) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *MiniInvoice) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *MiniInvoice) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *MiniInvoice) SetProductId(v string) {
	o.ProductId = &v
}

// GetProductVariants returns the ProductVariants field value if set, zero value otherwise.
func (o *MiniInvoice) GetProductVariants() []ProductVariant {
	if o == nil || IsNil(o.ProductVariants) {
		var ret []ProductVariant
		return ret
	}
	return o.ProductVariants
}

// GetProductVariantsOk returns a tuple with the ProductVariants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetProductVariantsOk() ([]ProductVariant, bool) {
	if o == nil || IsNil(o.ProductVariants) {
		return nil, false
	}
	return o.ProductVariants, true
}

// HasProductVariants returns a boolean if a field has been set.
func (o *MiniInvoice) HasProductVariants() bool {
	if o != nil && !IsNil(o.ProductVariants) {
		return true
	}

	return false
}

// SetProductVariants gets a reference to the given []ProductVariant and assigns it to the ProductVariants field.
func (o *MiniInvoice) SetProductVariants(v []ProductVariant) {
	o.ProductVariants = v
}

// GetAffiliateRevenueCustomerId returns the AffiliateRevenueCustomerId field value if set, zero value otherwise.
func (o *MiniInvoice) GetAffiliateRevenueCustomerId() string {
	if o == nil || IsNil(o.AffiliateRevenueCustomerId) {
		var ret string
		return ret
	}
	return *o.AffiliateRevenueCustomerId
}

// GetAffiliateRevenueCustomerIdOk returns a tuple with the AffiliateRevenueCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetAffiliateRevenueCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.AffiliateRevenueCustomerId) {
		return nil, false
	}
	return o.AffiliateRevenueCustomerId, true
}

// HasAffiliateRevenueCustomerId returns a boolean if a field has been set.
func (o *MiniInvoice) HasAffiliateRevenueCustomerId() bool {
	if o != nil && !IsNil(o.AffiliateRevenueCustomerId) {
		return true
	}

	return false
}

// SetAffiliateRevenueCustomerId gets a reference to the given string and assigns it to the AffiliateRevenueCustomerId field.
func (o *MiniInvoice) SetAffiliateRevenueCustomerId(v string) {
	o.AffiliateRevenueCustomerId = &v
}

// GetProductAddons returns the ProductAddons field value if set, zero value otherwise.
func (o *MiniInvoice) GetProductAddons() []ProductAddonsInner {
	if o == nil || IsNil(o.ProductAddons) {
		var ret []ProductAddonsInner
		return ret
	}
	return o.ProductAddons
}

// GetProductAddonsOk returns a tuple with the ProductAddons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetProductAddonsOk() ([]ProductAddonsInner, bool) {
	if o == nil || IsNil(o.ProductAddons) {
		return nil, false
	}
	return o.ProductAddons, true
}

// HasProductAddons returns a boolean if a field has been set.
func (o *MiniInvoice) HasProductAddons() bool {
	if o != nil && !IsNil(o.ProductAddons) {
		return true
	}

	return false
}

// SetProductAddons gets a reference to the given []ProductAddonsInner and assigns it to the ProductAddons field.
func (o *MiniInvoice) SetProductAddons(v []ProductAddonsInner) {
	o.ProductAddons = v
}

// GetProductType returns the ProductType field value if set, zero value otherwise.
func (o *MiniInvoice) GetProductType() string {
	if o == nil || IsNil(o.ProductType) {
		var ret string
		return ret
	}
	return *o.ProductType
}

// GetProductTypeOk returns a tuple with the ProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetProductTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProductType) {
		return nil, false
	}
	return o.ProductType, true
}

// HasProductType returns a boolean if a field has been set.
func (o *MiniInvoice) HasProductType() bool {
	if o != nil && !IsNil(o.ProductType) {
		return true
	}

	return false
}

// SetProductType gets a reference to the given string and assigns it to the ProductType field.
func (o *MiniInvoice) SetProductType(v string) {
	o.ProductType = &v
}

// GetProductTitle returns the ProductTitle field value if set, zero value otherwise.
func (o *MiniInvoice) GetProductTitle() string {
	if o == nil || IsNil(o.ProductTitle) {
		var ret string
		return ret
	}
	return *o.ProductTitle
}

// GetProductTitleOk returns a tuple with the ProductTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetProductTitleOk() (*string, bool) {
	if o == nil || IsNil(o.ProductTitle) {
		return nil, false
	}
	return o.ProductTitle, true
}

// HasProductTitle returns a boolean if a field has been set.
func (o *MiniInvoice) HasProductTitle() bool {
	if o != nil && !IsNil(o.ProductTitle) {
		return true
	}

	return false
}

// SetProductTitle gets a reference to the given string and assigns it to the ProductTitle field.
func (o *MiniInvoice) SetProductTitle(v string) {
	o.ProductTitle = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *MiniInvoice) GetSubscriptionId() int32 {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret int32
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetSubscriptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *MiniInvoice) HasSubscriptionId() bool {
	if o != nil && !IsNil(o.SubscriptionId) {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given int32 and assigns it to the SubscriptionId field.
func (o *MiniInvoice) SetSubscriptionId(v int32) {
	o.SubscriptionId = &v
}

// GetSubscriptionTime returns the SubscriptionTime field value if set, zero value otherwise.
func (o *MiniInvoice) GetSubscriptionTime() int32 {
	if o == nil || IsNil(o.SubscriptionTime) {
		var ret int32
		return ret
	}
	return *o.SubscriptionTime
}

// GetSubscriptionTimeOk returns a tuple with the SubscriptionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetSubscriptionTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.SubscriptionTime) {
		return nil, false
	}
	return o.SubscriptionTime, true
}

// HasSubscriptionTime returns a boolean if a field has been set.
func (o *MiniInvoice) HasSubscriptionTime() bool {
	if o != nil && !IsNil(o.SubscriptionTime) {
		return true
	}

	return false
}

// SetSubscriptionTime gets a reference to the given int32 and assigns it to the SubscriptionTime field.
func (o *MiniInvoice) SetSubscriptionTime(v int32) {
	o.SubscriptionTime = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *MiniInvoice) GetGateway() Gateway {
	if o == nil || IsNil(o.Gateway) {
		var ret Gateway
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetGatewayOk() (*Gateway, bool) {
	if o == nil || IsNil(o.Gateway) {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *MiniInvoice) HasGateway() bool {
	if o != nil && !IsNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given Gateway and assigns it to the Gateway field.
func (o *MiniInvoice) SetGateway(v Gateway) {
	o.Gateway = &v
}

// GetBlockchain returns the Blockchain field value if set, zero value otherwise.
func (o *MiniInvoice) GetBlockchain() Blockchain {
	if o == nil || IsNil(o.Blockchain) {
		var ret Blockchain
		return ret
	}
	return *o.Blockchain
}

// GetBlockchainOk returns a tuple with the Blockchain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetBlockchainOk() (*Blockchain, bool) {
	if o == nil || IsNil(o.Blockchain) {
		return nil, false
	}
	return o.Blockchain, true
}

// HasBlockchain returns a boolean if a field has been set.
func (o *MiniInvoice) HasBlockchain() bool {
	if o != nil && !IsNil(o.Blockchain) {
		return true
	}

	return false
}

// SetBlockchain gets a reference to the given Blockchain and assigns it to the Blockchain field.
func (o *MiniInvoice) SetBlockchain(v Blockchain) {
	o.Blockchain = &v
}

// GetGatewaysAccepted returns the GatewaysAccepted field value if set, zero value otherwise.
func (o *MiniInvoice) GetGatewaysAccepted() []string {
	if o == nil || IsNil(o.GatewaysAccepted) {
		var ret []string
		return ret
	}
	return o.GatewaysAccepted
}

// GetGatewaysAcceptedOk returns a tuple with the GatewaysAccepted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetGatewaysAcceptedOk() ([]string, bool) {
	if o == nil || IsNil(o.GatewaysAccepted) {
		return nil, false
	}
	return o.GatewaysAccepted, true
}

// HasGatewaysAccepted returns a boolean if a field has been set.
func (o *MiniInvoice) HasGatewaysAccepted() bool {
	if o != nil && !IsNil(o.GatewaysAccepted) {
		return true
	}

	return false
}

// SetGatewaysAccepted gets a reference to the given []string and assigns it to the GatewaysAccepted field.
func (o *MiniInvoice) SetGatewaysAccepted(v []string) {
	o.GatewaysAccepted = v
}

// GetPaypalApm returns the PaypalApm field value if set, zero value otherwise.
func (o *MiniInvoice) GetPaypalApm() string {
	if o == nil || IsNil(o.PaypalApm) {
		var ret string
		return ret
	}
	return *o.PaypalApm
}

// GetPaypalApmOk returns a tuple with the PaypalApm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetPaypalApmOk() (*string, bool) {
	if o == nil || IsNil(o.PaypalApm) {
		return nil, false
	}
	return o.PaypalApm, true
}

// HasPaypalApm returns a boolean if a field has been set.
func (o *MiniInvoice) HasPaypalApm() bool {
	if o != nil && !IsNil(o.PaypalApm) {
		return true
	}

	return false
}

// SetPaypalApm gets a reference to the given string and assigns it to the PaypalApm field.
func (o *MiniInvoice) SetPaypalApm(v string) {
	o.PaypalApm = &v
}

// GetStripeApm returns the StripeApm field value if set, zero value otherwise.
func (o *MiniInvoice) GetStripeApm() string {
	if o == nil || IsNil(o.StripeApm) {
		var ret string
		return ret
	}
	return *o.StripeApm
}

// GetStripeApmOk returns a tuple with the StripeApm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetStripeApmOk() (*string, bool) {
	if o == nil || IsNil(o.StripeApm) {
		return nil, false
	}
	return o.StripeApm, true
}

// HasStripeApm returns a boolean if a field has been set.
func (o *MiniInvoice) HasStripeApm() bool {
	if o != nil && !IsNil(o.StripeApm) {
		return true
	}

	return false
}

// SetStripeApm gets a reference to the given string and assigns it to the StripeApm field.
func (o *MiniInvoice) SetStripeApm(v string) {
	o.StripeApm = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *MiniInvoice) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *MiniInvoice) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *MiniInvoice) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *MiniInvoice) GetTotal() float64 {
	if o == nil || IsNil(o.Total) {
		var ret float64
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetTotalOk() (*float64, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *MiniInvoice) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given float64 and assigns it to the Total field.
func (o *MiniInvoice) SetTotal(v float64) {
	o.Total = &v
}

// GetTotalDisplay returns the TotalDisplay field value if set, zero value otherwise.
func (o *MiniInvoice) GetTotalDisplay() float64 {
	if o == nil || IsNil(o.TotalDisplay) {
		var ret float64
		return ret
	}
	return *o.TotalDisplay
}

// GetTotalDisplayOk returns a tuple with the TotalDisplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetTotalDisplayOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalDisplay) {
		return nil, false
	}
	return o.TotalDisplay, true
}

// HasTotalDisplay returns a boolean if a field has been set.
func (o *MiniInvoice) HasTotalDisplay() bool {
	if o != nil && !IsNil(o.TotalDisplay) {
		return true
	}

	return false
}

// SetTotalDisplay gets a reference to the given float64 and assigns it to the TotalDisplay field.
func (o *MiniInvoice) SetTotalDisplay(v float64) {
	o.TotalDisplay = &v
}

// GetTaxPercentage returns the TaxPercentage field value if set, zero value otherwise.
func (o *MiniInvoice) GetTaxPercentage() float32 {
	if o == nil || IsNil(o.TaxPercentage) {
		var ret float32
		return ret
	}
	return *o.TaxPercentage
}

// GetTaxPercentageOk returns a tuple with the TaxPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetTaxPercentageOk() (*float32, bool) {
	if o == nil || IsNil(o.TaxPercentage) {
		return nil, false
	}
	return o.TaxPercentage, true
}

// HasTaxPercentage returns a boolean if a field has been set.
func (o *MiniInvoice) HasTaxPercentage() bool {
	if o != nil && !IsNil(o.TaxPercentage) {
		return true
	}

	return false
}

// SetTaxPercentage gets a reference to the given float32 and assigns it to the TaxPercentage field.
func (o *MiniInvoice) SetTaxPercentage(v float32) {
	o.TaxPercentage = &v
}

// GetCouponId returns the CouponId field value if set, zero value otherwise.
func (o *MiniInvoice) GetCouponId() string {
	if o == nil || IsNil(o.CouponId) {
		var ret string
		return ret
	}
	return *o.CouponId
}

// GetCouponIdOk returns a tuple with the CouponId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetCouponIdOk() (*string, bool) {
	if o == nil || IsNil(o.CouponId) {
		return nil, false
	}
	return o.CouponId, true
}

// HasCouponId returns a boolean if a field has been set.
func (o *MiniInvoice) HasCouponId() bool {
	if o != nil && !IsNil(o.CouponId) {
		return true
	}

	return false
}

// SetCouponId gets a reference to the given string and assigns it to the CouponId field.
func (o *MiniInvoice) SetCouponId(v string) {
	o.CouponId = &v
}

// GetDiscount returns the Discount field value if set, zero value otherwise.
func (o *MiniInvoice) GetDiscount() float64 {
	if o == nil || IsNil(o.Discount) {
		var ret float64
		return ret
	}
	return *o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetDiscountOk() (*float64, bool) {
	if o == nil || IsNil(o.Discount) {
		return nil, false
	}
	return o.Discount, true
}

// HasDiscount returns a boolean if a field has been set.
func (o *MiniInvoice) HasDiscount() bool {
	if o != nil && !IsNil(o.Discount) {
		return true
	}

	return false
}

// SetDiscount gets a reference to the given float64 and assigns it to the Discount field.
func (o *MiniInvoice) SetDiscount(v float64) {
	o.Discount = &v
}

// GetDiscountDisplay returns the DiscountDisplay field value if set, zero value otherwise.
func (o *MiniInvoice) GetDiscountDisplay() float64 {
	if o == nil || IsNil(o.DiscountDisplay) {
		var ret float64
		return ret
	}
	return *o.DiscountDisplay
}

// GetDiscountDisplayOk returns a tuple with the DiscountDisplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetDiscountDisplayOk() (*float64, bool) {
	if o == nil || IsNil(o.DiscountDisplay) {
		return nil, false
	}
	return o.DiscountDisplay, true
}

// HasDiscountDisplay returns a boolean if a field has been set.
func (o *MiniInvoice) HasDiscountDisplay() bool {
	if o != nil && !IsNil(o.DiscountDisplay) {
		return true
	}

	return false
}

// SetDiscountDisplay gets a reference to the given float64 and assigns it to the DiscountDisplay field.
func (o *MiniInvoice) SetDiscountDisplay(v float64) {
	o.DiscountDisplay = &v
}

// GetDiscountBreakdown returns the DiscountBreakdown field value if set, zero value otherwise.
func (o *MiniInvoice) GetDiscountBreakdown() map[string]interface{} {
	if o == nil || IsNil(o.DiscountBreakdown) {
		var ret map[string]interface{}
		return ret
	}
	return o.DiscountBreakdown
}

// GetDiscountBreakdownOk returns a tuple with the DiscountBreakdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetDiscountBreakdownOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.DiscountBreakdown) {
		return map[string]interface{}{}, false
	}
	return o.DiscountBreakdown, true
}

// HasDiscountBreakdown returns a boolean if a field has been set.
func (o *MiniInvoice) HasDiscountBreakdown() bool {
	if o != nil && !IsNil(o.DiscountBreakdown) {
		return true
	}

	return false
}

// SetDiscountBreakdown gets a reference to the given map[string]interface{} and assigns it to the DiscountBreakdown field.
func (o *MiniInvoice) SetDiscountBreakdown(v map[string]interface{}) {
	o.DiscountBreakdown = v
}

// GetBundleConfig returns the BundleConfig field value if set, zero value otherwise.
func (o *MiniInvoice) GetBundleConfig() []BundleConfig {
	if o == nil || IsNil(o.BundleConfig) {
		var ret []BundleConfig
		return ret
	}
	return o.BundleConfig
}

// GetBundleConfigOk returns a tuple with the BundleConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetBundleConfigOk() ([]BundleConfig, bool) {
	if o == nil || IsNil(o.BundleConfig) {
		return nil, false
	}
	return o.BundleConfig, true
}

// HasBundleConfig returns a boolean if a field has been set.
func (o *MiniInvoice) HasBundleConfig() bool {
	if o != nil && !IsNil(o.BundleConfig) {
		return true
	}

	return false
}

// SetBundleConfig gets a reference to the given []BundleConfig and assigns it to the BundleConfig field.
func (o *MiniInvoice) SetBundleConfig(v []BundleConfig) {
	o.BundleConfig = v
}

// GetVolumeDiscount returns the VolumeDiscount field value if set, zero value otherwise.
func (o *MiniInvoice) GetVolumeDiscount() float64 {
	if o == nil || IsNil(o.VolumeDiscount) {
		var ret float64
		return ret
	}
	return *o.VolumeDiscount
}

// GetVolumeDiscountOk returns a tuple with the VolumeDiscount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetVolumeDiscountOk() (*float64, bool) {
	if o == nil || IsNil(o.VolumeDiscount) {
		return nil, false
	}
	return o.VolumeDiscount, true
}

// HasVolumeDiscount returns a boolean if a field has been set.
func (o *MiniInvoice) HasVolumeDiscount() bool {
	if o != nil && !IsNil(o.VolumeDiscount) {
		return true
	}

	return false
}

// SetVolumeDiscount gets a reference to the given float64 and assigns it to the VolumeDiscount field.
func (o *MiniInvoice) SetVolumeDiscount(v float64) {
	o.VolumeDiscount = &v
}

// GetVolumeDiscountDisplay returns the VolumeDiscountDisplay field value if set, zero value otherwise.
func (o *MiniInvoice) GetVolumeDiscountDisplay() float64 {
	if o == nil || IsNil(o.VolumeDiscountDisplay) {
		var ret float64
		return ret
	}
	return *o.VolumeDiscountDisplay
}

// GetVolumeDiscountDisplayOk returns a tuple with the VolumeDiscountDisplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetVolumeDiscountDisplayOk() (*float64, bool) {
	if o == nil || IsNil(o.VolumeDiscountDisplay) {
		return nil, false
	}
	return o.VolumeDiscountDisplay, true
}

// HasVolumeDiscountDisplay returns a boolean if a field has been set.
func (o *MiniInvoice) HasVolumeDiscountDisplay() bool {
	if o != nil && !IsNil(o.VolumeDiscountDisplay) {
		return true
	}

	return false
}

// SetVolumeDiscountDisplay gets a reference to the given float64 and assigns it to the VolumeDiscountDisplay field.
func (o *MiniInvoice) SetVolumeDiscountDisplay(v float64) {
	o.VolumeDiscountDisplay = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *MiniInvoice) GetCurrency() Currency {
	if o == nil || IsNil(o.Currency) {
		var ret Currency
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *MiniInvoice) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given Currency and assigns it to the Currency field.
func (o *MiniInvoice) SetCurrency(v Currency) {
	o.Currency = &v
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise.
func (o *MiniInvoice) GetExchangeRate() float64 {
	if o == nil || IsNil(o.ExchangeRate) {
		var ret float64
		return ret
	}
	return *o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetExchangeRateOk() (*float64, bool) {
	if o == nil || IsNil(o.ExchangeRate) {
		return nil, false
	}
	return o.ExchangeRate, true
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *MiniInvoice) HasExchangeRate() bool {
	if o != nil && !IsNil(o.ExchangeRate) {
		return true
	}

	return false
}

// SetExchangeRate gets a reference to the given float64 and assigns it to the ExchangeRate field.
func (o *MiniInvoice) SetExchangeRate(v float64) {
	o.ExchangeRate = &v
}

// GetCryptoExchangeRate returns the CryptoExchangeRate field value if set, zero value otherwise.
func (o *MiniInvoice) GetCryptoExchangeRate() float64 {
	if o == nil || IsNil(o.CryptoExchangeRate) {
		var ret float64
		return ret
	}
	return *o.CryptoExchangeRate
}

// GetCryptoExchangeRateOk returns a tuple with the CryptoExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetCryptoExchangeRateOk() (*float64, bool) {
	if o == nil || IsNil(o.CryptoExchangeRate) {
		return nil, false
	}
	return o.CryptoExchangeRate, true
}

// HasCryptoExchangeRate returns a boolean if a field has been set.
func (o *MiniInvoice) HasCryptoExchangeRate() bool {
	if o != nil && !IsNil(o.CryptoExchangeRate) {
		return true
	}

	return false
}

// SetCryptoExchangeRate gets a reference to the given float64 and assigns it to the CryptoExchangeRate field.
func (o *MiniInvoice) SetCryptoExchangeRate(v float64) {
	o.CryptoExchangeRate = &v
}

// GetCustomerEmail returns the CustomerEmail field value if set, zero value otherwise.
func (o *MiniInvoice) GetCustomerEmail() string {
	if o == nil || IsNil(o.CustomerEmail) {
		var ret string
		return ret
	}
	return *o.CustomerEmail
}

// GetCustomerEmailOk returns a tuple with the CustomerEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetCustomerEmailOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerEmail) {
		return nil, false
	}
	return o.CustomerEmail, true
}

// HasCustomerEmail returns a boolean if a field has been set.
func (o *MiniInvoice) HasCustomerEmail() bool {
	if o != nil && !IsNil(o.CustomerEmail) {
		return true
	}

	return false
}

// SetCustomerEmail gets a reference to the given string and assigns it to the CustomerEmail field.
func (o *MiniInvoice) SetCustomerEmail(v string) {
	o.CustomerEmail = &v
}

// GetDiscordCustomerToken returns the DiscordCustomerToken field value if set, zero value otherwise.
func (o *MiniInvoice) GetDiscordCustomerToken() string {
	if o == nil || IsNil(o.DiscordCustomerToken) {
		var ret string
		return ret
	}
	return *o.DiscordCustomerToken
}

// GetDiscordCustomerTokenOk returns a tuple with the DiscordCustomerToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetDiscordCustomerTokenOk() (*string, bool) {
	if o == nil || IsNil(o.DiscordCustomerToken) {
		return nil, false
	}
	return o.DiscordCustomerToken, true
}

// HasDiscordCustomerToken returns a boolean if a field has been set.
func (o *MiniInvoice) HasDiscordCustomerToken() bool {
	if o != nil && !IsNil(o.DiscordCustomerToken) {
		return true
	}

	return false
}

// SetDiscordCustomerToken gets a reference to the given string and assigns it to the DiscordCustomerToken field.
func (o *MiniInvoice) SetDiscordCustomerToken(v string) {
	o.DiscordCustomerToken = &v
}

// GetDiscordCustomerRefreshToken returns the DiscordCustomerRefreshToken field value if set, zero value otherwise.
func (o *MiniInvoice) GetDiscordCustomerRefreshToken() string {
	if o == nil || IsNil(o.DiscordCustomerRefreshToken) {
		var ret string
		return ret
	}
	return *o.DiscordCustomerRefreshToken
}

// GetDiscordCustomerRefreshTokenOk returns a tuple with the DiscordCustomerRefreshToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetDiscordCustomerRefreshTokenOk() (*string, bool) {
	if o == nil || IsNil(o.DiscordCustomerRefreshToken) {
		return nil, false
	}
	return o.DiscordCustomerRefreshToken, true
}

// HasDiscordCustomerRefreshToken returns a boolean if a field has been set.
func (o *MiniInvoice) HasDiscordCustomerRefreshToken() bool {
	if o != nil && !IsNil(o.DiscordCustomerRefreshToken) {
		return true
	}

	return false
}

// SetDiscordCustomerRefreshToken gets a reference to the given string and assigns it to the DiscordCustomerRefreshToken field.
func (o *MiniInvoice) SetDiscordCustomerRefreshToken(v string) {
	o.DiscordCustomerRefreshToken = &v
}

// GetDiscordCustomerTokenExpiresAt returns the DiscordCustomerTokenExpiresAt field value if set, zero value otherwise.
func (o *MiniInvoice) GetDiscordCustomerTokenExpiresAt() float32 {
	if o == nil || IsNil(o.DiscordCustomerTokenExpiresAt) {
		var ret float32
		return ret
	}
	return *o.DiscordCustomerTokenExpiresAt
}

// GetDiscordCustomerTokenExpiresAtOk returns a tuple with the DiscordCustomerTokenExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetDiscordCustomerTokenExpiresAtOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscordCustomerTokenExpiresAt) {
		return nil, false
	}
	return o.DiscordCustomerTokenExpiresAt, true
}

// HasDiscordCustomerTokenExpiresAt returns a boolean if a field has been set.
func (o *MiniInvoice) HasDiscordCustomerTokenExpiresAt() bool {
	if o != nil && !IsNil(o.DiscordCustomerTokenExpiresAt) {
		return true
	}

	return false
}

// SetDiscordCustomerTokenExpiresAt gets a reference to the given float32 and assigns it to the DiscordCustomerTokenExpiresAt field.
func (o *MiniInvoice) SetDiscordCustomerTokenExpiresAt(v float32) {
	o.DiscordCustomerTokenExpiresAt = &v
}

// GetPaypalEmailDelivery returns the PaypalEmailDelivery field value if set, zero value otherwise.
func (o *MiniInvoice) GetPaypalEmailDelivery() bool {
	if o == nil || IsNil(o.PaypalEmailDelivery) {
		var ret bool
		return ret
	}
	return *o.PaypalEmailDelivery
}

// GetPaypalEmailDeliveryOk returns a tuple with the PaypalEmailDelivery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetPaypalEmailDeliveryOk() (*bool, bool) {
	if o == nil || IsNil(o.PaypalEmailDelivery) {
		return nil, false
	}
	return o.PaypalEmailDelivery, true
}

// HasPaypalEmailDelivery returns a boolean if a field has been set.
func (o *MiniInvoice) HasPaypalEmailDelivery() bool {
	if o != nil && !IsNil(o.PaypalEmailDelivery) {
		return true
	}

	return false
}

// SetPaypalEmailDelivery gets a reference to the given bool and assigns it to the PaypalEmailDelivery field.
func (o *MiniInvoice) SetPaypalEmailDelivery(v bool) {
	o.PaypalEmailDelivery = &v
}

// GetPaypalEmail returns the PaypalEmail field value if set, zero value otherwise.
func (o *MiniInvoice) GetPaypalEmail() string {
	if o == nil || IsNil(o.PaypalEmail) {
		var ret string
		return ret
	}
	return *o.PaypalEmail
}

// GetPaypalEmailOk returns a tuple with the PaypalEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetPaypalEmailOk() (*string, bool) {
	if o == nil || IsNil(o.PaypalEmail) {
		return nil, false
	}
	return o.PaypalEmail, true
}

// HasPaypalEmail returns a boolean if a field has been set.
func (o *MiniInvoice) HasPaypalEmail() bool {
	if o != nil && !IsNil(o.PaypalEmail) {
		return true
	}

	return false
}

// SetPaypalEmail gets a reference to the given string and assigns it to the PaypalEmail field.
func (o *MiniInvoice) SetPaypalEmail(v string) {
	o.PaypalEmail = &v
}

// GetPaypalOrderId returns the PaypalOrderId field value if set, zero value otherwise.
func (o *MiniInvoice) GetPaypalOrderId() string {
	if o == nil || IsNil(o.PaypalOrderId) {
		var ret string
		return ret
	}
	return *o.PaypalOrderId
}

// GetPaypalOrderIdOk returns a tuple with the PaypalOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetPaypalOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaypalOrderId) {
		return nil, false
	}
	return o.PaypalOrderId, true
}

// HasPaypalOrderId returns a boolean if a field has been set.
func (o *MiniInvoice) HasPaypalOrderId() bool {
	if o != nil && !IsNil(o.PaypalOrderId) {
		return true
	}

	return false
}

// SetPaypalOrderId gets a reference to the given string and assigns it to the PaypalOrderId field.
func (o *MiniInvoice) SetPaypalOrderId(v string) {
	o.PaypalOrderId = &v
}

// GetPaypalAuthorizationId returns the PaypalAuthorizationId field value if set, zero value otherwise.
func (o *MiniInvoice) GetPaypalAuthorizationId() string {
	if o == nil || IsNil(o.PaypalAuthorizationId) {
		var ret string
		return ret
	}
	return *o.PaypalAuthorizationId
}

// GetPaypalAuthorizationIdOk returns a tuple with the PaypalAuthorizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetPaypalAuthorizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaypalAuthorizationId) {
		return nil, false
	}
	return o.PaypalAuthorizationId, true
}

// HasPaypalAuthorizationId returns a boolean if a field has been set.
func (o *MiniInvoice) HasPaypalAuthorizationId() bool {
	if o != nil && !IsNil(o.PaypalAuthorizationId) {
		return true
	}

	return false
}

// SetPaypalAuthorizationId gets a reference to the given string and assigns it to the PaypalAuthorizationId field.
func (o *MiniInvoice) SetPaypalAuthorizationId(v string) {
	o.PaypalAuthorizationId = &v
}

// GetPaypalCaptureId returns the PaypalCaptureId field value if set, zero value otherwise.
func (o *MiniInvoice) GetPaypalCaptureId() string {
	if o == nil || IsNil(o.PaypalCaptureId) {
		var ret string
		return ret
	}
	return *o.PaypalCaptureId
}

// GetPaypalCaptureIdOk returns a tuple with the PaypalCaptureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetPaypalCaptureIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaypalCaptureId) {
		return nil, false
	}
	return o.PaypalCaptureId, true
}

// HasPaypalCaptureId returns a boolean if a field has been set.
func (o *MiniInvoice) HasPaypalCaptureId() bool {
	if o != nil && !IsNil(o.PaypalCaptureId) {
		return true
	}

	return false
}

// SetPaypalCaptureId gets a reference to the given string and assigns it to the PaypalCaptureId field.
func (o *MiniInvoice) SetPaypalCaptureId(v string) {
	o.PaypalCaptureId = &v
}

// GetPaypalPayerEmail returns the PaypalPayerEmail field value if set, zero value otherwise.
func (o *MiniInvoice) GetPaypalPayerEmail() string {
	if o == nil || IsNil(o.PaypalPayerEmail) {
		var ret string
		return ret
	}
	return *o.PaypalPayerEmail
}

// GetPaypalPayerEmailOk returns a tuple with the PaypalPayerEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetPaypalPayerEmailOk() (*string, bool) {
	if o == nil || IsNil(o.PaypalPayerEmail) {
		return nil, false
	}
	return o.PaypalPayerEmail, true
}

// HasPaypalPayerEmail returns a boolean if a field has been set.
func (o *MiniInvoice) HasPaypalPayerEmail() bool {
	if o != nil && !IsNil(o.PaypalPayerEmail) {
		return true
	}

	return false
}

// SetPaypalPayerEmail gets a reference to the given string and assigns it to the PaypalPayerEmail field.
func (o *MiniInvoice) SetPaypalPayerEmail(v string) {
	o.PaypalPayerEmail = &v
}

// GetPaypalFee returns the PaypalFee field value if set, zero value otherwise.
func (o *MiniInvoice) GetPaypalFee() string {
	if o == nil || IsNil(o.PaypalFee) {
		var ret string
		return ret
	}
	return *o.PaypalFee
}

// GetPaypalFeeOk returns a tuple with the PaypalFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetPaypalFeeOk() (*string, bool) {
	if o == nil || IsNil(o.PaypalFee) {
		return nil, false
	}
	return o.PaypalFee, true
}

// HasPaypalFee returns a boolean if a field has been set.
func (o *MiniInvoice) HasPaypalFee() bool {
	if o != nil && !IsNil(o.PaypalFee) {
		return true
	}

	return false
}

// SetPaypalFee gets a reference to the given string and assigns it to the PaypalFee field.
func (o *MiniInvoice) SetPaypalFee(v string) {
	o.PaypalFee = &v
}

// GetPaypalFeeCurrency returns the PaypalFeeCurrency field value if set, zero value otherwise.
func (o *MiniInvoice) GetPaypalFeeCurrency() Currency {
	if o == nil || IsNil(o.PaypalFeeCurrency) {
		var ret Currency
		return ret
	}
	return *o.PaypalFeeCurrency
}

// GetPaypalFeeCurrencyOk returns a tuple with the PaypalFeeCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetPaypalFeeCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.PaypalFeeCurrency) {
		return nil, false
	}
	return o.PaypalFeeCurrency, true
}

// HasPaypalFeeCurrency returns a boolean if a field has been set.
func (o *MiniInvoice) HasPaypalFeeCurrency() bool {
	if o != nil && !IsNil(o.PaypalFeeCurrency) {
		return true
	}

	return false
}

// SetPaypalFeeCurrency gets a reference to the given Currency and assigns it to the PaypalFeeCurrency field.
func (o *MiniInvoice) SetPaypalFeeCurrency(v Currency) {
	o.PaypalFeeCurrency = &v
}

// GetPaypalApiCredentials returns the PaypalApiCredentials field value if set, zero value otherwise.
func (o *MiniInvoice) GetPaypalApiCredentials() string {
	if o == nil || IsNil(o.PaypalApiCredentials) {
		var ret string
		return ret
	}
	return *o.PaypalApiCredentials
}

// GetPaypalApiCredentialsOk returns a tuple with the PaypalApiCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetPaypalApiCredentialsOk() (*string, bool) {
	if o == nil || IsNil(o.PaypalApiCredentials) {
		return nil, false
	}
	return o.PaypalApiCredentials, true
}

// HasPaypalApiCredentials returns a boolean if a field has been set.
func (o *MiniInvoice) HasPaypalApiCredentials() bool {
	if o != nil && !IsNil(o.PaypalApiCredentials) {
		return true
	}

	return false
}

// SetPaypalApiCredentials gets a reference to the given string and assigns it to the PaypalApiCredentials field.
func (o *MiniInvoice) SetPaypalApiCredentials(v string) {
	o.PaypalApiCredentials = &v
}

// GetPaypalSubscriptionId returns the PaypalSubscriptionId field value if set, zero value otherwise.
func (o *MiniInvoice) GetPaypalSubscriptionId() int32 {
	if o == nil || IsNil(o.PaypalSubscriptionId) {
		var ret int32
		return ret
	}
	return *o.PaypalSubscriptionId
}

// GetPaypalSubscriptionIdOk returns a tuple with the PaypalSubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetPaypalSubscriptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PaypalSubscriptionId) {
		return nil, false
	}
	return o.PaypalSubscriptionId, true
}

// HasPaypalSubscriptionId returns a boolean if a field has been set.
func (o *MiniInvoice) HasPaypalSubscriptionId() bool {
	if o != nil && !IsNil(o.PaypalSubscriptionId) {
		return true
	}

	return false
}

// SetPaypalSubscriptionId gets a reference to the given int32 and assigns it to the PaypalSubscriptionId field.
func (o *MiniInvoice) SetPaypalSubscriptionId(v int32) {
	o.PaypalSubscriptionId = &v
}

// GetPaypalSubscriptionLink returns the PaypalSubscriptionLink field value if set, zero value otherwise.
func (o *MiniInvoice) GetPaypalSubscriptionLink() int32 {
	if o == nil || IsNil(o.PaypalSubscriptionLink) {
		var ret int32
		return ret
	}
	return *o.PaypalSubscriptionLink
}

// GetPaypalSubscriptionLinkOk returns a tuple with the PaypalSubscriptionLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetPaypalSubscriptionLinkOk() (*int32, bool) {
	if o == nil || IsNil(o.PaypalSubscriptionLink) {
		return nil, false
	}
	return o.PaypalSubscriptionLink, true
}

// HasPaypalSubscriptionLink returns a boolean if a field has been set.
func (o *MiniInvoice) HasPaypalSubscriptionLink() bool {
	if o != nil && !IsNil(o.PaypalSubscriptionLink) {
		return true
	}

	return false
}

// SetPaypalSubscriptionLink gets a reference to the given int32 and assigns it to the PaypalSubscriptionLink field.
func (o *MiniInvoice) SetPaypalSubscriptionLink(v int32) {
	o.PaypalSubscriptionLink = &v
}

// GetLexOrderId returns the LexOrderId field value if set, zero value otherwise.
func (o *MiniInvoice) GetLexOrderId() string {
	if o == nil || IsNil(o.LexOrderId) {
		var ret string
		return ret
	}
	return *o.LexOrderId
}

// GetLexOrderIdOk returns a tuple with the LexOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetLexOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.LexOrderId) {
		return nil, false
	}
	return o.LexOrderId, true
}

// HasLexOrderId returns a boolean if a field has been set.
func (o *MiniInvoice) HasLexOrderId() bool {
	if o != nil && !IsNil(o.LexOrderId) {
		return true
	}

	return false
}

// SetLexOrderId gets a reference to the given string and assigns it to the LexOrderId field.
func (o *MiniInvoice) SetLexOrderId(v string) {
	o.LexOrderId = &v
}

// GetLexPaymentMethod returns the LexPaymentMethod field value if set, zero value otherwise.
func (o *MiniInvoice) GetLexPaymentMethod() string {
	if o == nil || IsNil(o.LexPaymentMethod) {
		var ret string
		return ret
	}
	return *o.LexPaymentMethod
}

// GetLexPaymentMethodOk returns a tuple with the LexPaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetLexPaymentMethodOk() (*string, bool) {
	if o == nil || IsNil(o.LexPaymentMethod) {
		return nil, false
	}
	return o.LexPaymentMethod, true
}

// HasLexPaymentMethod returns a boolean if a field has been set.
func (o *MiniInvoice) HasLexPaymentMethod() bool {
	if o != nil && !IsNil(o.LexPaymentMethod) {
		return true
	}

	return false
}

// SetLexPaymentMethod gets a reference to the given string and assigns it to the LexPaymentMethod field.
func (o *MiniInvoice) SetLexPaymentMethod(v string) {
	o.LexPaymentMethod = &v
}

// GetLexSecret returns the LexSecret field value if set, zero value otherwise.
func (o *MiniInvoice) GetLexSecret() string {
	if o == nil || IsNil(o.LexSecret) {
		var ret string
		return ret
	}
	return *o.LexSecret
}

// GetLexSecretOk returns a tuple with the LexSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetLexSecretOk() (*string, bool) {
	if o == nil || IsNil(o.LexSecret) {
		return nil, false
	}
	return o.LexSecret, true
}

// HasLexSecret returns a boolean if a field has been set.
func (o *MiniInvoice) HasLexSecret() bool {
	if o != nil && !IsNil(o.LexSecret) {
		return true
	}

	return false
}

// SetLexSecret gets a reference to the given string and assigns it to the LexSecret field.
func (o *MiniInvoice) SetLexSecret(v string) {
	o.LexSecret = &v
}

// GetVirtualPaymentsId returns the VirtualPaymentsId field value if set, zero value otherwise.
func (o *MiniInvoice) GetVirtualPaymentsId() string {
	if o == nil || IsNil(o.VirtualPaymentsId) {
		var ret string
		return ret
	}
	return *o.VirtualPaymentsId
}

// GetVirtualPaymentsIdOk returns a tuple with the VirtualPaymentsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetVirtualPaymentsIdOk() (*string, bool) {
	if o == nil || IsNil(o.VirtualPaymentsId) {
		return nil, false
	}
	return o.VirtualPaymentsId, true
}

// HasVirtualPaymentsId returns a boolean if a field has been set.
func (o *MiniInvoice) HasVirtualPaymentsId() bool {
	if o != nil && !IsNil(o.VirtualPaymentsId) {
		return true
	}

	return false
}

// SetVirtualPaymentsId gets a reference to the given string and assigns it to the VirtualPaymentsId field.
func (o *MiniInvoice) SetVirtualPaymentsId(v string) {
	o.VirtualPaymentsId = &v
}

// GetPaydashPaymentID returns the PaydashPaymentID field value if set, zero value otherwise.
func (o *MiniInvoice) GetPaydashPaymentID() string {
	if o == nil || IsNil(o.PaydashPaymentID) {
		var ret string
		return ret
	}
	return *o.PaydashPaymentID
}

// GetPaydashPaymentIDOk returns a tuple with the PaydashPaymentID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetPaydashPaymentIDOk() (*string, bool) {
	if o == nil || IsNil(o.PaydashPaymentID) {
		return nil, false
	}
	return o.PaydashPaymentID, true
}

// HasPaydashPaymentID returns a boolean if a field has been set.
func (o *MiniInvoice) HasPaydashPaymentID() bool {
	if o != nil && !IsNil(o.PaydashPaymentID) {
		return true
	}

	return false
}

// SetPaydashPaymentID gets a reference to the given string and assigns it to the PaydashPaymentID field.
func (o *MiniInvoice) SetPaydashPaymentID(v string) {
	o.PaydashPaymentID = &v
}

// GetPaydashApiKey returns the PaydashApiKey field value if set, zero value otherwise.
func (o *MiniInvoice) GetPaydashApiKey() string {
	if o == nil || IsNil(o.PaydashApiKey) {
		var ret string
		return ret
	}
	return *o.PaydashApiKey
}

// GetPaydashApiKeyOk returns a tuple with the PaydashApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetPaydashApiKeyOk() (*string, bool) {
	if o == nil || IsNil(o.PaydashApiKey) {
		return nil, false
	}
	return o.PaydashApiKey, true
}

// HasPaydashApiKey returns a boolean if a field has been set.
func (o *MiniInvoice) HasPaydashApiKey() bool {
	if o != nil && !IsNil(o.PaydashApiKey) {
		return true
	}

	return false
}

// SetPaydashApiKey gets a reference to the given string and assigns it to the PaydashApiKey field.
func (o *MiniInvoice) SetPaydashApiKey(v string) {
	o.PaydashApiKey = &v
}

// GetSkrillEmail returns the SkrillEmail field value if set, zero value otherwise.
func (o *MiniInvoice) GetSkrillEmail() string {
	if o == nil || IsNil(o.SkrillEmail) {
		var ret string
		return ret
	}
	return *o.SkrillEmail
}

// GetSkrillEmailOk returns a tuple with the SkrillEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetSkrillEmailOk() (*string, bool) {
	if o == nil || IsNil(o.SkrillEmail) {
		return nil, false
	}
	return o.SkrillEmail, true
}

// HasSkrillEmail returns a boolean if a field has been set.
func (o *MiniInvoice) HasSkrillEmail() bool {
	if o != nil && !IsNil(o.SkrillEmail) {
		return true
	}

	return false
}

// SetSkrillEmail gets a reference to the given string and assigns it to the SkrillEmail field.
func (o *MiniInvoice) SetSkrillEmail(v string) {
	o.SkrillEmail = &v
}

// GetSkrillSid returns the SkrillSid field value if set, zero value otherwise.
func (o *MiniInvoice) GetSkrillSid() string {
	if o == nil || IsNil(o.SkrillSid) {
		var ret string
		return ret
	}
	return *o.SkrillSid
}

// GetSkrillSidOk returns a tuple with the SkrillSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetSkrillSidOk() (*string, bool) {
	if o == nil || IsNil(o.SkrillSid) {
		return nil, false
	}
	return o.SkrillSid, true
}

// HasSkrillSid returns a boolean if a field has been set.
func (o *MiniInvoice) HasSkrillSid() bool {
	if o != nil && !IsNil(o.SkrillSid) {
		return true
	}

	return false
}

// SetSkrillSid gets a reference to the given string and assigns it to the SkrillSid field.
func (o *MiniInvoice) SetSkrillSid(v string) {
	o.SkrillSid = &v
}

// GetSkrillLink returns the SkrillLink field value if set, zero value otherwise.
func (o *MiniInvoice) GetSkrillLink() string {
	if o == nil || IsNil(o.SkrillLink) {
		var ret string
		return ret
	}
	return *o.SkrillLink
}

// GetSkrillLinkOk returns a tuple with the SkrillLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetSkrillLinkOk() (*string, bool) {
	if o == nil || IsNil(o.SkrillLink) {
		return nil, false
	}
	return o.SkrillLink, true
}

// HasSkrillLink returns a boolean if a field has been set.
func (o *MiniInvoice) HasSkrillLink() bool {
	if o != nil && !IsNil(o.SkrillLink) {
		return true
	}

	return false
}

// SetSkrillLink gets a reference to the given string and assigns it to the SkrillLink field.
func (o *MiniInvoice) SetSkrillLink(v string) {
	o.SkrillLink = &v
}

// GetStripeId returns the StripeId field value if set, zero value otherwise.
func (o *MiniInvoice) GetStripeId() string {
	if o == nil || IsNil(o.StripeId) {
		var ret string
		return ret
	}
	return *o.StripeId
}

// GetStripeIdOk returns a tuple with the StripeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetStripeIdOk() (*string, bool) {
	if o == nil || IsNil(o.StripeId) {
		return nil, false
	}
	return o.StripeId, true
}

// HasStripeId returns a boolean if a field has been set.
func (o *MiniInvoice) HasStripeId() bool {
	if o != nil && !IsNil(o.StripeId) {
		return true
	}

	return false
}

// SetStripeId gets a reference to the given string and assigns it to the StripeId field.
func (o *MiniInvoice) SetStripeId(v string) {
	o.StripeId = &v
}

// GetStripeClientSecret returns the StripeClientSecret field value if set, zero value otherwise.
func (o *MiniInvoice) GetStripeClientSecret() string {
	if o == nil || IsNil(o.StripeClientSecret) {
		var ret string
		return ret
	}
	return *o.StripeClientSecret
}

// GetStripeClientSecretOk returns a tuple with the StripeClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetStripeClientSecretOk() (*string, bool) {
	if o == nil || IsNil(o.StripeClientSecret) {
		return nil, false
	}
	return o.StripeClientSecret, true
}

// HasStripeClientSecret returns a boolean if a field has been set.
func (o *MiniInvoice) HasStripeClientSecret() bool {
	if o != nil && !IsNil(o.StripeClientSecret) {
		return true
	}

	return false
}

// SetStripeClientSecret gets a reference to the given string and assigns it to the StripeClientSecret field.
func (o *MiniInvoice) SetStripeClientSecret(v string) {
	o.StripeClientSecret = &v
}

// GetStripePriceId returns the StripePriceId field value if set, zero value otherwise.
func (o *MiniInvoice) GetStripePriceId() string {
	if o == nil || IsNil(o.StripePriceId) {
		var ret string
		return ret
	}
	return *o.StripePriceId
}

// GetStripePriceIdOk returns a tuple with the StripePriceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetStripePriceIdOk() (*string, bool) {
	if o == nil || IsNil(o.StripePriceId) {
		return nil, false
	}
	return o.StripePriceId, true
}

// HasStripePriceId returns a boolean if a field has been set.
func (o *MiniInvoice) HasStripePriceId() bool {
	if o != nil && !IsNil(o.StripePriceId) {
		return true
	}

	return false
}

// SetStripePriceId gets a reference to the given string and assigns it to the StripePriceId field.
func (o *MiniInvoice) SetStripePriceId(v string) {
	o.StripePriceId = &v
}

// GetStripeCustomerId returns the StripeCustomerId field value if set, zero value otherwise.
func (o *MiniInvoice) GetStripeCustomerId() string {
	if o == nil || IsNil(o.StripeCustomerId) {
		var ret string
		return ret
	}
	return *o.StripeCustomerId
}

// GetStripeCustomerIdOk returns a tuple with the StripeCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetStripeCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.StripeCustomerId) {
		return nil, false
	}
	return o.StripeCustomerId, true
}

// HasStripeCustomerId returns a boolean if a field has been set.
func (o *MiniInvoice) HasStripeCustomerId() bool {
	if o != nil && !IsNil(o.StripeCustomerId) {
		return true
	}

	return false
}

// SetStripeCustomerId gets a reference to the given string and assigns it to the StripeCustomerId field.
func (o *MiniInvoice) SetStripeCustomerId(v string) {
	o.StripeCustomerId = &v
}

// GetStripeSubscriptionId returns the StripeSubscriptionId field value if set, zero value otherwise.
func (o *MiniInvoice) GetStripeSubscriptionId() string {
	if o == nil || IsNil(o.StripeSubscriptionId) {
		var ret string
		return ret
	}
	return *o.StripeSubscriptionId
}

// GetStripeSubscriptionIdOk returns a tuple with the StripeSubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetStripeSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.StripeSubscriptionId) {
		return nil, false
	}
	return o.StripeSubscriptionId, true
}

// HasStripeSubscriptionId returns a boolean if a field has been set.
func (o *MiniInvoice) HasStripeSubscriptionId() bool {
	if o != nil && !IsNil(o.StripeSubscriptionId) {
		return true
	}

	return false
}

// SetStripeSubscriptionId gets a reference to the given string and assigns it to the StripeSubscriptionId field.
func (o *MiniInvoice) SetStripeSubscriptionId(v string) {
	o.StripeSubscriptionId = &v
}

// GetStripeInvoiceId returns the StripeInvoiceId field value if set, zero value otherwise.
func (o *MiniInvoice) GetStripeInvoiceId() string {
	if o == nil || IsNil(o.StripeInvoiceId) {
		var ret string
		return ret
	}
	return *o.StripeInvoiceId
}

// GetStripeInvoiceIdOk returns a tuple with the StripeInvoiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetStripeInvoiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.StripeInvoiceId) {
		return nil, false
	}
	return o.StripeInvoiceId, true
}

// HasStripeInvoiceId returns a boolean if a field has been set.
func (o *MiniInvoice) HasStripeInvoiceId() bool {
	if o != nil && !IsNil(o.StripeInvoiceId) {
		return true
	}

	return false
}

// SetStripeInvoiceId gets a reference to the given string and assigns it to the StripeInvoiceId field.
func (o *MiniInvoice) SetStripeInvoiceId(v string) {
	o.StripeInvoiceId = &v
}

// GetPerfectmoneyId returns the PerfectmoneyId field value if set, zero value otherwise.
func (o *MiniInvoice) GetPerfectmoneyId() string {
	if o == nil || IsNil(o.PerfectmoneyId) {
		var ret string
		return ret
	}
	return *o.PerfectmoneyId
}

// GetPerfectmoneyIdOk returns a tuple with the PerfectmoneyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetPerfectmoneyIdOk() (*string, bool) {
	if o == nil || IsNil(o.PerfectmoneyId) {
		return nil, false
	}
	return o.PerfectmoneyId, true
}

// HasPerfectmoneyId returns a boolean if a field has been set.
func (o *MiniInvoice) HasPerfectmoneyId() bool {
	if o != nil && !IsNil(o.PerfectmoneyId) {
		return true
	}

	return false
}

// SetPerfectmoneyId gets a reference to the given string and assigns it to the PerfectmoneyId field.
func (o *MiniInvoice) SetPerfectmoneyId(v string) {
	o.PerfectmoneyId = &v
}

// GetBinanceInvoiceId returns the BinanceInvoiceId field value if set, zero value otherwise.
func (o *MiniInvoice) GetBinanceInvoiceId() string {
	if o == nil || IsNil(o.BinanceInvoiceId) {
		var ret string
		return ret
	}
	return *o.BinanceInvoiceId
}

// GetBinanceInvoiceIdOk returns a tuple with the BinanceInvoiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetBinanceInvoiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.BinanceInvoiceId) {
		return nil, false
	}
	return o.BinanceInvoiceId, true
}

// HasBinanceInvoiceId returns a boolean if a field has been set.
func (o *MiniInvoice) HasBinanceInvoiceId() bool {
	if o != nil && !IsNil(o.BinanceInvoiceId) {
		return true
	}

	return false
}

// SetBinanceInvoiceId gets a reference to the given string and assigns it to the BinanceInvoiceId field.
func (o *MiniInvoice) SetBinanceInvoiceId(v string) {
	o.BinanceInvoiceId = &v
}

// GetBinanceQrcode returns the BinanceQrcode field value if set, zero value otherwise.
func (o *MiniInvoice) GetBinanceQrcode() string {
	if o == nil || IsNil(o.BinanceQrcode) {
		var ret string
		return ret
	}
	return *o.BinanceQrcode
}

// GetBinanceQrcodeOk returns a tuple with the BinanceQrcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetBinanceQrcodeOk() (*string, bool) {
	if o == nil || IsNil(o.BinanceQrcode) {
		return nil, false
	}
	return o.BinanceQrcode, true
}

// HasBinanceQrcode returns a boolean if a field has been set.
func (o *MiniInvoice) HasBinanceQrcode() bool {
	if o != nil && !IsNil(o.BinanceQrcode) {
		return true
	}

	return false
}

// SetBinanceQrcode gets a reference to the given string and assigns it to the BinanceQrcode field.
func (o *MiniInvoice) SetBinanceQrcode(v string) {
	o.BinanceQrcode = &v
}

// GetBinanceCheckoutUrl returns the BinanceCheckoutUrl field value if set, zero value otherwise.
func (o *MiniInvoice) GetBinanceCheckoutUrl() string {
	if o == nil || IsNil(o.BinanceCheckoutUrl) {
		var ret string
		return ret
	}
	return *o.BinanceCheckoutUrl
}

// GetBinanceCheckoutUrlOk returns a tuple with the BinanceCheckoutUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetBinanceCheckoutUrlOk() (*string, bool) {
	if o == nil || IsNil(o.BinanceCheckoutUrl) {
		return nil, false
	}
	return o.BinanceCheckoutUrl, true
}

// HasBinanceCheckoutUrl returns a boolean if a field has been set.
func (o *MiniInvoice) HasBinanceCheckoutUrl() bool {
	if o != nil && !IsNil(o.BinanceCheckoutUrl) {
		return true
	}

	return false
}

// SetBinanceCheckoutUrl gets a reference to the given string and assigns it to the BinanceCheckoutUrl field.
func (o *MiniInvoice) SetBinanceCheckoutUrl(v string) {
	o.BinanceCheckoutUrl = &v
}

// GetBinancePayout returns the BinancePayout field value if set, zero value otherwise.
func (o *MiniInvoice) GetBinancePayout() int32 {
	if o == nil || IsNil(o.BinancePayout) {
		var ret int32
		return ret
	}
	return *o.BinancePayout
}

// GetBinancePayoutOk returns a tuple with the BinancePayout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetBinancePayoutOk() (*int32, bool) {
	if o == nil || IsNil(o.BinancePayout) {
		return nil, false
	}
	return o.BinancePayout, true
}

// HasBinancePayout returns a boolean if a field has been set.
func (o *MiniInvoice) HasBinancePayout() bool {
	if o != nil && !IsNil(o.BinancePayout) {
		return true
	}

	return false
}

// SetBinancePayout gets a reference to the given int32 and assigns it to the BinancePayout field.
func (o *MiniInvoice) SetBinancePayout(v int32) {
	o.BinancePayout = &v
}

// GetCashappQrcode returns the CashappQrcode field value if set, zero value otherwise.
func (o *MiniInvoice) GetCashappQrcode() string {
	if o == nil || IsNil(o.CashappQrcode) {
		var ret string
		return ret
	}
	return *o.CashappQrcode
}

// GetCashappQrcodeOk returns a tuple with the CashappQrcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetCashappQrcodeOk() (*string, bool) {
	if o == nil || IsNil(o.CashappQrcode) {
		return nil, false
	}
	return o.CashappQrcode, true
}

// HasCashappQrcode returns a boolean if a field has been set.
func (o *MiniInvoice) HasCashappQrcode() bool {
	if o != nil && !IsNil(o.CashappQrcode) {
		return true
	}

	return false
}

// SetCashappQrcode gets a reference to the given string and assigns it to the CashappQrcode field.
func (o *MiniInvoice) SetCashappQrcode(v string) {
	o.CashappQrcode = &v
}

// GetCashappNote returns the CashappNote field value if set, zero value otherwise.
func (o *MiniInvoice) GetCashappNote() string {
	if o == nil || IsNil(o.CashappNote) {
		var ret string
		return ret
	}
	return *o.CashappNote
}

// GetCashappNoteOk returns a tuple with the CashappNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetCashappNoteOk() (*string, bool) {
	if o == nil || IsNil(o.CashappNote) {
		return nil, false
	}
	return o.CashappNote, true
}

// HasCashappNote returns a boolean if a field has been set.
func (o *MiniInvoice) HasCashappNote() bool {
	if o != nil && !IsNil(o.CashappNote) {
		return true
	}

	return false
}

// SetCashappNote gets a reference to the given string and assigns it to the CashappNote field.
func (o *MiniInvoice) SetCashappNote(v string) {
	o.CashappNote = &v
}

// GetCashappCashtag returns the CashappCashtag field value if set, zero value otherwise.
func (o *MiniInvoice) GetCashappCashtag() string {
	if o == nil || IsNil(o.CashappCashtag) {
		var ret string
		return ret
	}
	return *o.CashappCashtag
}

// GetCashappCashtagOk returns a tuple with the CashappCashtag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetCashappCashtagOk() (*string, bool) {
	if o == nil || IsNil(o.CashappCashtag) {
		return nil, false
	}
	return o.CashappCashtag, true
}

// HasCashappCashtag returns a boolean if a field has been set.
func (o *MiniInvoice) HasCashappCashtag() bool {
	if o != nil && !IsNil(o.CashappCashtag) {
		return true
	}

	return false
}

// SetCashappCashtag gets a reference to the given string and assigns it to the CashappCashtag field.
func (o *MiniInvoice) SetCashappCashtag(v string) {
	o.CashappCashtag = &v
}

// GetCryptoAddress returns the CryptoAddress field value if set, zero value otherwise.
func (o *MiniInvoice) GetCryptoAddress() string {
	if o == nil || IsNil(o.CryptoAddress) {
		var ret string
		return ret
	}
	return *o.CryptoAddress
}

// GetCryptoAddressOk returns a tuple with the CryptoAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetCryptoAddressOk() (*string, bool) {
	if o == nil || IsNil(o.CryptoAddress) {
		return nil, false
	}
	return o.CryptoAddress, true
}

// HasCryptoAddress returns a boolean if a field has been set.
func (o *MiniInvoice) HasCryptoAddress() bool {
	if o != nil && !IsNil(o.CryptoAddress) {
		return true
	}

	return false
}

// SetCryptoAddress gets a reference to the given string and assigns it to the CryptoAddress field.
func (o *MiniInvoice) SetCryptoAddress(v string) {
	o.CryptoAddress = &v
}

// GetCryptoAmount returns the CryptoAmount field value if set, zero value otherwise.
func (o *MiniInvoice) GetCryptoAmount() float64 {
	if o == nil || IsNil(o.CryptoAmount) {
		var ret float64
		return ret
	}
	return *o.CryptoAmount
}

// GetCryptoAmountOk returns a tuple with the CryptoAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetCryptoAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CryptoAmount) {
		return nil, false
	}
	return o.CryptoAmount, true
}

// HasCryptoAmount returns a boolean if a field has been set.
func (o *MiniInvoice) HasCryptoAmount() bool {
	if o != nil && !IsNil(o.CryptoAmount) {
		return true
	}

	return false
}

// SetCryptoAmount gets a reference to the given float64 and assigns it to the CryptoAmount field.
func (o *MiniInvoice) SetCryptoAmount(v float64) {
	o.CryptoAmount = &v
}

// GetCryptoReceived returns the CryptoReceived field value if set, zero value otherwise.
func (o *MiniInvoice) GetCryptoReceived() float64 {
	if o == nil || IsNil(o.CryptoReceived) {
		var ret float64
		return ret
	}
	return *o.CryptoReceived
}

// GetCryptoReceivedOk returns a tuple with the CryptoReceived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetCryptoReceivedOk() (*float64, bool) {
	if o == nil || IsNil(o.CryptoReceived) {
		return nil, false
	}
	return o.CryptoReceived, true
}

// HasCryptoReceived returns a boolean if a field has been set.
func (o *MiniInvoice) HasCryptoReceived() bool {
	if o != nil && !IsNil(o.CryptoReceived) {
		return true
	}

	return false
}

// SetCryptoReceived gets a reference to the given float64 and assigns it to the CryptoReceived field.
func (o *MiniInvoice) SetCryptoReceived(v float64) {
	o.CryptoReceived = &v
}

// GetCryptoFeePaid returns the CryptoFeePaid field value if set, zero value otherwise.
func (o *MiniInvoice) GetCryptoFeePaid() float32 {
	if o == nil || IsNil(o.CryptoFeePaid) {
		var ret float32
		return ret
	}
	return *o.CryptoFeePaid
}

// GetCryptoFeePaidOk returns a tuple with the CryptoFeePaid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetCryptoFeePaidOk() (*float32, bool) {
	if o == nil || IsNil(o.CryptoFeePaid) {
		return nil, false
	}
	return o.CryptoFeePaid, true
}

// HasCryptoFeePaid returns a boolean if a field has been set.
func (o *MiniInvoice) HasCryptoFeePaid() bool {
	if o != nil && !IsNil(o.CryptoFeePaid) {
		return true
	}

	return false
}

// SetCryptoFeePaid gets a reference to the given float32 and assigns it to the CryptoFeePaid field.
func (o *MiniInvoice) SetCryptoFeePaid(v float32) {
	o.CryptoFeePaid = &v
}

// GetCryptoFeeOwed returns the CryptoFeeOwed field value if set, zero value otherwise.
func (o *MiniInvoice) GetCryptoFeeOwed() float32 {
	if o == nil || IsNil(o.CryptoFeeOwed) {
		var ret float32
		return ret
	}
	return *o.CryptoFeeOwed
}

// GetCryptoFeeOwedOk returns a tuple with the CryptoFeeOwed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetCryptoFeeOwedOk() (*float32, bool) {
	if o == nil || IsNil(o.CryptoFeeOwed) {
		return nil, false
	}
	return o.CryptoFeeOwed, true
}

// HasCryptoFeeOwed returns a boolean if a field has been set.
func (o *MiniInvoice) HasCryptoFeeOwed() bool {
	if o != nil && !IsNil(o.CryptoFeeOwed) {
		return true
	}

	return false
}

// SetCryptoFeeOwed gets a reference to the given float32 and assigns it to the CryptoFeeOwed field.
func (o *MiniInvoice) SetCryptoFeeOwed(v float32) {
	o.CryptoFeeOwed = &v
}

// GetCryptoUri returns the CryptoUri field value if set, zero value otherwise.
func (o *MiniInvoice) GetCryptoUri() string {
	if o == nil || IsNil(o.CryptoUri) {
		var ret string
		return ret
	}
	return *o.CryptoUri
}

// GetCryptoUriOk returns a tuple with the CryptoUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetCryptoUriOk() (*string, bool) {
	if o == nil || IsNil(o.CryptoUri) {
		return nil, false
	}
	return o.CryptoUri, true
}

// HasCryptoUri returns a boolean if a field has been set.
func (o *MiniInvoice) HasCryptoUri() bool {
	if o != nil && !IsNil(o.CryptoUri) {
		return true
	}

	return false
}

// SetCryptoUri gets a reference to the given string and assigns it to the CryptoUri field.
func (o *MiniInvoice) SetCryptoUri(v string) {
	o.CryptoUri = &v
}

// GetBitcoinLnRHash returns the BitcoinLnRHash field value if set, zero value otherwise.
func (o *MiniInvoice) GetBitcoinLnRHash() string {
	if o == nil || IsNil(o.BitcoinLnRHash) {
		var ret string
		return ret
	}
	return *o.BitcoinLnRHash
}

// GetBitcoinLnRHashOk returns a tuple with the BitcoinLnRHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetBitcoinLnRHashOk() (*string, bool) {
	if o == nil || IsNil(o.BitcoinLnRHash) {
		return nil, false
	}
	return o.BitcoinLnRHash, true
}

// HasBitcoinLnRHash returns a boolean if a field has been set.
func (o *MiniInvoice) HasBitcoinLnRHash() bool {
	if o != nil && !IsNil(o.BitcoinLnRHash) {
		return true
	}

	return false
}

// SetBitcoinLnRHash gets a reference to the given string and assigns it to the BitcoinLnRHash field.
func (o *MiniInvoice) SetBitcoinLnRHash(v string) {
	o.BitcoinLnRHash = &v
}

// GetCryptoConfirmationsNeeded returns the CryptoConfirmationsNeeded field value if set, zero value otherwise.
func (o *MiniInvoice) GetCryptoConfirmationsNeeded() int32 {
	if o == nil || IsNil(o.CryptoConfirmationsNeeded) {
		var ret int32
		return ret
	}
	return *o.CryptoConfirmationsNeeded
}

// GetCryptoConfirmationsNeededOk returns a tuple with the CryptoConfirmationsNeeded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetCryptoConfirmationsNeededOk() (*int32, bool) {
	if o == nil || IsNil(o.CryptoConfirmationsNeeded) {
		return nil, false
	}
	return o.CryptoConfirmationsNeeded, true
}

// HasCryptoConfirmationsNeeded returns a boolean if a field has been set.
func (o *MiniInvoice) HasCryptoConfirmationsNeeded() bool {
	if o != nil && !IsNil(o.CryptoConfirmationsNeeded) {
		return true
	}

	return false
}

// SetCryptoConfirmationsNeeded gets a reference to the given int32 and assigns it to the CryptoConfirmationsNeeded field.
func (o *MiniInvoice) SetCryptoConfirmationsNeeded(v int32) {
	o.CryptoConfirmationsNeeded = &v
}

// GetCryptoWalletVersion returns the CryptoWalletVersion field value if set, zero value otherwise.
func (o *MiniInvoice) GetCryptoWalletVersion() string {
	if o == nil || IsNil(o.CryptoWalletVersion) {
		var ret string
		return ret
	}
	return *o.CryptoWalletVersion
}

// GetCryptoWalletVersionOk returns a tuple with the CryptoWalletVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetCryptoWalletVersionOk() (*string, bool) {
	if o == nil || IsNil(o.CryptoWalletVersion) {
		return nil, false
	}
	return o.CryptoWalletVersion, true
}

// HasCryptoWalletVersion returns a boolean if a field has been set.
func (o *MiniInvoice) HasCryptoWalletVersion() bool {
	if o != nil && !IsNil(o.CryptoWalletVersion) {
		return true
	}

	return false
}

// SetCryptoWalletVersion gets a reference to the given string and assigns it to the CryptoWalletVersion field.
func (o *MiniInvoice) SetCryptoWalletVersion(v string) {
	o.CryptoWalletVersion = &v
}

// GetCryptoPayout returns the CryptoPayout field value if set, zero value otherwise.
func (o *MiniInvoice) GetCryptoPayout() bool {
	if o == nil || IsNil(o.CryptoPayout) {
		var ret bool
		return ret
	}
	return *o.CryptoPayout
}

// GetCryptoPayoutOk returns a tuple with the CryptoPayout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetCryptoPayoutOk() (*bool, bool) {
	if o == nil || IsNil(o.CryptoPayout) {
		return nil, false
	}
	return o.CryptoPayout, true
}

// HasCryptoPayout returns a boolean if a field has been set.
func (o *MiniInvoice) HasCryptoPayout() bool {
	if o != nil && !IsNil(o.CryptoPayout) {
		return true
	}

	return false
}

// SetCryptoPayout gets a reference to the given bool and assigns it to the CryptoPayout field.
func (o *MiniInvoice) SetCryptoPayout(v bool) {
	o.CryptoPayout = &v
}

// GetCryptoScheduledPayout returns the CryptoScheduledPayout field value if set, zero value otherwise.
func (o *MiniInvoice) GetCryptoScheduledPayout() bool {
	if o == nil || IsNil(o.CryptoScheduledPayout) {
		var ret bool
		return ret
	}
	return *o.CryptoScheduledPayout
}

// GetCryptoScheduledPayoutOk returns a tuple with the CryptoScheduledPayout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetCryptoScheduledPayoutOk() (*bool, bool) {
	if o == nil || IsNil(o.CryptoScheduledPayout) {
		return nil, false
	}
	return o.CryptoScheduledPayout, true
}

// HasCryptoScheduledPayout returns a boolean if a field has been set.
func (o *MiniInvoice) HasCryptoScheduledPayout() bool {
	if o != nil && !IsNil(o.CryptoScheduledPayout) {
		return true
	}

	return false
}

// SetCryptoScheduledPayout gets a reference to the given bool and assigns it to the CryptoScheduledPayout field.
func (o *MiniInvoice) SetCryptoScheduledPayout(v bool) {
	o.CryptoScheduledPayout = &v
}

// GetCryptoPayoutType returns the CryptoPayoutType field value if set, zero value otherwise.
func (o *MiniInvoice) GetCryptoPayoutType() string {
	if o == nil || IsNil(o.CryptoPayoutType) {
		var ret string
		return ret
	}
	return *o.CryptoPayoutType
}

// GetCryptoPayoutTypeOk returns a tuple with the CryptoPayoutType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetCryptoPayoutTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CryptoPayoutType) {
		return nil, false
	}
	return o.CryptoPayoutType, true
}

// HasCryptoPayoutType returns a boolean if a field has been set.
func (o *MiniInvoice) HasCryptoPayoutType() bool {
	if o != nil && !IsNil(o.CryptoPayoutType) {
		return true
	}

	return false
}

// SetCryptoPayoutType gets a reference to the given string and assigns it to the CryptoPayoutType field.
func (o *MiniInvoice) SetCryptoPayoutType(v string) {
	o.CryptoPayoutType = &v
}

// GetFeeBilled returns the FeeBilled field value if set, zero value otherwise.
func (o *MiniInvoice) GetFeeBilled() bool {
	if o == nil || IsNil(o.FeeBilled) {
		var ret bool
		return ret
	}
	return *o.FeeBilled
}

// GetFeeBilledOk returns a tuple with the FeeBilled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetFeeBilledOk() (*bool, bool) {
	if o == nil || IsNil(o.FeeBilled) {
		return nil, false
	}
	return o.FeeBilled, true
}

// HasFeeBilled returns a boolean if a field has been set.
func (o *MiniInvoice) HasFeeBilled() bool {
	if o != nil && !IsNil(o.FeeBilled) {
		return true
	}

	return false
}

// SetFeeBilled gets a reference to the given bool and assigns it to the FeeBilled field.
func (o *MiniInvoice) SetFeeBilled(v bool) {
	o.FeeBilled = &v
}

// GetBillInfo returns the BillInfo field value if set, zero value otherwise.
func (o *MiniInvoice) GetBillInfo() map[string]interface{} {
	if o == nil || IsNil(o.BillInfo) {
		var ret map[string]interface{}
		return ret
	}
	return o.BillInfo
}

// GetBillInfoOk returns a tuple with the BillInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetBillInfoOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.BillInfo) {
		return map[string]interface{}{}, false
	}
	return o.BillInfo, true
}

// HasBillInfo returns a boolean if a field has been set.
func (o *MiniInvoice) HasBillInfo() bool {
	if o != nil && !IsNil(o.BillInfo) {
		return true
	}

	return false
}

// SetBillInfo gets a reference to the given map[string]interface{} and assigns it to the BillInfo field.
func (o *MiniInvoice) SetBillInfo(v map[string]interface{}) {
	o.BillInfo = v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *MiniInvoice) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *MiniInvoice) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *MiniInvoice) SetCountry(v string) {
	o.Country = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *MiniInvoice) GetLocation() string {
	if o == nil || IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetLocationOk() (*string, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *MiniInvoice) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *MiniInvoice) SetLocation(v string) {
	o.Location = &v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *MiniInvoice) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *MiniInvoice) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *MiniInvoice) SetIp(v string) {
	o.Ip = &v
}

// GetIsVpnOrProxy returns the IsVpnOrProxy field value if set, zero value otherwise.
func (o *MiniInvoice) GetIsVpnOrProxy() bool {
	if o == nil || IsNil(o.IsVpnOrProxy) {
		var ret bool
		return ret
	}
	return *o.IsVpnOrProxy
}

// GetIsVpnOrProxyOk returns a tuple with the IsVpnOrProxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetIsVpnOrProxyOk() (*bool, bool) {
	if o == nil || IsNil(o.IsVpnOrProxy) {
		return nil, false
	}
	return o.IsVpnOrProxy, true
}

// HasIsVpnOrProxy returns a boolean if a field has been set.
func (o *MiniInvoice) HasIsVpnOrProxy() bool {
	if o != nil && !IsNil(o.IsVpnOrProxy) {
		return true
	}

	return false
}

// SetIsVpnOrProxy gets a reference to the given bool and assigns it to the IsVpnOrProxy field.
func (o *MiniInvoice) SetIsVpnOrProxy(v bool) {
	o.IsVpnOrProxy = &v
}

// GetUserAgent returns the UserAgent field value if set, zero value otherwise.
func (o *MiniInvoice) GetUserAgent() string {
	if o == nil || IsNil(o.UserAgent) {
		var ret string
		return ret
	}
	return *o.UserAgent
}

// GetUserAgentOk returns a tuple with the UserAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetUserAgentOk() (*string, bool) {
	if o == nil || IsNil(o.UserAgent) {
		return nil, false
	}
	return o.UserAgent, true
}

// HasUserAgent returns a boolean if a field has been set.
func (o *MiniInvoice) HasUserAgent() bool {
	if o != nil && !IsNil(o.UserAgent) {
		return true
	}

	return false
}

// SetUserAgent gets a reference to the given string and assigns it to the UserAgent field.
func (o *MiniInvoice) SetUserAgent(v string) {
	o.UserAgent = &v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *MiniInvoice) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *MiniInvoice) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *MiniInvoice) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetDeveloperInvoice returns the DeveloperInvoice field value if set, zero value otherwise.
func (o *MiniInvoice) GetDeveloperInvoice() bool {
	if o == nil || IsNil(o.DeveloperInvoice) {
		var ret bool
		return ret
	}
	return *o.DeveloperInvoice
}

// GetDeveloperInvoiceOk returns a tuple with the DeveloperInvoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetDeveloperInvoiceOk() (*bool, bool) {
	if o == nil || IsNil(o.DeveloperInvoice) {
		return nil, false
	}
	return o.DeveloperInvoice, true
}

// HasDeveloperInvoice returns a boolean if a field has been set.
func (o *MiniInvoice) HasDeveloperInvoice() bool {
	if o != nil && !IsNil(o.DeveloperInvoice) {
		return true
	}

	return false
}

// SetDeveloperInvoice gets a reference to the given bool and assigns it to the DeveloperInvoice field.
func (o *MiniInvoice) SetDeveloperInvoice(v bool) {
	o.DeveloperInvoice = &v
}

// GetDeveloperTitle returns the DeveloperTitle field value if set, zero value otherwise.
func (o *MiniInvoice) GetDeveloperTitle() string {
	if o == nil || IsNil(o.DeveloperTitle) {
		var ret string
		return ret
	}
	return *o.DeveloperTitle
}

// GetDeveloperTitleOk returns a tuple with the DeveloperTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetDeveloperTitleOk() (*string, bool) {
	if o == nil || IsNil(o.DeveloperTitle) {
		return nil, false
	}
	return o.DeveloperTitle, true
}

// HasDeveloperTitle returns a boolean if a field has been set.
func (o *MiniInvoice) HasDeveloperTitle() bool {
	if o != nil && !IsNil(o.DeveloperTitle) {
		return true
	}

	return false
}

// SetDeveloperTitle gets a reference to the given string and assigns it to the DeveloperTitle field.
func (o *MiniInvoice) SetDeveloperTitle(v string) {
	o.DeveloperTitle = &v
}

// GetDeveloperWebhook returns the DeveloperWebhook field value if set, zero value otherwise.
func (o *MiniInvoice) GetDeveloperWebhook() string {
	if o == nil || IsNil(o.DeveloperWebhook) {
		var ret string
		return ret
	}
	return *o.DeveloperWebhook
}

// GetDeveloperWebhookOk returns a tuple with the DeveloperWebhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetDeveloperWebhookOk() (*string, bool) {
	if o == nil || IsNil(o.DeveloperWebhook) {
		return nil, false
	}
	return o.DeveloperWebhook, true
}

// HasDeveloperWebhook returns a boolean if a field has been set.
func (o *MiniInvoice) HasDeveloperWebhook() bool {
	if o != nil && !IsNil(o.DeveloperWebhook) {
		return true
	}

	return false
}

// SetDeveloperWebhook gets a reference to the given string and assigns it to the DeveloperWebhook field.
func (o *MiniInvoice) SetDeveloperWebhook(v string) {
	o.DeveloperWebhook = &v
}

// GetDeveloperReturnUrl returns the DeveloperReturnUrl field value if set, zero value otherwise.
func (o *MiniInvoice) GetDeveloperReturnUrl() string {
	if o == nil || IsNil(o.DeveloperReturnUrl) {
		var ret string
		return ret
	}
	return *o.DeveloperReturnUrl
}

// GetDeveloperReturnUrlOk returns a tuple with the DeveloperReturnUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetDeveloperReturnUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DeveloperReturnUrl) {
		return nil, false
	}
	return o.DeveloperReturnUrl, true
}

// HasDeveloperReturnUrl returns a boolean if a field has been set.
func (o *MiniInvoice) HasDeveloperReturnUrl() bool {
	if o != nil && !IsNil(o.DeveloperReturnUrl) {
		return true
	}

	return false
}

// SetDeveloperReturnUrl gets a reference to the given string and assigns it to the DeveloperReturnUrl field.
func (o *MiniInvoice) SetDeveloperReturnUrl(v string) {
	o.DeveloperReturnUrl = &v
}

// GetPayoutConfiguration returns the PayoutConfiguration field value if set, zero value otherwise.
func (o *MiniInvoice) GetPayoutConfiguration() string {
	if o == nil || IsNil(o.PayoutConfiguration) {
		var ret string
		return ret
	}
	return *o.PayoutConfiguration
}

// GetPayoutConfigurationOk returns a tuple with the PayoutConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetPayoutConfigurationOk() (*string, bool) {
	if o == nil || IsNil(o.PayoutConfiguration) {
		return nil, false
	}
	return o.PayoutConfiguration, true
}

// HasPayoutConfiguration returns a boolean if a field has been set.
func (o *MiniInvoice) HasPayoutConfiguration() bool {
	if o != nil && !IsNil(o.PayoutConfiguration) {
		return true
	}

	return false
}

// SetPayoutConfiguration gets a reference to the given string and assigns it to the PayoutConfiguration field.
func (o *MiniInvoice) SetPayoutConfiguration(v string) {
	o.PayoutConfiguration = &v
}

// GetFeePercentage returns the FeePercentage field value if set, zero value otherwise.
func (o *MiniInvoice) GetFeePercentage() int32 {
	if o == nil || IsNil(o.FeePercentage) {
		var ret int32
		return ret
	}
	return *o.FeePercentage
}

// GetFeePercentageOk returns a tuple with the FeePercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetFeePercentageOk() (*int32, bool) {
	if o == nil || IsNil(o.FeePercentage) {
		return nil, false
	}
	return o.FeePercentage, true
}

// HasFeePercentage returns a boolean if a field has been set.
func (o *MiniInvoice) HasFeePercentage() bool {
	if o != nil && !IsNil(o.FeePercentage) {
		return true
	}

	return false
}

// SetFeePercentage gets a reference to the given int32 and assigns it to the FeePercentage field.
func (o *MiniInvoice) SetFeePercentage(v int32) {
	o.FeePercentage = &v
}

// GetFeeBreakdown returns the FeeBreakdown field value if set, zero value otherwise.
func (o *MiniInvoice) GetFeeBreakdown() FeeBreakdown {
	if o == nil || IsNil(o.FeeBreakdown) {
		var ret FeeBreakdown
		return ret
	}
	return *o.FeeBreakdown
}

// GetFeeBreakdownOk returns a tuple with the FeeBreakdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetFeeBreakdownOk() (*FeeBreakdown, bool) {
	if o == nil || IsNil(o.FeeBreakdown) {
		return nil, false
	}
	return o.FeeBreakdown, true
}

// HasFeeBreakdown returns a boolean if a field has been set.
func (o *MiniInvoice) HasFeeBreakdown() bool {
	if o != nil && !IsNil(o.FeeBreakdown) {
		return true
	}

	return false
}

// SetFeeBreakdown gets a reference to the given FeeBreakdown and assigns it to the FeeBreakdown field.
func (o *MiniInvoice) SetFeeBreakdown(v FeeBreakdown) {
	o.FeeBreakdown = &v
}

// GetToProcess returns the ToProcess field value if set, zero value otherwise.
func (o *MiniInvoice) GetToProcess() float32 {
	if o == nil || IsNil(o.ToProcess) {
		var ret float32
		return ret
	}
	return *o.ToProcess
}

// GetToProcessOk returns a tuple with the ToProcess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetToProcessOk() (*float32, bool) {
	if o == nil || IsNil(o.ToProcess) {
		return nil, false
	}
	return o.ToProcess, true
}

// HasToProcess returns a boolean if a field has been set.
func (o *MiniInvoice) HasToProcess() bool {
	if o != nil && !IsNil(o.ToProcess) {
		return true
	}

	return false
}

// SetToProcess gets a reference to the given float32 and assigns it to the ToProcess field.
func (o *MiniInvoice) SetToProcess(v float32) {
	o.ToProcess = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MiniInvoice) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MiniInvoice) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *MiniInvoice) SetStatus(v string) {
	o.Status = &v
}

// GetStatusDetails returns the StatusDetails field value if set, zero value otherwise.
func (o *MiniInvoice) GetStatusDetails() string {
	if o == nil || IsNil(o.StatusDetails) {
		var ret string
		return ret
	}
	return *o.StatusDetails
}

// GetStatusDetailsOk returns a tuple with the StatusDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetStatusDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.StatusDetails) {
		return nil, false
	}
	return o.StatusDetails, true
}

// HasStatusDetails returns a boolean if a field has been set.
func (o *MiniInvoice) HasStatusDetails() bool {
	if o != nil && !IsNil(o.StatusDetails) {
		return true
	}

	return false
}

// SetStatusDetails gets a reference to the given string and assigns it to the StatusDetails field.
func (o *MiniInvoice) SetStatusDetails(v string) {
	o.StatusDetails = &v
}

// GetVoidDetails returns the VoidDetails field value if set, zero value otherwise.
func (o *MiniInvoice) GetVoidDetails() string {
	if o == nil || IsNil(o.VoidDetails) {
		var ret string
		return ret
	}
	return *o.VoidDetails
}

// GetVoidDetailsOk returns a tuple with the VoidDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetVoidDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.VoidDetails) {
		return nil, false
	}
	return o.VoidDetails, true
}

// HasVoidDetails returns a boolean if a field has been set.
func (o *MiniInvoice) HasVoidDetails() bool {
	if o != nil && !IsNil(o.VoidDetails) {
		return true
	}

	return false
}

// SetVoidDetails gets a reference to the given string and assigns it to the VoidDetails field.
func (o *MiniInvoice) SetVoidDetails(v string) {
	o.VoidDetails = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *MiniInvoice) GetEnvironment() string {
	if o == nil || IsNil(o.Environment) {
		var ret string
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetEnvironmentOk() (*string, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *MiniInvoice) HasEnvironment() bool {
	if o != nil && !IsNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given string and assigns it to the Environment field.
func (o *MiniInvoice) SetEnvironment(v string) {
	o.Environment = &v
}

// GetDayValue returns the DayValue field value if set, zero value otherwise.
func (o *MiniInvoice) GetDayValue() int32 {
	if o == nil || IsNil(o.DayValue) {
		var ret int32
		return ret
	}
	return *o.DayValue
}

// GetDayValueOk returns a tuple with the DayValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetDayValueOk() (*int32, bool) {
	if o == nil || IsNil(o.DayValue) {
		return nil, false
	}
	return o.DayValue, true
}

// HasDayValue returns a boolean if a field has been set.
func (o *MiniInvoice) HasDayValue() bool {
	if o != nil && !IsNil(o.DayValue) {
		return true
	}

	return false
}

// SetDayValue gets a reference to the given int32 and assigns it to the DayValue field.
func (o *MiniInvoice) SetDayValue(v int32) {
	o.DayValue = &v
}

// GetDay returns the Day field value if set, zero value otherwise.
func (o *MiniInvoice) GetDay() string {
	if o == nil || IsNil(o.Day) {
		var ret string
		return ret
	}
	return *o.Day
}

// GetDayOk returns a tuple with the Day field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetDayOk() (*string, bool) {
	if o == nil || IsNil(o.Day) {
		return nil, false
	}
	return o.Day, true
}

// HasDay returns a boolean if a field has been set.
func (o *MiniInvoice) HasDay() bool {
	if o != nil && !IsNil(o.Day) {
		return true
	}

	return false
}

// SetDay gets a reference to the given string and assigns it to the Day field.
func (o *MiniInvoice) SetDay(v string) {
	o.Day = &v
}

// GetMonth returns the Month field value if set, zero value otherwise.
func (o *MiniInvoice) GetMonth() string {
	if o == nil || IsNil(o.Month) {
		var ret string
		return ret
	}
	return *o.Month
}

// GetMonthOk returns a tuple with the Month field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetMonthOk() (*string, bool) {
	if o == nil || IsNil(o.Month) {
		return nil, false
	}
	return o.Month, true
}

// HasMonth returns a boolean if a field has been set.
func (o *MiniInvoice) HasMonth() bool {
	if o != nil && !IsNil(o.Month) {
		return true
	}

	return false
}

// SetMonth gets a reference to the given string and assigns it to the Month field.
func (o *MiniInvoice) SetMonth(v string) {
	o.Month = &v
}

// GetYear returns the Year field value if set, zero value otherwise.
func (o *MiniInvoice) GetYear() int32 {
	if o == nil || IsNil(o.Year) {
		var ret int32
		return ret
	}
	return *o.Year
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetYearOk() (*int32, bool) {
	if o == nil || IsNil(o.Year) {
		return nil, false
	}
	return o.Year, true
}

// HasYear returns a boolean if a field has been set.
func (o *MiniInvoice) HasYear() bool {
	if o != nil && !IsNil(o.Year) {
		return true
	}

	return false
}

// SetYear gets a reference to the given int32 and assigns it to the Year field.
func (o *MiniInvoice) SetYear(v int32) {
	o.Year = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *MiniInvoice) GetCreatedAt() int32 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetCreatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *MiniInvoice) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *MiniInvoice) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetGatewayUpdatedAt returns the GatewayUpdatedAt field value if set, zero value otherwise.
func (o *MiniInvoice) GetGatewayUpdatedAt() int32 {
	if o == nil || IsNil(o.GatewayUpdatedAt) {
		var ret int32
		return ret
	}
	return *o.GatewayUpdatedAt
}

// GetGatewayUpdatedAtOk returns a tuple with the GatewayUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetGatewayUpdatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.GatewayUpdatedAt) {
		return nil, false
	}
	return o.GatewayUpdatedAt, true
}

// HasGatewayUpdatedAt returns a boolean if a field has been set.
func (o *MiniInvoice) HasGatewayUpdatedAt() bool {
	if o != nil && !IsNil(o.GatewayUpdatedAt) {
		return true
	}

	return false
}

// SetGatewayUpdatedAt gets a reference to the given int32 and assigns it to the GatewayUpdatedAt field.
func (o *MiniInvoice) SetGatewayUpdatedAt(v int32) {
	o.GatewayUpdatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *MiniInvoice) GetUpdatedAt() int32 {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *MiniInvoice) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *MiniInvoice) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *MiniInvoice) GetUpdatedBy() int32 {
	if o == nil || IsNil(o.UpdatedBy) {
		var ret int32
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetUpdatedByOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdatedBy) {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *MiniInvoice) HasUpdatedBy() bool {
	if o != nil && !IsNil(o.UpdatedBy) {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given int32 and assigns it to the UpdatedBy field.
func (o *MiniInvoice) SetUpdatedBy(v int32) {
	o.UpdatedBy = &v
}

// GetIsMarketplace returns the IsMarketplace field value if set, zero value otherwise.
func (o *MiniInvoice) GetIsMarketplace() int32 {
	if o == nil || IsNil(o.IsMarketplace) {
		var ret int32
		return ret
	}
	return *o.IsMarketplace
}

// GetIsMarketplaceOk returns a tuple with the IsMarketplace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetIsMarketplaceOk() (*int32, bool) {
	if o == nil || IsNil(o.IsMarketplace) {
		return nil, false
	}
	return o.IsMarketplace, true
}

// HasIsMarketplace returns a boolean if a field has been set.
func (o *MiniInvoice) HasIsMarketplace() bool {
	if o != nil && !IsNil(o.IsMarketplace) {
		return true
	}

	return false
}

// SetIsMarketplace gets a reference to the given int32 and assigns it to the IsMarketplace field.
func (o *MiniInvoice) SetIsMarketplace(v int32) {
	o.IsMarketplace = &v
}

// GetSquarePaymentId returns the SquarePaymentId field value if set, zero value otherwise.
func (o *MiniInvoice) GetSquarePaymentId() string {
	if o == nil || IsNil(o.SquarePaymentId) {
		var ret string
		return ret
	}
	return *o.SquarePaymentId
}

// GetSquarePaymentIdOk returns a tuple with the SquarePaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetSquarePaymentIdOk() (*string, bool) {
	if o == nil || IsNil(o.SquarePaymentId) {
		return nil, false
	}
	return o.SquarePaymentId, true
}

// HasSquarePaymentId returns a boolean if a field has been set.
func (o *MiniInvoice) HasSquarePaymentId() bool {
	if o != nil && !IsNil(o.SquarePaymentId) {
		return true
	}

	return false
}

// SetSquarePaymentId gets a reference to the given string and assigns it to the SquarePaymentId field.
func (o *MiniInvoice) SetSquarePaymentId(v string) {
	o.SquarePaymentId = &v
}

// GetVolumePaymentId returns the VolumePaymentId field value if set, zero value otherwise.
func (o *MiniInvoice) GetVolumePaymentId() string {
	if o == nil || IsNil(o.VolumePaymentId) {
		var ret string
		return ret
	}
	return *o.VolumePaymentId
}

// GetVolumePaymentIdOk returns a tuple with the VolumePaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetVolumePaymentIdOk() (*string, bool) {
	if o == nil || IsNil(o.VolumePaymentId) {
		return nil, false
	}
	return o.VolumePaymentId, true
}

// HasVolumePaymentId returns a boolean if a field has been set.
func (o *MiniInvoice) HasVolumePaymentId() bool {
	if o != nil && !IsNil(o.VolumePaymentId) {
		return true
	}

	return false
}

// SetVolumePaymentId gets a reference to the given string and assigns it to the VolumePaymentId field.
func (o *MiniInvoice) SetVolumePaymentId(v string) {
	o.VolumePaymentId = &v
}

// GetVolumeReferenceId returns the VolumeReferenceId field value if set, zero value otherwise.
func (o *MiniInvoice) GetVolumeReferenceId() string {
	if o == nil || IsNil(o.VolumeReferenceId) {
		var ret string
		return ret
	}
	return *o.VolumeReferenceId
}

// GetVolumeReferenceIdOk returns a tuple with the VolumeReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetVolumeReferenceIdOk() (*string, bool) {
	if o == nil || IsNil(o.VolumeReferenceId) {
		return nil, false
	}
	return o.VolumeReferenceId, true
}

// HasVolumeReferenceId returns a boolean if a field has been set.
func (o *MiniInvoice) HasVolumeReferenceId() bool {
	if o != nil && !IsNil(o.VolumeReferenceId) {
		return true
	}

	return false
}

// SetVolumeReferenceId gets a reference to the given string and assigns it to the VolumeReferenceId field.
func (o *MiniInvoice) SetVolumeReferenceId(v string) {
	o.VolumeReferenceId = &v
}

// GetProductPlanId returns the ProductPlanId field value if set, zero value otherwise.
func (o *MiniInvoice) GetProductPlanId() int32 {
	if o == nil || IsNil(o.ProductPlanId) {
		var ret int32
		return ret
	}
	return *o.ProductPlanId
}

// GetProductPlanIdOk returns a tuple with the ProductPlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetProductPlanIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProductPlanId) {
		return nil, false
	}
	return o.ProductPlanId, true
}

// HasProductPlanId returns a boolean if a field has been set.
func (o *MiniInvoice) HasProductPlanId() bool {
	if o != nil && !IsNil(o.ProductPlanId) {
		return true
	}

	return false
}

// SetProductPlanId gets a reference to the given int32 and assigns it to the ProductPlanId field.
func (o *MiniInvoice) SetProductPlanId(v int32) {
	o.ProductPlanId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MiniInvoice) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MiniInvoice) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MiniInvoice) SetName(v string) {
	o.Name = &v
}

// GetShopPaypalCreditCard returns the ShopPaypalCreditCard field value if set, zero value otherwise.
func (o *MiniInvoice) GetShopPaypalCreditCard() bool {
	if o == nil || IsNil(o.ShopPaypalCreditCard) {
		var ret bool
		return ret
	}
	return *o.ShopPaypalCreditCard
}

// GetShopPaypalCreditCardOk returns a tuple with the ShopPaypalCreditCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetShopPaypalCreditCardOk() (*bool, bool) {
	if o == nil || IsNil(o.ShopPaypalCreditCard) {
		return nil, false
	}
	return o.ShopPaypalCreditCard, true
}

// HasShopPaypalCreditCard returns a boolean if a field has been set.
func (o *MiniInvoice) HasShopPaypalCreditCard() bool {
	if o != nil && !IsNil(o.ShopPaypalCreditCard) {
		return true
	}

	return false
}

// SetShopPaypalCreditCard gets a reference to the given bool and assigns it to the ShopPaypalCreditCard field.
func (o *MiniInvoice) SetShopPaypalCreditCard(v bool) {
	o.ShopPaypalCreditCard = &v
}

// GetShopForcePaypalEmailDelivery returns the ShopForcePaypalEmailDelivery field value if set, zero value otherwise.
func (o *MiniInvoice) GetShopForcePaypalEmailDelivery() bool {
	if o == nil || IsNil(o.ShopForcePaypalEmailDelivery) {
		var ret bool
		return ret
	}
	return *o.ShopForcePaypalEmailDelivery
}

// GetShopForcePaypalEmailDeliveryOk returns a tuple with the ShopForcePaypalEmailDelivery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniInvoice) GetShopForcePaypalEmailDeliveryOk() (*bool, bool) {
	if o == nil || IsNil(o.ShopForcePaypalEmailDelivery) {
		return nil, false
	}
	return o.ShopForcePaypalEmailDelivery, true
}

// HasShopForcePaypalEmailDelivery returns a boolean if a field has been set.
func (o *MiniInvoice) HasShopForcePaypalEmailDelivery() bool {
	if o != nil && !IsNil(o.ShopForcePaypalEmailDelivery) {
		return true
	}

	return false
}

// SetShopForcePaypalEmailDelivery gets a reference to the given bool and assigns it to the ShopForcePaypalEmailDelivery field.
func (o *MiniInvoice) SetShopForcePaypalEmailDelivery(v bool) {
	o.ShopForcePaypalEmailDelivery = &v
}

func (o MiniInvoice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MiniInvoice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Uniqid) {
		toSerialize["uniqid"] = o.Uniqid
	}
	if !IsNil(o.RecurringBillingId) {
		toSerialize["recurring_billing_id"] = o.RecurringBillingId
	}
	if !IsNil(o.BillingPeriodStart) {
		toSerialize["billing_period_start"] = o.BillingPeriodStart
	}
	if !IsNil(o.BillingPeriodEnd) {
		toSerialize["billing_period_end"] = o.BillingPeriodEnd
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Subtype) {
		toSerialize["subtype"] = o.Subtype
	}
	if !IsNil(o.Origin) {
		toSerialize["origin"] = o.Origin
	}
	if !IsNil(o.ShopId) {
		toSerialize["shop_id"] = o.ShopId
	}
	if !IsNil(o.PlatformId) {
		toSerialize["platform_id"] = o.PlatformId
	}
	if !IsNil(o.CustomerId) {
		toSerialize["customer_id"] = o.CustomerId
	}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.ProductVariants) {
		toSerialize["product_variants"] = o.ProductVariants
	}
	if !IsNil(o.AffiliateRevenueCustomerId) {
		toSerialize["affiliate_revenue_customer_id"] = o.AffiliateRevenueCustomerId
	}
	if !IsNil(o.ProductAddons) {
		toSerialize["product_addons"] = o.ProductAddons
	}
	if !IsNil(o.ProductType) {
		toSerialize["product_type"] = o.ProductType
	}
	if !IsNil(o.ProductTitle) {
		toSerialize["product_title"] = o.ProductTitle
	}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscription_id"] = o.SubscriptionId
	}
	if !IsNil(o.SubscriptionTime) {
		toSerialize["subscription_time"] = o.SubscriptionTime
	}
	if !IsNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	if !IsNil(o.Blockchain) {
		toSerialize["blockchain"] = o.Blockchain
	}
	if !IsNil(o.GatewaysAccepted) {
		toSerialize["gateways_accepted"] = o.GatewaysAccepted
	}
	if !IsNil(o.PaypalApm) {
		toSerialize["paypal_apm"] = o.PaypalApm
	}
	if !IsNil(o.StripeApm) {
		toSerialize["stripe_apm"] = o.StripeApm
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.TotalDisplay) {
		toSerialize["total_display"] = o.TotalDisplay
	}
	if !IsNil(o.TaxPercentage) {
		toSerialize["tax_percentage"] = o.TaxPercentage
	}
	if !IsNil(o.CouponId) {
		toSerialize["coupon_id"] = o.CouponId
	}
	if !IsNil(o.Discount) {
		toSerialize["discount"] = o.Discount
	}
	if !IsNil(o.DiscountDisplay) {
		toSerialize["discount_display"] = o.DiscountDisplay
	}
	if !IsNil(o.DiscountBreakdown) {
		toSerialize["discount_breakdown"] = o.DiscountBreakdown
	}
	if !IsNil(o.BundleConfig) {
		toSerialize["bundle_config"] = o.BundleConfig
	}
	if !IsNil(o.VolumeDiscount) {
		toSerialize["volume_discount"] = o.VolumeDiscount
	}
	if !IsNil(o.VolumeDiscountDisplay) {
		toSerialize["volume_discount_display"] = o.VolumeDiscountDisplay
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.ExchangeRate) {
		toSerialize["exchange_rate"] = o.ExchangeRate
	}
	if !IsNil(o.CryptoExchangeRate) {
		toSerialize["crypto_exchange_rate"] = o.CryptoExchangeRate
	}
	if !IsNil(o.CustomerEmail) {
		toSerialize["customer_email"] = o.CustomerEmail
	}
	if !IsNil(o.DiscordCustomerToken) {
		toSerialize["discord_customer_token"] = o.DiscordCustomerToken
	}
	if !IsNil(o.DiscordCustomerRefreshToken) {
		toSerialize["discord_customer_refresh_token"] = o.DiscordCustomerRefreshToken
	}
	if !IsNil(o.DiscordCustomerTokenExpiresAt) {
		toSerialize["discord_customer_token_expires_at"] = o.DiscordCustomerTokenExpiresAt
	}
	if !IsNil(o.PaypalEmailDelivery) {
		toSerialize["paypal_email_delivery"] = o.PaypalEmailDelivery
	}
	if !IsNil(o.PaypalEmail) {
		toSerialize["paypal_email"] = o.PaypalEmail
	}
	if !IsNil(o.PaypalOrderId) {
		toSerialize["paypal_order_id"] = o.PaypalOrderId
	}
	if !IsNil(o.PaypalAuthorizationId) {
		toSerialize["paypal_authorization_id"] = o.PaypalAuthorizationId
	}
	if !IsNil(o.PaypalCaptureId) {
		toSerialize["paypal_capture_id"] = o.PaypalCaptureId
	}
	if !IsNil(o.PaypalPayerEmail) {
		toSerialize["paypal_payer_email"] = o.PaypalPayerEmail
	}
	if !IsNil(o.PaypalFee) {
		toSerialize["paypal_fee"] = o.PaypalFee
	}
	if !IsNil(o.PaypalFeeCurrency) {
		toSerialize["paypal_fee_currency"] = o.PaypalFeeCurrency
	}
	if !IsNil(o.PaypalApiCredentials) {
		toSerialize["paypal_api_credentials"] = o.PaypalApiCredentials
	}
	if !IsNil(o.PaypalSubscriptionId) {
		toSerialize["paypal_subscription_id"] = o.PaypalSubscriptionId
	}
	if !IsNil(o.PaypalSubscriptionLink) {
		toSerialize["paypal_subscription_link"] = o.PaypalSubscriptionLink
	}
	if !IsNil(o.LexOrderId) {
		toSerialize["lex_order_id"] = o.LexOrderId
	}
	if !IsNil(o.LexPaymentMethod) {
		toSerialize["lex_payment_method"] = o.LexPaymentMethod
	}
	if !IsNil(o.LexSecret) {
		toSerialize["lex_secret"] = o.LexSecret
	}
	if !IsNil(o.VirtualPaymentsId) {
		toSerialize["virtual_payments_id"] = o.VirtualPaymentsId
	}
	if !IsNil(o.PaydashPaymentID) {
		toSerialize["paydash_paymentID"] = o.PaydashPaymentID
	}
	if !IsNil(o.PaydashApiKey) {
		toSerialize["paydash_apiKey"] = o.PaydashApiKey
	}
	if !IsNil(o.SkrillEmail) {
		toSerialize["skrill_email"] = o.SkrillEmail
	}
	if !IsNil(o.SkrillSid) {
		toSerialize["skrill_sid"] = o.SkrillSid
	}
	if !IsNil(o.SkrillLink) {
		toSerialize["skrill_link"] = o.SkrillLink
	}
	if !IsNil(o.StripeId) {
		toSerialize["stripe_id"] = o.StripeId
	}
	if !IsNil(o.StripeClientSecret) {
		toSerialize["stripe_client_secret"] = o.StripeClientSecret
	}
	if !IsNil(o.StripePriceId) {
		toSerialize["stripe_price_id"] = o.StripePriceId
	}
	if !IsNil(o.StripeCustomerId) {
		toSerialize["stripe_customer_id"] = o.StripeCustomerId
	}
	if !IsNil(o.StripeSubscriptionId) {
		toSerialize["stripe_subscription_id"] = o.StripeSubscriptionId
	}
	if !IsNil(o.StripeInvoiceId) {
		toSerialize["stripe_invoice_id"] = o.StripeInvoiceId
	}
	if !IsNil(o.PerfectmoneyId) {
		toSerialize["perfectmoney_id"] = o.PerfectmoneyId
	}
	if !IsNil(o.BinanceInvoiceId) {
		toSerialize["binance_invoice_id"] = o.BinanceInvoiceId
	}
	if !IsNil(o.BinanceQrcode) {
		toSerialize["binance_qrcode"] = o.BinanceQrcode
	}
	if !IsNil(o.BinanceCheckoutUrl) {
		toSerialize["binance_checkout_url"] = o.BinanceCheckoutUrl
	}
	if !IsNil(o.BinancePayout) {
		toSerialize["binance_payout"] = o.BinancePayout
	}
	if !IsNil(o.CashappQrcode) {
		toSerialize["cashapp_qrcode"] = o.CashappQrcode
	}
	if !IsNil(o.CashappNote) {
		toSerialize["cashapp_note"] = o.CashappNote
	}
	if !IsNil(o.CashappCashtag) {
		toSerialize["cashapp_cashtag"] = o.CashappCashtag
	}
	if !IsNil(o.CryptoAddress) {
		toSerialize["crypto_address"] = o.CryptoAddress
	}
	if !IsNil(o.CryptoAmount) {
		toSerialize["crypto_amount"] = o.CryptoAmount
	}
	if !IsNil(o.CryptoReceived) {
		toSerialize["crypto_received"] = o.CryptoReceived
	}
	if !IsNil(o.CryptoFeePaid) {
		toSerialize["crypto_fee_paid"] = o.CryptoFeePaid
	}
	if !IsNil(o.CryptoFeeOwed) {
		toSerialize["crypto_fee_owed"] = o.CryptoFeeOwed
	}
	if !IsNil(o.CryptoUri) {
		toSerialize["crypto_uri"] = o.CryptoUri
	}
	if !IsNil(o.BitcoinLnRHash) {
		toSerialize["bitcoin_ln_r_hash"] = o.BitcoinLnRHash
	}
	if !IsNil(o.CryptoConfirmationsNeeded) {
		toSerialize["crypto_confirmations_needed"] = o.CryptoConfirmationsNeeded
	}
	if !IsNil(o.CryptoWalletVersion) {
		toSerialize["crypto_wallet_version"] = o.CryptoWalletVersion
	}
	if !IsNil(o.CryptoPayout) {
		toSerialize["crypto_payout"] = o.CryptoPayout
	}
	if !IsNil(o.CryptoScheduledPayout) {
		toSerialize["crypto_scheduled_payout"] = o.CryptoScheduledPayout
	}
	if !IsNil(o.CryptoPayoutType) {
		toSerialize["crypto_payout_type"] = o.CryptoPayoutType
	}
	if !IsNil(o.FeeBilled) {
		toSerialize["fee_billed"] = o.FeeBilled
	}
	if !IsNil(o.BillInfo) {
		toSerialize["bill_info"] = o.BillInfo
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.IsVpnOrProxy) {
		toSerialize["is_vpn_or_proxy"] = o.IsVpnOrProxy
	}
	if !IsNil(o.UserAgent) {
		toSerialize["user_agent"] = o.UserAgent
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if !IsNil(o.DeveloperInvoice) {
		toSerialize["developer_invoice"] = o.DeveloperInvoice
	}
	if !IsNil(o.DeveloperTitle) {
		toSerialize["developer_title"] = o.DeveloperTitle
	}
	if !IsNil(o.DeveloperWebhook) {
		toSerialize["developer_webhook"] = o.DeveloperWebhook
	}
	if !IsNil(o.DeveloperReturnUrl) {
		toSerialize["developer_return_url"] = o.DeveloperReturnUrl
	}
	if !IsNil(o.PayoutConfiguration) {
		toSerialize["payout_configuration"] = o.PayoutConfiguration
	}
	if !IsNil(o.FeePercentage) {
		toSerialize["fee_percentage"] = o.FeePercentage
	}
	if !IsNil(o.FeeBreakdown) {
		toSerialize["fee_breakdown"] = o.FeeBreakdown
	}
	if !IsNil(o.ToProcess) {
		toSerialize["to_process"] = o.ToProcess
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusDetails) {
		toSerialize["status_details"] = o.StatusDetails
	}
	if !IsNil(o.VoidDetails) {
		toSerialize["void_details"] = o.VoidDetails
	}
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	if !IsNil(o.DayValue) {
		toSerialize["day_value"] = o.DayValue
	}
	if !IsNil(o.Day) {
		toSerialize["day"] = o.Day
	}
	if !IsNil(o.Month) {
		toSerialize["month"] = o.Month
	}
	if !IsNil(o.Year) {
		toSerialize["year"] = o.Year
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.GatewayUpdatedAt) {
		toSerialize["gateway_updated_at"] = o.GatewayUpdatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.UpdatedBy) {
		toSerialize["updated_by"] = o.UpdatedBy
	}
	if !IsNil(o.IsMarketplace) {
		toSerialize["is_marketplace"] = o.IsMarketplace
	}
	if !IsNil(o.SquarePaymentId) {
		toSerialize["square_payment_id"] = o.SquarePaymentId
	}
	if !IsNil(o.VolumePaymentId) {
		toSerialize["volume_payment_id"] = o.VolumePaymentId
	}
	if !IsNil(o.VolumeReferenceId) {
		toSerialize["volume_reference_id"] = o.VolumeReferenceId
	}
	if !IsNil(o.ProductPlanId) {
		toSerialize["product_plan_id"] = o.ProductPlanId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ShopPaypalCreditCard) {
		toSerialize["shop_paypal_credit_card"] = o.ShopPaypalCreditCard
	}
	if !IsNil(o.ShopForcePaypalEmailDelivery) {
		toSerialize["shop_force_paypal_email_delivery"] = o.ShopForcePaypalEmailDelivery
	}
	return toSerialize, nil
}

type NullableMiniInvoice struct {
	value *MiniInvoice
	isSet bool
}

func (v NullableMiniInvoice) Get() *MiniInvoice {
	return v.value
}

func (v *NullableMiniInvoice) Set(val *MiniInvoice) {
	v.value = val
	v.isSet = true
}

func (v NullableMiniInvoice) IsSet() bool {
	return v.isSet
}

func (v *NullableMiniInvoice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMiniInvoice(val *MiniInvoice) *NullableMiniInvoice {
	return &NullableMiniInvoice{value: val, isSet: true}
}

func (v NullableMiniInvoice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMiniInvoice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


