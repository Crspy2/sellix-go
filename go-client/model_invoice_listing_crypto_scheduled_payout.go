/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the InvoiceListingCryptoScheduledPayout type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceListingCryptoScheduledPayout{}

// InvoiceListingCryptoScheduledPayout If the payout for this invoice is SCHEDULED and not INSTANT and a cryptocurrency gateway is used, once the payout has been sent this field will contain additional info on it.
type InvoiceListingCryptoScheduledPayout struct {
	// Cryptocurrency amount sent in the payout transaction.
	Amount *float64 `json:"amount,omitempty"`
	// Total output of the transaction, equals to amount-transaction_fee-service_fee.
	TransactionOutput *float64 `json:"transaction_output,omitempty"`
	// Equal to transaction_output.
	ShopCut *float64 `json:"shop_cut,omitempty"`
	// Crypto transaction fee.
	TransactionFee *float64 `json:"transaction_fee,omitempty"`
	// Service fee, Sellix cut.
	ServiceFee *float64 `json:"service_fee,omitempty"`
	// Crypto transaction hash.
	Tx *string `json:"tx,omitempty"`
	// Timestamp for when the transaction was broadcast.
	CreatedAt *int32 `json:"created_at,omitempty"`
}

// NewInvoiceListingCryptoScheduledPayout instantiates a new InvoiceListingCryptoScheduledPayout object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceListingCryptoScheduledPayout() *InvoiceListingCryptoScheduledPayout {
	this := InvoiceListingCryptoScheduledPayout{}
	return &this
}

// NewInvoiceListingCryptoScheduledPayoutWithDefaults instantiates a new InvoiceListingCryptoScheduledPayout object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceListingCryptoScheduledPayoutWithDefaults() *InvoiceListingCryptoScheduledPayout {
	this := InvoiceListingCryptoScheduledPayout{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *InvoiceListingCryptoScheduledPayout) GetAmount() float64 {
	if o == nil || IsNil(o.Amount) {
		var ret float64
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListingCryptoScheduledPayout) GetAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *InvoiceListingCryptoScheduledPayout) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float64 and assigns it to the Amount field.
func (o *InvoiceListingCryptoScheduledPayout) SetAmount(v float64) {
	o.Amount = &v
}

// GetTransactionOutput returns the TransactionOutput field value if set, zero value otherwise.
func (o *InvoiceListingCryptoScheduledPayout) GetTransactionOutput() float64 {
	if o == nil || IsNil(o.TransactionOutput) {
		var ret float64
		return ret
	}
	return *o.TransactionOutput
}

// GetTransactionOutputOk returns a tuple with the TransactionOutput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListingCryptoScheduledPayout) GetTransactionOutputOk() (*float64, bool) {
	if o == nil || IsNil(o.TransactionOutput) {
		return nil, false
	}
	return o.TransactionOutput, true
}

// HasTransactionOutput returns a boolean if a field has been set.
func (o *InvoiceListingCryptoScheduledPayout) HasTransactionOutput() bool {
	if o != nil && !IsNil(o.TransactionOutput) {
		return true
	}

	return false
}

// SetTransactionOutput gets a reference to the given float64 and assigns it to the TransactionOutput field.
func (o *InvoiceListingCryptoScheduledPayout) SetTransactionOutput(v float64) {
	o.TransactionOutput = &v
}

// GetShopCut returns the ShopCut field value if set, zero value otherwise.
func (o *InvoiceListingCryptoScheduledPayout) GetShopCut() float64 {
	if o == nil || IsNil(o.ShopCut) {
		var ret float64
		return ret
	}
	return *o.ShopCut
}

// GetShopCutOk returns a tuple with the ShopCut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListingCryptoScheduledPayout) GetShopCutOk() (*float64, bool) {
	if o == nil || IsNil(o.ShopCut) {
		return nil, false
	}
	return o.ShopCut, true
}

// HasShopCut returns a boolean if a field has been set.
func (o *InvoiceListingCryptoScheduledPayout) HasShopCut() bool {
	if o != nil && !IsNil(o.ShopCut) {
		return true
	}

	return false
}

// SetShopCut gets a reference to the given float64 and assigns it to the ShopCut field.
func (o *InvoiceListingCryptoScheduledPayout) SetShopCut(v float64) {
	o.ShopCut = &v
}

// GetTransactionFee returns the TransactionFee field value if set, zero value otherwise.
func (o *InvoiceListingCryptoScheduledPayout) GetTransactionFee() float64 {
	if o == nil || IsNil(o.TransactionFee) {
		var ret float64
		return ret
	}
	return *o.TransactionFee
}

// GetTransactionFeeOk returns a tuple with the TransactionFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListingCryptoScheduledPayout) GetTransactionFeeOk() (*float64, bool) {
	if o == nil || IsNil(o.TransactionFee) {
		return nil, false
	}
	return o.TransactionFee, true
}

// HasTransactionFee returns a boolean if a field has been set.
func (o *InvoiceListingCryptoScheduledPayout) HasTransactionFee() bool {
	if o != nil && !IsNil(o.TransactionFee) {
		return true
	}

	return false
}

// SetTransactionFee gets a reference to the given float64 and assigns it to the TransactionFee field.
func (o *InvoiceListingCryptoScheduledPayout) SetTransactionFee(v float64) {
	o.TransactionFee = &v
}

// GetServiceFee returns the ServiceFee field value if set, zero value otherwise.
func (o *InvoiceListingCryptoScheduledPayout) GetServiceFee() float64 {
	if o == nil || IsNil(o.ServiceFee) {
		var ret float64
		return ret
	}
	return *o.ServiceFee
}

// GetServiceFeeOk returns a tuple with the ServiceFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListingCryptoScheduledPayout) GetServiceFeeOk() (*float64, bool) {
	if o == nil || IsNil(o.ServiceFee) {
		return nil, false
	}
	return o.ServiceFee, true
}

// HasServiceFee returns a boolean if a field has been set.
func (o *InvoiceListingCryptoScheduledPayout) HasServiceFee() bool {
	if o != nil && !IsNil(o.ServiceFee) {
		return true
	}

	return false
}

// SetServiceFee gets a reference to the given float64 and assigns it to the ServiceFee field.
func (o *InvoiceListingCryptoScheduledPayout) SetServiceFee(v float64) {
	o.ServiceFee = &v
}

// GetTx returns the Tx field value if set, zero value otherwise.
func (o *InvoiceListingCryptoScheduledPayout) GetTx() string {
	if o == nil || IsNil(o.Tx) {
		var ret string
		return ret
	}
	return *o.Tx
}

// GetTxOk returns a tuple with the Tx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListingCryptoScheduledPayout) GetTxOk() (*string, bool) {
	if o == nil || IsNil(o.Tx) {
		return nil, false
	}
	return o.Tx, true
}

// HasTx returns a boolean if a field has been set.
func (o *InvoiceListingCryptoScheduledPayout) HasTx() bool {
	if o != nil && !IsNil(o.Tx) {
		return true
	}

	return false
}

// SetTx gets a reference to the given string and assigns it to the Tx field.
func (o *InvoiceListingCryptoScheduledPayout) SetTx(v string) {
	o.Tx = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *InvoiceListingCryptoScheduledPayout) GetCreatedAt() int32 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListingCryptoScheduledPayout) GetCreatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *InvoiceListingCryptoScheduledPayout) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *InvoiceListingCryptoScheduledPayout) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

func (o InvoiceListingCryptoScheduledPayout) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceListingCryptoScheduledPayout) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.TransactionOutput) {
		toSerialize["transaction_output"] = o.TransactionOutput
	}
	if !IsNil(o.ShopCut) {
		toSerialize["shop_cut"] = o.ShopCut
	}
	if !IsNil(o.TransactionFee) {
		toSerialize["transaction_fee"] = o.TransactionFee
	}
	if !IsNil(o.ServiceFee) {
		toSerialize["service_fee"] = o.ServiceFee
	}
	if !IsNil(o.Tx) {
		toSerialize["tx"] = o.Tx
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	return toSerialize, nil
}

type NullableInvoiceListingCryptoScheduledPayout struct {
	value *InvoiceListingCryptoScheduledPayout
	isSet bool
}

func (v NullableInvoiceListingCryptoScheduledPayout) Get() *InvoiceListingCryptoScheduledPayout {
	return v.value
}

func (v *NullableInvoiceListingCryptoScheduledPayout) Set(val *InvoiceListingCryptoScheduledPayout) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceListingCryptoScheduledPayout) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceListingCryptoScheduledPayout) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceListingCryptoScheduledPayout(val *InvoiceListingCryptoScheduledPayout) *NullableInvoiceListingCryptoScheduledPayout {
	return &NullableInvoiceListingCryptoScheduledPayout{value: val, isSet: true}
}

func (v NullableInvoiceListingCryptoScheduledPayout) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceListingCryptoScheduledPayout) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


