/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the InlineObjectData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InlineObjectData{}

// InlineObjectData struct for InlineObjectData
type InlineObjectData struct {
	Customers []Customer `json:"customers,omitempty"`
}

// NewInlineObjectData instantiates a new InlineObjectData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObjectData() *InlineObjectData {
	this := InlineObjectData{}
	return &this
}

// NewInlineObjectDataWithDefaults instantiates a new InlineObjectData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObjectDataWithDefaults() *InlineObjectData {
	this := InlineObjectData{}
	return &this
}

// GetCustomers returns the Customers field value if set, zero value otherwise.
func (o *InlineObjectData) GetCustomers() []Customer {
	if o == nil || IsNil(o.Customers) {
		var ret []Customer
		return ret
	}
	return o.Customers
}

// GetCustomersOk returns a tuple with the Customers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObjectData) GetCustomersOk() ([]Customer, bool) {
	if o == nil || IsNil(o.Customers) {
		return nil, false
	}
	return o.Customers, true
}

// HasCustomers returns a boolean if a field has been set.
func (o *InlineObjectData) HasCustomers() bool {
	if o != nil && !IsNil(o.Customers) {
		return true
	}

	return false
}

// SetCustomers gets a reference to the given []Customer and assigns it to the Customers field.
func (o *InlineObjectData) SetCustomers(v []Customer) {
	o.Customers = v
}

func (o InlineObjectData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InlineObjectData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Customers) {
		toSerialize["customers"] = o.Customers
	}
	return toSerialize, nil
}

type NullableInlineObjectData struct {
	value *InlineObjectData
	isSet bool
}

func (v NullableInlineObjectData) Get() *InlineObjectData {
	return v.value
}

func (v *NullableInlineObjectData) Set(val *InlineObjectData) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObjectData) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObjectData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObjectData(val *InlineObjectData) *NullableInlineObjectData {
	return &NullableInlineObjectData{value: val, isSet: true}
}

func (v NullableInlineObjectData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObjectData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


