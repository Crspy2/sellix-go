/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the CouponListing type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CouponListing{}

// CouponListing struct for CouponListing
type CouponListing struct {
	// ID of the resource
	Id *int32 `json:"id,omitempty"`
	// Unique ID of the resource, used as reference across the API.
	Uniqid *string `json:"uniqid,omitempty"`
	// The shop ID to which this coupon belongs.
	ShopId *int32 `json:"shop_id,omitempty"`
	// Coupon type, whether it's for a product or subscription. SUBSCRIPTION coupons are only for Sellix-own subscriptions, this field will always return PRODUCT.
	Type *string `json:"type,omitempty"`
	CouponType *string `json:"coupon_type,omitempty"`
	// Coupon code to be used during the checkout phase.
	Code *string `json:"code,omitempty"`
	// The stripe ID for the promotion
	StripePromoId *string `json:"stripe_promo_id,omitempty"`
	// The stripe ID for the coupon
	StripeCouponId *string `json:"stripe_coupon_id,omitempty"`
	// If LIMITED, an array of products must be specified as this coupon will be used only with them.
	UseType *string `json:"use_type,omitempty"`
	// Discount value for this coupon.
	Discount *float64 `json:"discount,omitempty"`
	// Currency of the coupon discount value.
	Currency *string `json:"currency,omitempty"`
	// How many times this coupon has been used.
	Used *int32 `json:"used,omitempty"`
	// Whether or not this coupon is valid if a volume discount is applied.
	DisabledWithVolumeDiscounts *bool `json:"disabled_with_volume_discounts,omitempty"`
	// Whether or not this coupon should be applied for each product SUBSCRIPTION renewal.
	AllRecurringBillInvoices *bool `json:"all_recurring_bill_invoices,omitempty"`
	// Maximum usage for this coupon.
	MaxUses *int32 `json:"max_uses,omitempty"`
	// The smart contract address for the coupon
	SmartContractAddress *string `json:"smart_contract_address,omitempty"`
	// The token ID for the coupon
	TokenId *string `json:"token_id,omitempty"`
	Blockchain *Blockchain `json:"blockchain,omitempty"`
	// The datetime object corresponding to the expiration time of the coupon
	ExpireAt *string `json:"expire_at,omitempty"`
	// Timestamp for the creation of the coupon.
	CreatedAt *int32 `json:"created_at,omitempty"`
	// Date, available if the category has been edited.
	UpdatedAt *int32 `json:"updated_at,omitempty"`
	// User ID of the user who updated the coupon.
	UpdatedBy *int32 `json:"updated_by,omitempty"`
	// How many products are present in the products_bound array
	ProductsCount *int32 `json:"products_count,omitempty"`
}

// NewCouponListing instantiates a new CouponListing object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCouponListing() *CouponListing {
	this := CouponListing{}
	return &this
}

// NewCouponListingWithDefaults instantiates a new CouponListing object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCouponListingWithDefaults() *CouponListing {
	this := CouponListing{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CouponListing) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponListing) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CouponListing) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CouponListing) SetId(v int32) {
	o.Id = &v
}

// GetUniqid returns the Uniqid field value if set, zero value otherwise.
func (o *CouponListing) GetUniqid() string {
	if o == nil || IsNil(o.Uniqid) {
		var ret string
		return ret
	}
	return *o.Uniqid
}

// GetUniqidOk returns a tuple with the Uniqid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponListing) GetUniqidOk() (*string, bool) {
	if o == nil || IsNil(o.Uniqid) {
		return nil, false
	}
	return o.Uniqid, true
}

// HasUniqid returns a boolean if a field has been set.
func (o *CouponListing) HasUniqid() bool {
	if o != nil && !IsNil(o.Uniqid) {
		return true
	}

	return false
}

// SetUniqid gets a reference to the given string and assigns it to the Uniqid field.
func (o *CouponListing) SetUniqid(v string) {
	o.Uniqid = &v
}

// GetShopId returns the ShopId field value if set, zero value otherwise.
func (o *CouponListing) GetShopId() int32 {
	if o == nil || IsNil(o.ShopId) {
		var ret int32
		return ret
	}
	return *o.ShopId
}

// GetShopIdOk returns a tuple with the ShopId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponListing) GetShopIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ShopId) {
		return nil, false
	}
	return o.ShopId, true
}

// HasShopId returns a boolean if a field has been set.
func (o *CouponListing) HasShopId() bool {
	if o != nil && !IsNil(o.ShopId) {
		return true
	}

	return false
}

// SetShopId gets a reference to the given int32 and assigns it to the ShopId field.
func (o *CouponListing) SetShopId(v int32) {
	o.ShopId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CouponListing) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponListing) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CouponListing) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CouponListing) SetType(v string) {
	o.Type = &v
}

// GetCouponType returns the CouponType field value if set, zero value otherwise.
func (o *CouponListing) GetCouponType() string {
	if o == nil || IsNil(o.CouponType) {
		var ret string
		return ret
	}
	return *o.CouponType
}

// GetCouponTypeOk returns a tuple with the CouponType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponListing) GetCouponTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CouponType) {
		return nil, false
	}
	return o.CouponType, true
}

// HasCouponType returns a boolean if a field has been set.
func (o *CouponListing) HasCouponType() bool {
	if o != nil && !IsNil(o.CouponType) {
		return true
	}

	return false
}

// SetCouponType gets a reference to the given string and assigns it to the CouponType field.
func (o *CouponListing) SetCouponType(v string) {
	o.CouponType = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *CouponListing) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponListing) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *CouponListing) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *CouponListing) SetCode(v string) {
	o.Code = &v
}

// GetStripePromoId returns the StripePromoId field value if set, zero value otherwise.
func (o *CouponListing) GetStripePromoId() string {
	if o == nil || IsNil(o.StripePromoId) {
		var ret string
		return ret
	}
	return *o.StripePromoId
}

// GetStripePromoIdOk returns a tuple with the StripePromoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponListing) GetStripePromoIdOk() (*string, bool) {
	if o == nil || IsNil(o.StripePromoId) {
		return nil, false
	}
	return o.StripePromoId, true
}

// HasStripePromoId returns a boolean if a field has been set.
func (o *CouponListing) HasStripePromoId() bool {
	if o != nil && !IsNil(o.StripePromoId) {
		return true
	}

	return false
}

// SetStripePromoId gets a reference to the given string and assigns it to the StripePromoId field.
func (o *CouponListing) SetStripePromoId(v string) {
	o.StripePromoId = &v
}

// GetStripeCouponId returns the StripeCouponId field value if set, zero value otherwise.
func (o *CouponListing) GetStripeCouponId() string {
	if o == nil || IsNil(o.StripeCouponId) {
		var ret string
		return ret
	}
	return *o.StripeCouponId
}

// GetStripeCouponIdOk returns a tuple with the StripeCouponId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponListing) GetStripeCouponIdOk() (*string, bool) {
	if o == nil || IsNil(o.StripeCouponId) {
		return nil, false
	}
	return o.StripeCouponId, true
}

// HasStripeCouponId returns a boolean if a field has been set.
func (o *CouponListing) HasStripeCouponId() bool {
	if o != nil && !IsNil(o.StripeCouponId) {
		return true
	}

	return false
}

// SetStripeCouponId gets a reference to the given string and assigns it to the StripeCouponId field.
func (o *CouponListing) SetStripeCouponId(v string) {
	o.StripeCouponId = &v
}

// GetUseType returns the UseType field value if set, zero value otherwise.
func (o *CouponListing) GetUseType() string {
	if o == nil || IsNil(o.UseType) {
		var ret string
		return ret
	}
	return *o.UseType
}

// GetUseTypeOk returns a tuple with the UseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponListing) GetUseTypeOk() (*string, bool) {
	if o == nil || IsNil(o.UseType) {
		return nil, false
	}
	return o.UseType, true
}

// HasUseType returns a boolean if a field has been set.
func (o *CouponListing) HasUseType() bool {
	if o != nil && !IsNil(o.UseType) {
		return true
	}

	return false
}

// SetUseType gets a reference to the given string and assigns it to the UseType field.
func (o *CouponListing) SetUseType(v string) {
	o.UseType = &v
}

// GetDiscount returns the Discount field value if set, zero value otherwise.
func (o *CouponListing) GetDiscount() float64 {
	if o == nil || IsNil(o.Discount) {
		var ret float64
		return ret
	}
	return *o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponListing) GetDiscountOk() (*float64, bool) {
	if o == nil || IsNil(o.Discount) {
		return nil, false
	}
	return o.Discount, true
}

// HasDiscount returns a boolean if a field has been set.
func (o *CouponListing) HasDiscount() bool {
	if o != nil && !IsNil(o.Discount) {
		return true
	}

	return false
}

// SetDiscount gets a reference to the given float64 and assigns it to the Discount field.
func (o *CouponListing) SetDiscount(v float64) {
	o.Discount = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *CouponListing) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponListing) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *CouponListing) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *CouponListing) SetCurrency(v string) {
	o.Currency = &v
}

// GetUsed returns the Used field value if set, zero value otherwise.
func (o *CouponListing) GetUsed() int32 {
	if o == nil || IsNil(o.Used) {
		var ret int32
		return ret
	}
	return *o.Used
}

// GetUsedOk returns a tuple with the Used field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponListing) GetUsedOk() (*int32, bool) {
	if o == nil || IsNil(o.Used) {
		return nil, false
	}
	return o.Used, true
}

// HasUsed returns a boolean if a field has been set.
func (o *CouponListing) HasUsed() bool {
	if o != nil && !IsNil(o.Used) {
		return true
	}

	return false
}

// SetUsed gets a reference to the given int32 and assigns it to the Used field.
func (o *CouponListing) SetUsed(v int32) {
	o.Used = &v
}

// GetDisabledWithVolumeDiscounts returns the DisabledWithVolumeDiscounts field value if set, zero value otherwise.
func (o *CouponListing) GetDisabledWithVolumeDiscounts() bool {
	if o == nil || IsNil(o.DisabledWithVolumeDiscounts) {
		var ret bool
		return ret
	}
	return *o.DisabledWithVolumeDiscounts
}

// GetDisabledWithVolumeDiscountsOk returns a tuple with the DisabledWithVolumeDiscounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponListing) GetDisabledWithVolumeDiscountsOk() (*bool, bool) {
	if o == nil || IsNil(o.DisabledWithVolumeDiscounts) {
		return nil, false
	}
	return o.DisabledWithVolumeDiscounts, true
}

// HasDisabledWithVolumeDiscounts returns a boolean if a field has been set.
func (o *CouponListing) HasDisabledWithVolumeDiscounts() bool {
	if o != nil && !IsNil(o.DisabledWithVolumeDiscounts) {
		return true
	}

	return false
}

// SetDisabledWithVolumeDiscounts gets a reference to the given bool and assigns it to the DisabledWithVolumeDiscounts field.
func (o *CouponListing) SetDisabledWithVolumeDiscounts(v bool) {
	o.DisabledWithVolumeDiscounts = &v
}

// GetAllRecurringBillInvoices returns the AllRecurringBillInvoices field value if set, zero value otherwise.
func (o *CouponListing) GetAllRecurringBillInvoices() bool {
	if o == nil || IsNil(o.AllRecurringBillInvoices) {
		var ret bool
		return ret
	}
	return *o.AllRecurringBillInvoices
}

// GetAllRecurringBillInvoicesOk returns a tuple with the AllRecurringBillInvoices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponListing) GetAllRecurringBillInvoicesOk() (*bool, bool) {
	if o == nil || IsNil(o.AllRecurringBillInvoices) {
		return nil, false
	}
	return o.AllRecurringBillInvoices, true
}

// HasAllRecurringBillInvoices returns a boolean if a field has been set.
func (o *CouponListing) HasAllRecurringBillInvoices() bool {
	if o != nil && !IsNil(o.AllRecurringBillInvoices) {
		return true
	}

	return false
}

// SetAllRecurringBillInvoices gets a reference to the given bool and assigns it to the AllRecurringBillInvoices field.
func (o *CouponListing) SetAllRecurringBillInvoices(v bool) {
	o.AllRecurringBillInvoices = &v
}

// GetMaxUses returns the MaxUses field value if set, zero value otherwise.
func (o *CouponListing) GetMaxUses() int32 {
	if o == nil || IsNil(o.MaxUses) {
		var ret int32
		return ret
	}
	return *o.MaxUses
}

// GetMaxUsesOk returns a tuple with the MaxUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponListing) GetMaxUsesOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxUses) {
		return nil, false
	}
	return o.MaxUses, true
}

// HasMaxUses returns a boolean if a field has been set.
func (o *CouponListing) HasMaxUses() bool {
	if o != nil && !IsNil(o.MaxUses) {
		return true
	}

	return false
}

// SetMaxUses gets a reference to the given int32 and assigns it to the MaxUses field.
func (o *CouponListing) SetMaxUses(v int32) {
	o.MaxUses = &v
}

// GetSmartContractAddress returns the SmartContractAddress field value if set, zero value otherwise.
func (o *CouponListing) GetSmartContractAddress() string {
	if o == nil || IsNil(o.SmartContractAddress) {
		var ret string
		return ret
	}
	return *o.SmartContractAddress
}

// GetSmartContractAddressOk returns a tuple with the SmartContractAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponListing) GetSmartContractAddressOk() (*string, bool) {
	if o == nil || IsNil(o.SmartContractAddress) {
		return nil, false
	}
	return o.SmartContractAddress, true
}

// HasSmartContractAddress returns a boolean if a field has been set.
func (o *CouponListing) HasSmartContractAddress() bool {
	if o != nil && !IsNil(o.SmartContractAddress) {
		return true
	}

	return false
}

// SetSmartContractAddress gets a reference to the given string and assigns it to the SmartContractAddress field.
func (o *CouponListing) SetSmartContractAddress(v string) {
	o.SmartContractAddress = &v
}

// GetTokenId returns the TokenId field value if set, zero value otherwise.
func (o *CouponListing) GetTokenId() string {
	if o == nil || IsNil(o.TokenId) {
		var ret string
		return ret
	}
	return *o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponListing) GetTokenIdOk() (*string, bool) {
	if o == nil || IsNil(o.TokenId) {
		return nil, false
	}
	return o.TokenId, true
}

// HasTokenId returns a boolean if a field has been set.
func (o *CouponListing) HasTokenId() bool {
	if o != nil && !IsNil(o.TokenId) {
		return true
	}

	return false
}

// SetTokenId gets a reference to the given string and assigns it to the TokenId field.
func (o *CouponListing) SetTokenId(v string) {
	o.TokenId = &v
}

// GetBlockchain returns the Blockchain field value if set, zero value otherwise.
func (o *CouponListing) GetBlockchain() Blockchain {
	if o == nil || IsNil(o.Blockchain) {
		var ret Blockchain
		return ret
	}
	return *o.Blockchain
}

// GetBlockchainOk returns a tuple with the Blockchain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponListing) GetBlockchainOk() (*Blockchain, bool) {
	if o == nil || IsNil(o.Blockchain) {
		return nil, false
	}
	return o.Blockchain, true
}

// HasBlockchain returns a boolean if a field has been set.
func (o *CouponListing) HasBlockchain() bool {
	if o != nil && !IsNil(o.Blockchain) {
		return true
	}

	return false
}

// SetBlockchain gets a reference to the given Blockchain and assigns it to the Blockchain field.
func (o *CouponListing) SetBlockchain(v Blockchain) {
	o.Blockchain = &v
}

// GetExpireAt returns the ExpireAt field value if set, zero value otherwise.
func (o *CouponListing) GetExpireAt() string {
	if o == nil || IsNil(o.ExpireAt) {
		var ret string
		return ret
	}
	return *o.ExpireAt
}

// GetExpireAtOk returns a tuple with the ExpireAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponListing) GetExpireAtOk() (*string, bool) {
	if o == nil || IsNil(o.ExpireAt) {
		return nil, false
	}
	return o.ExpireAt, true
}

// HasExpireAt returns a boolean if a field has been set.
func (o *CouponListing) HasExpireAt() bool {
	if o != nil && !IsNil(o.ExpireAt) {
		return true
	}

	return false
}

// SetExpireAt gets a reference to the given string and assigns it to the ExpireAt field.
func (o *CouponListing) SetExpireAt(v string) {
	o.ExpireAt = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CouponListing) GetCreatedAt() int32 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponListing) GetCreatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CouponListing) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *CouponListing) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *CouponListing) GetUpdatedAt() int32 {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponListing) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CouponListing) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *CouponListing) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *CouponListing) GetUpdatedBy() int32 {
	if o == nil || IsNil(o.UpdatedBy) {
		var ret int32
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponListing) GetUpdatedByOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdatedBy) {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *CouponListing) HasUpdatedBy() bool {
	if o != nil && !IsNil(o.UpdatedBy) {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given int32 and assigns it to the UpdatedBy field.
func (o *CouponListing) SetUpdatedBy(v int32) {
	o.UpdatedBy = &v
}

// GetProductsCount returns the ProductsCount field value if set, zero value otherwise.
func (o *CouponListing) GetProductsCount() int32 {
	if o == nil || IsNil(o.ProductsCount) {
		var ret int32
		return ret
	}
	return *o.ProductsCount
}

// GetProductsCountOk returns a tuple with the ProductsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CouponListing) GetProductsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ProductsCount) {
		return nil, false
	}
	return o.ProductsCount, true
}

// HasProductsCount returns a boolean if a field has been set.
func (o *CouponListing) HasProductsCount() bool {
	if o != nil && !IsNil(o.ProductsCount) {
		return true
	}

	return false
}

// SetProductsCount gets a reference to the given int32 and assigns it to the ProductsCount field.
func (o *CouponListing) SetProductsCount(v int32) {
	o.ProductsCount = &v
}

func (o CouponListing) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CouponListing) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Uniqid) {
		toSerialize["uniqid"] = o.Uniqid
	}
	if !IsNil(o.ShopId) {
		toSerialize["shop_id"] = o.ShopId
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.CouponType) {
		toSerialize["coupon_type"] = o.CouponType
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.StripePromoId) {
		toSerialize["stripe_promo_id"] = o.StripePromoId
	}
	if !IsNil(o.StripeCouponId) {
		toSerialize["stripe_coupon_id"] = o.StripeCouponId
	}
	if !IsNil(o.UseType) {
		toSerialize["use_type"] = o.UseType
	}
	if !IsNil(o.Discount) {
		toSerialize["discount"] = o.Discount
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Used) {
		toSerialize["used"] = o.Used
	}
	if !IsNil(o.DisabledWithVolumeDiscounts) {
		toSerialize["disabled_with_volume_discounts"] = o.DisabledWithVolumeDiscounts
	}
	if !IsNil(o.AllRecurringBillInvoices) {
		toSerialize["all_recurring_bill_invoices"] = o.AllRecurringBillInvoices
	}
	if !IsNil(o.MaxUses) {
		toSerialize["max_uses"] = o.MaxUses
	}
	if !IsNil(o.SmartContractAddress) {
		toSerialize["smart_contract_address"] = o.SmartContractAddress
	}
	if !IsNil(o.TokenId) {
		toSerialize["token_id"] = o.TokenId
	}
	if !IsNil(o.Blockchain) {
		toSerialize["blockchain"] = o.Blockchain
	}
	if !IsNil(o.ExpireAt) {
		toSerialize["expire_at"] = o.ExpireAt
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.UpdatedBy) {
		toSerialize["updated_by"] = o.UpdatedBy
	}
	if !IsNil(o.ProductsCount) {
		toSerialize["products_count"] = o.ProductsCount
	}
	return toSerialize, nil
}

type NullableCouponListing struct {
	value *CouponListing
	isSet bool
}

func (v NullableCouponListing) Get() *CouponListing {
	return v.value
}

func (v *NullableCouponListing) Set(val *CouponListing) {
	v.value = val
	v.isSet = true
}

func (v NullableCouponListing) IsSet() bool {
	return v.isSet
}

func (v *NullableCouponListing) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCouponListing(val *CouponListing) *NullableCouponListing {
	return &NullableCouponListing{value: val, isSet: true}
}

func (v NullableCouponListing) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCouponListing) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


