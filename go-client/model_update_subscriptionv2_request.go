/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the UpdateSubscriptionv2Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateSubscriptionv2Request{}

// UpdateSubscriptionv2Request struct for UpdateSubscriptionv2Request
type UpdateSubscriptionv2Request struct {
	Gateway *Gateway `json:"gateway,omitempty"`
	// The unique id of the customer's payment method to set for this endpoint.
	PaymentMethodUniqid *string `json:"payment_method_uniqid,omitempty"`
}

// NewUpdateSubscriptionv2Request instantiates a new UpdateSubscriptionv2Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSubscriptionv2Request() *UpdateSubscriptionv2Request {
	this := UpdateSubscriptionv2Request{}
	return &this
}

// NewUpdateSubscriptionv2RequestWithDefaults instantiates a new UpdateSubscriptionv2Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSubscriptionv2RequestWithDefaults() *UpdateSubscriptionv2Request {
	this := UpdateSubscriptionv2Request{}
	return &this
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *UpdateSubscriptionv2Request) GetGateway() Gateway {
	if o == nil || IsNil(o.Gateway) {
		var ret Gateway
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSubscriptionv2Request) GetGatewayOk() (*Gateway, bool) {
	if o == nil || IsNil(o.Gateway) {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *UpdateSubscriptionv2Request) HasGateway() bool {
	if o != nil && !IsNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given Gateway and assigns it to the Gateway field.
func (o *UpdateSubscriptionv2Request) SetGateway(v Gateway) {
	o.Gateway = &v
}

// GetPaymentMethodUniqid returns the PaymentMethodUniqid field value if set, zero value otherwise.
func (o *UpdateSubscriptionv2Request) GetPaymentMethodUniqid() string {
	if o == nil || IsNil(o.PaymentMethodUniqid) {
		var ret string
		return ret
	}
	return *o.PaymentMethodUniqid
}

// GetPaymentMethodUniqidOk returns a tuple with the PaymentMethodUniqid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSubscriptionv2Request) GetPaymentMethodUniqidOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentMethodUniqid) {
		return nil, false
	}
	return o.PaymentMethodUniqid, true
}

// HasPaymentMethodUniqid returns a boolean if a field has been set.
func (o *UpdateSubscriptionv2Request) HasPaymentMethodUniqid() bool {
	if o != nil && !IsNil(o.PaymentMethodUniqid) {
		return true
	}

	return false
}

// SetPaymentMethodUniqid gets a reference to the given string and assigns it to the PaymentMethodUniqid field.
func (o *UpdateSubscriptionv2Request) SetPaymentMethodUniqid(v string) {
	o.PaymentMethodUniqid = &v
}

func (o UpdateSubscriptionv2Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateSubscriptionv2Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	if !IsNil(o.PaymentMethodUniqid) {
		toSerialize["payment_method_uniqid"] = o.PaymentMethodUniqid
	}
	return toSerialize, nil
}

type NullableUpdateSubscriptionv2Request struct {
	value *UpdateSubscriptionv2Request
	isSet bool
}

func (v NullableUpdateSubscriptionv2Request) Get() *UpdateSubscriptionv2Request {
	return v.value
}

func (v *NullableUpdateSubscriptionv2Request) Set(val *UpdateSubscriptionv2Request) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSubscriptionv2Request) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSubscriptionv2Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSubscriptionv2Request(val *UpdateSubscriptionv2Request) *NullableUpdateSubscriptionv2Request {
	return &NullableUpdateSubscriptionv2Request{value: val, isSet: true}
}

func (v NullableUpdateSubscriptionv2Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSubscriptionv2Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


