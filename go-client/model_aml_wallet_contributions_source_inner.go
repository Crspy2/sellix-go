/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AmlWalletContributionsSourceInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AmlWalletContributionsSourceInner{}

// AmlWalletContributionsSourceInner struct for AmlWalletContributionsSourceInner
type AmlWalletContributionsSourceInner struct {
	Entities []AmlWalletContributionsSourceInnerEntitiesInner `json:"entities,omitempty"`
	ContributionValue *AmlWalletContributionsSourceInnerContributionValue `json:"contribution_value,omitempty"`
	// Contribution percentage.
	ContributionPercentage *float64 `json:"contribution_percentage,omitempty"`
}

// NewAmlWalletContributionsSourceInner instantiates a new AmlWalletContributionsSourceInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmlWalletContributionsSourceInner() *AmlWalletContributionsSourceInner {
	this := AmlWalletContributionsSourceInner{}
	return &this
}

// NewAmlWalletContributionsSourceInnerWithDefaults instantiates a new AmlWalletContributionsSourceInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmlWalletContributionsSourceInnerWithDefaults() *AmlWalletContributionsSourceInner {
	this := AmlWalletContributionsSourceInner{}
	return &this
}

// GetEntities returns the Entities field value if set, zero value otherwise.
func (o *AmlWalletContributionsSourceInner) GetEntities() []AmlWalletContributionsSourceInnerEntitiesInner {
	if o == nil || IsNil(o.Entities) {
		var ret []AmlWalletContributionsSourceInnerEntitiesInner
		return ret
	}
	return o.Entities
}

// GetEntitiesOk returns a tuple with the Entities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmlWalletContributionsSourceInner) GetEntitiesOk() ([]AmlWalletContributionsSourceInnerEntitiesInner, bool) {
	if o == nil || IsNil(o.Entities) {
		return nil, false
	}
	return o.Entities, true
}

// HasEntities returns a boolean if a field has been set.
func (o *AmlWalletContributionsSourceInner) HasEntities() bool {
	if o != nil && !IsNil(o.Entities) {
		return true
	}

	return false
}

// SetEntities gets a reference to the given []AmlWalletContributionsSourceInnerEntitiesInner and assigns it to the Entities field.
func (o *AmlWalletContributionsSourceInner) SetEntities(v []AmlWalletContributionsSourceInnerEntitiesInner) {
	o.Entities = v
}

// GetContributionValue returns the ContributionValue field value if set, zero value otherwise.
func (o *AmlWalletContributionsSourceInner) GetContributionValue() AmlWalletContributionsSourceInnerContributionValue {
	if o == nil || IsNil(o.ContributionValue) {
		var ret AmlWalletContributionsSourceInnerContributionValue
		return ret
	}
	return *o.ContributionValue
}

// GetContributionValueOk returns a tuple with the ContributionValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmlWalletContributionsSourceInner) GetContributionValueOk() (*AmlWalletContributionsSourceInnerContributionValue, bool) {
	if o == nil || IsNil(o.ContributionValue) {
		return nil, false
	}
	return o.ContributionValue, true
}

// HasContributionValue returns a boolean if a field has been set.
func (o *AmlWalletContributionsSourceInner) HasContributionValue() bool {
	if o != nil && !IsNil(o.ContributionValue) {
		return true
	}

	return false
}

// SetContributionValue gets a reference to the given AmlWalletContributionsSourceInnerContributionValue and assigns it to the ContributionValue field.
func (o *AmlWalletContributionsSourceInner) SetContributionValue(v AmlWalletContributionsSourceInnerContributionValue) {
	o.ContributionValue = &v
}

// GetContributionPercentage returns the ContributionPercentage field value if set, zero value otherwise.
func (o *AmlWalletContributionsSourceInner) GetContributionPercentage() float64 {
	if o == nil || IsNil(o.ContributionPercentage) {
		var ret float64
		return ret
	}
	return *o.ContributionPercentage
}

// GetContributionPercentageOk returns a tuple with the ContributionPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmlWalletContributionsSourceInner) GetContributionPercentageOk() (*float64, bool) {
	if o == nil || IsNil(o.ContributionPercentage) {
		return nil, false
	}
	return o.ContributionPercentage, true
}

// HasContributionPercentage returns a boolean if a field has been set.
func (o *AmlWalletContributionsSourceInner) HasContributionPercentage() bool {
	if o != nil && !IsNil(o.ContributionPercentage) {
		return true
	}

	return false
}

// SetContributionPercentage gets a reference to the given float64 and assigns it to the ContributionPercentage field.
func (o *AmlWalletContributionsSourceInner) SetContributionPercentage(v float64) {
	o.ContributionPercentage = &v
}

func (o AmlWalletContributionsSourceInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AmlWalletContributionsSourceInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Entities) {
		toSerialize["entities"] = o.Entities
	}
	if !IsNil(o.ContributionValue) {
		toSerialize["contribution_value"] = o.ContributionValue
	}
	if !IsNil(o.ContributionPercentage) {
		toSerialize["contribution_percentage"] = o.ContributionPercentage
	}
	return toSerialize, nil
}

type NullableAmlWalletContributionsSourceInner struct {
	value *AmlWalletContributionsSourceInner
	isSet bool
}

func (v NullableAmlWalletContributionsSourceInner) Get() *AmlWalletContributionsSourceInner {
	return v.value
}

func (v *NullableAmlWalletContributionsSourceInner) Set(val *AmlWalletContributionsSourceInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAmlWalletContributionsSourceInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAmlWalletContributionsSourceInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmlWalletContributionsSourceInner(val *AmlWalletContributionsSourceInner) *NullableAmlWalletContributionsSourceInner {
	return &NullableAmlWalletContributionsSourceInner{value: val, isSet: true}
}

func (v NullableAmlWalletContributionsSourceInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmlWalletContributionsSourceInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


