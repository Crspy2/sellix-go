/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the QueryMessage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryMessage{}

// QueryMessage struct for QueryMessage
type QueryMessage struct {
	// Who this message belongs to; the customer or the merchant.
	Role *string `json:"role,omitempty"`
	// Message left by the customer or merchant.
	Message *string `json:"message,omitempty"`
	// Timestamp for when the message was sent.
	CreatedAt *int32 `json:"created_at,omitempty"`
}

// NewQueryMessage instantiates a new QueryMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryMessage() *QueryMessage {
	this := QueryMessage{}
	return &this
}

// NewQueryMessageWithDefaults instantiates a new QueryMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryMessageWithDefaults() *QueryMessage {
	this := QueryMessage{}
	return &this
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *QueryMessage) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryMessage) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *QueryMessage) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *QueryMessage) SetRole(v string) {
	o.Role = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *QueryMessage) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryMessage) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *QueryMessage) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *QueryMessage) SetMessage(v string) {
	o.Message = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *QueryMessage) GetCreatedAt() int32 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryMessage) GetCreatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *QueryMessage) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *QueryMessage) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

func (o QueryMessage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryMessage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	return toSerialize, nil
}

type NullableQueryMessage struct {
	value *QueryMessage
	isSet bool
}

func (v NullableQueryMessage) Get() *QueryMessage {
	return v.value
}

func (v *NullableQueryMessage) Set(val *QueryMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryMessage(val *QueryMessage) *NullableQueryMessage {
	return &NullableQueryMessage{value: val, isSet: true}
}

func (v NullableQueryMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


