/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateProductImageRequestData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateProductImageRequestData{}

// CreateProductImageRequestData struct for CreateProductImageRequestData
type CreateProductImageRequestData struct {
	Title string `json:"title"`
	Price float64 `json:"price"`
	Description string `json:"description"`
	Currency *Currency `json:"currency,omitempty"`
	Gateways []string `json:"gateways,omitempty"`
	// Product type.
	Type string `json:"type"`
	Serials []string `json:"serials,omitempty"`
	SerialsRemoveDuplicates *bool `json:"serials_remove_duplicates,omitempty"`
	ServiceText *string `json:"service_text,omitempty"`
	Stock *int32 `json:"stock,omitempty"`
	DynamicWebhook *string `json:"dynamic_webhook,omitempty"`
	StockDelimiter *string `json:"stock_delimiter,omitempty"`
	MinQuantity *int32 `json:"min_quantity,omitempty"`
	MaxQuantity *int32 `json:"max_quantity,omitempty"`
	DeliveryText *string `json:"delivery_text,omitempty"`
	CustomFields []map[string]interface{} `json:"custom_fields,omitempty"`
	CryptoConfirmationsNeeded *int32 `json:"crypto_confirmations_needed,omitempty"`
	// For PAYPAL and STRIPE, maximum risk level to accept payments in order to block fraud attempts.
	MaxRiskLevel *int32 `json:"max_risk_level,omitempty"`
	Unlisted *bool `json:"unlisted,omitempty"`
	Private *bool `json:"private,omitempty"`
	// Block VPN and Proxy purchases if the gateway is PAYPAL or STRIPE.
	BlockVpnProxies *bool `json:"block_vpn_proxies,omitempty"`
	SortPriority *int32 `json:"sort_priority,omitempty"`
	Webhooks []string `json:"webhooks,omitempty"`
	OnHold *bool `json:"on_hold,omitempty"`
	TermsOfService *string `json:"terms_of_service,omitempty"`
	// The length of the warranty in seconds
	Warranty *int32 `json:"warranty,omitempty"`
	WarrantyText *string `json:"warranty_text,omitempty"`
	RemoveImage *bool `json:"remove_image,omitempty"`
	RemoveFile *bool `json:"remove_file,omitempty"`
	VolumeDiscounts []map[string]interface{} `json:"volume_discounts,omitempty"`
	RecurringInterval *string `json:"recurring_interval,omitempty"`
	RecurringIntervalCount *int32 `json:"recurring_interval_count,omitempty"`
	TrialPeriod *int32 `json:"trial_period,omitempty"`
}

type _CreateProductImageRequestData CreateProductImageRequestData

// NewCreateProductImageRequestData instantiates a new CreateProductImageRequestData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProductImageRequestData(title string, price float64, description string, type_ string) *CreateProductImageRequestData {
	this := CreateProductImageRequestData{}
	this.Title = title
	this.Price = price
	this.Description = description
	this.Type = type_
	return &this
}

// NewCreateProductImageRequestDataWithDefaults instantiates a new CreateProductImageRequestData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProductImageRequestDataWithDefaults() *CreateProductImageRequestData {
	this := CreateProductImageRequestData{}
	return &this
}

// GetTitle returns the Title field value
func (o *CreateProductImageRequestData) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *CreateProductImageRequestData) SetTitle(v string) {
	o.Title = v
}

// GetPrice returns the Price field value
func (o *CreateProductImageRequestData) GetPrice() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetPriceOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *CreateProductImageRequestData) SetPrice(v float64) {
	o.Price = v
}

// GetDescription returns the Description field value
func (o *CreateProductImageRequestData) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CreateProductImageRequestData) SetDescription(v string) {
	o.Description = v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetCurrency() Currency {
	if o == nil || IsNil(o.Currency) {
		var ret Currency
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given Currency and assigns it to the Currency field.
func (o *CreateProductImageRequestData) SetCurrency(v Currency) {
	o.Currency = &v
}

// GetGateways returns the Gateways field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetGateways() []string {
	if o == nil || IsNil(o.Gateways) {
		var ret []string
		return ret
	}
	return o.Gateways
}

// GetGatewaysOk returns a tuple with the Gateways field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetGatewaysOk() ([]string, bool) {
	if o == nil || IsNil(o.Gateways) {
		return nil, false
	}
	return o.Gateways, true
}

// HasGateways returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasGateways() bool {
	if o != nil && !IsNil(o.Gateways) {
		return true
	}

	return false
}

// SetGateways gets a reference to the given []string and assigns it to the Gateways field.
func (o *CreateProductImageRequestData) SetGateways(v []string) {
	o.Gateways = v
}

// GetType returns the Type field value
func (o *CreateProductImageRequestData) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateProductImageRequestData) SetType(v string) {
	o.Type = v
}

// GetSerials returns the Serials field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetSerials() []string {
	if o == nil || IsNil(o.Serials) {
		var ret []string
		return ret
	}
	return o.Serials
}

// GetSerialsOk returns a tuple with the Serials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetSerialsOk() ([]string, bool) {
	if o == nil || IsNil(o.Serials) {
		return nil, false
	}
	return o.Serials, true
}

// HasSerials returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasSerials() bool {
	if o != nil && !IsNil(o.Serials) {
		return true
	}

	return false
}

// SetSerials gets a reference to the given []string and assigns it to the Serials field.
func (o *CreateProductImageRequestData) SetSerials(v []string) {
	o.Serials = v
}

// GetSerialsRemoveDuplicates returns the SerialsRemoveDuplicates field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetSerialsRemoveDuplicates() bool {
	if o == nil || IsNil(o.SerialsRemoveDuplicates) {
		var ret bool
		return ret
	}
	return *o.SerialsRemoveDuplicates
}

// GetSerialsRemoveDuplicatesOk returns a tuple with the SerialsRemoveDuplicates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetSerialsRemoveDuplicatesOk() (*bool, bool) {
	if o == nil || IsNil(o.SerialsRemoveDuplicates) {
		return nil, false
	}
	return o.SerialsRemoveDuplicates, true
}

// HasSerialsRemoveDuplicates returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasSerialsRemoveDuplicates() bool {
	if o != nil && !IsNil(o.SerialsRemoveDuplicates) {
		return true
	}

	return false
}

// SetSerialsRemoveDuplicates gets a reference to the given bool and assigns it to the SerialsRemoveDuplicates field.
func (o *CreateProductImageRequestData) SetSerialsRemoveDuplicates(v bool) {
	o.SerialsRemoveDuplicates = &v
}

// GetServiceText returns the ServiceText field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetServiceText() string {
	if o == nil || IsNil(o.ServiceText) {
		var ret string
		return ret
	}
	return *o.ServiceText
}

// GetServiceTextOk returns a tuple with the ServiceText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetServiceTextOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceText) {
		return nil, false
	}
	return o.ServiceText, true
}

// HasServiceText returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasServiceText() bool {
	if o != nil && !IsNil(o.ServiceText) {
		return true
	}

	return false
}

// SetServiceText gets a reference to the given string and assigns it to the ServiceText field.
func (o *CreateProductImageRequestData) SetServiceText(v string) {
	o.ServiceText = &v
}

// GetStock returns the Stock field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetStock() int32 {
	if o == nil || IsNil(o.Stock) {
		var ret int32
		return ret
	}
	return *o.Stock
}

// GetStockOk returns a tuple with the Stock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetStockOk() (*int32, bool) {
	if o == nil || IsNil(o.Stock) {
		return nil, false
	}
	return o.Stock, true
}

// HasStock returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasStock() bool {
	if o != nil && !IsNil(o.Stock) {
		return true
	}

	return false
}

// SetStock gets a reference to the given int32 and assigns it to the Stock field.
func (o *CreateProductImageRequestData) SetStock(v int32) {
	o.Stock = &v
}

// GetDynamicWebhook returns the DynamicWebhook field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetDynamicWebhook() string {
	if o == nil || IsNil(o.DynamicWebhook) {
		var ret string
		return ret
	}
	return *o.DynamicWebhook
}

// GetDynamicWebhookOk returns a tuple with the DynamicWebhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetDynamicWebhookOk() (*string, bool) {
	if o == nil || IsNil(o.DynamicWebhook) {
		return nil, false
	}
	return o.DynamicWebhook, true
}

// HasDynamicWebhook returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasDynamicWebhook() bool {
	if o != nil && !IsNil(o.DynamicWebhook) {
		return true
	}

	return false
}

// SetDynamicWebhook gets a reference to the given string and assigns it to the DynamicWebhook field.
func (o *CreateProductImageRequestData) SetDynamicWebhook(v string) {
	o.DynamicWebhook = &v
}

// GetStockDelimiter returns the StockDelimiter field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetStockDelimiter() string {
	if o == nil || IsNil(o.StockDelimiter) {
		var ret string
		return ret
	}
	return *o.StockDelimiter
}

// GetStockDelimiterOk returns a tuple with the StockDelimiter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetStockDelimiterOk() (*string, bool) {
	if o == nil || IsNil(o.StockDelimiter) {
		return nil, false
	}
	return o.StockDelimiter, true
}

// HasStockDelimiter returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasStockDelimiter() bool {
	if o != nil && !IsNil(o.StockDelimiter) {
		return true
	}

	return false
}

// SetStockDelimiter gets a reference to the given string and assigns it to the StockDelimiter field.
func (o *CreateProductImageRequestData) SetStockDelimiter(v string) {
	o.StockDelimiter = &v
}

// GetMinQuantity returns the MinQuantity field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetMinQuantity() int32 {
	if o == nil || IsNil(o.MinQuantity) {
		var ret int32
		return ret
	}
	return *o.MinQuantity
}

// GetMinQuantityOk returns a tuple with the MinQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetMinQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.MinQuantity) {
		return nil, false
	}
	return o.MinQuantity, true
}

// HasMinQuantity returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasMinQuantity() bool {
	if o != nil && !IsNil(o.MinQuantity) {
		return true
	}

	return false
}

// SetMinQuantity gets a reference to the given int32 and assigns it to the MinQuantity field.
func (o *CreateProductImageRequestData) SetMinQuantity(v int32) {
	o.MinQuantity = &v
}

// GetMaxQuantity returns the MaxQuantity field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetMaxQuantity() int32 {
	if o == nil || IsNil(o.MaxQuantity) {
		var ret int32
		return ret
	}
	return *o.MaxQuantity
}

// GetMaxQuantityOk returns a tuple with the MaxQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetMaxQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxQuantity) {
		return nil, false
	}
	return o.MaxQuantity, true
}

// HasMaxQuantity returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasMaxQuantity() bool {
	if o != nil && !IsNil(o.MaxQuantity) {
		return true
	}

	return false
}

// SetMaxQuantity gets a reference to the given int32 and assigns it to the MaxQuantity field.
func (o *CreateProductImageRequestData) SetMaxQuantity(v int32) {
	o.MaxQuantity = &v
}

// GetDeliveryText returns the DeliveryText field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetDeliveryText() string {
	if o == nil || IsNil(o.DeliveryText) {
		var ret string
		return ret
	}
	return *o.DeliveryText
}

// GetDeliveryTextOk returns a tuple with the DeliveryText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetDeliveryTextOk() (*string, bool) {
	if o == nil || IsNil(o.DeliveryText) {
		return nil, false
	}
	return o.DeliveryText, true
}

// HasDeliveryText returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasDeliveryText() bool {
	if o != nil && !IsNil(o.DeliveryText) {
		return true
	}

	return false
}

// SetDeliveryText gets a reference to the given string and assigns it to the DeliveryText field.
func (o *CreateProductImageRequestData) SetDeliveryText(v string) {
	o.DeliveryText = &v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetCustomFields() []map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret []map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetCustomFieldsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given []map[string]interface{} and assigns it to the CustomFields field.
func (o *CreateProductImageRequestData) SetCustomFields(v []map[string]interface{}) {
	o.CustomFields = v
}

// GetCryptoConfirmationsNeeded returns the CryptoConfirmationsNeeded field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetCryptoConfirmationsNeeded() int32 {
	if o == nil || IsNil(o.CryptoConfirmationsNeeded) {
		var ret int32
		return ret
	}
	return *o.CryptoConfirmationsNeeded
}

// GetCryptoConfirmationsNeededOk returns a tuple with the CryptoConfirmationsNeeded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetCryptoConfirmationsNeededOk() (*int32, bool) {
	if o == nil || IsNil(o.CryptoConfirmationsNeeded) {
		return nil, false
	}
	return o.CryptoConfirmationsNeeded, true
}

// HasCryptoConfirmationsNeeded returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasCryptoConfirmationsNeeded() bool {
	if o != nil && !IsNil(o.CryptoConfirmationsNeeded) {
		return true
	}

	return false
}

// SetCryptoConfirmationsNeeded gets a reference to the given int32 and assigns it to the CryptoConfirmationsNeeded field.
func (o *CreateProductImageRequestData) SetCryptoConfirmationsNeeded(v int32) {
	o.CryptoConfirmationsNeeded = &v
}

// GetMaxRiskLevel returns the MaxRiskLevel field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetMaxRiskLevel() int32 {
	if o == nil || IsNil(o.MaxRiskLevel) {
		var ret int32
		return ret
	}
	return *o.MaxRiskLevel
}

// GetMaxRiskLevelOk returns a tuple with the MaxRiskLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetMaxRiskLevelOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxRiskLevel) {
		return nil, false
	}
	return o.MaxRiskLevel, true
}

// HasMaxRiskLevel returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasMaxRiskLevel() bool {
	if o != nil && !IsNil(o.MaxRiskLevel) {
		return true
	}

	return false
}

// SetMaxRiskLevel gets a reference to the given int32 and assigns it to the MaxRiskLevel field.
func (o *CreateProductImageRequestData) SetMaxRiskLevel(v int32) {
	o.MaxRiskLevel = &v
}

// GetUnlisted returns the Unlisted field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetUnlisted() bool {
	if o == nil || IsNil(o.Unlisted) {
		var ret bool
		return ret
	}
	return *o.Unlisted
}

// GetUnlistedOk returns a tuple with the Unlisted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetUnlistedOk() (*bool, bool) {
	if o == nil || IsNil(o.Unlisted) {
		return nil, false
	}
	return o.Unlisted, true
}

// HasUnlisted returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasUnlisted() bool {
	if o != nil && !IsNil(o.Unlisted) {
		return true
	}

	return false
}

// SetUnlisted gets a reference to the given bool and assigns it to the Unlisted field.
func (o *CreateProductImageRequestData) SetUnlisted(v bool) {
	o.Unlisted = &v
}

// GetPrivate returns the Private field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetPrivate() bool {
	if o == nil || IsNil(o.Private) {
		var ret bool
		return ret
	}
	return *o.Private
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetPrivateOk() (*bool, bool) {
	if o == nil || IsNil(o.Private) {
		return nil, false
	}
	return o.Private, true
}

// HasPrivate returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasPrivate() bool {
	if o != nil && !IsNil(o.Private) {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given bool and assigns it to the Private field.
func (o *CreateProductImageRequestData) SetPrivate(v bool) {
	o.Private = &v
}

// GetBlockVpnProxies returns the BlockVpnProxies field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetBlockVpnProxies() bool {
	if o == nil || IsNil(o.BlockVpnProxies) {
		var ret bool
		return ret
	}
	return *o.BlockVpnProxies
}

// GetBlockVpnProxiesOk returns a tuple with the BlockVpnProxies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetBlockVpnProxiesOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockVpnProxies) {
		return nil, false
	}
	return o.BlockVpnProxies, true
}

// HasBlockVpnProxies returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasBlockVpnProxies() bool {
	if o != nil && !IsNil(o.BlockVpnProxies) {
		return true
	}

	return false
}

// SetBlockVpnProxies gets a reference to the given bool and assigns it to the BlockVpnProxies field.
func (o *CreateProductImageRequestData) SetBlockVpnProxies(v bool) {
	o.BlockVpnProxies = &v
}

// GetSortPriority returns the SortPriority field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetSortPriority() int32 {
	if o == nil || IsNil(o.SortPriority) {
		var ret int32
		return ret
	}
	return *o.SortPriority
}

// GetSortPriorityOk returns a tuple with the SortPriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetSortPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.SortPriority) {
		return nil, false
	}
	return o.SortPriority, true
}

// HasSortPriority returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasSortPriority() bool {
	if o != nil && !IsNil(o.SortPriority) {
		return true
	}

	return false
}

// SetSortPriority gets a reference to the given int32 and assigns it to the SortPriority field.
func (o *CreateProductImageRequestData) SetSortPriority(v int32) {
	o.SortPriority = &v
}

// GetWebhooks returns the Webhooks field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetWebhooks() []string {
	if o == nil || IsNil(o.Webhooks) {
		var ret []string
		return ret
	}
	return o.Webhooks
}

// GetWebhooksOk returns a tuple with the Webhooks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetWebhooksOk() ([]string, bool) {
	if o == nil || IsNil(o.Webhooks) {
		return nil, false
	}
	return o.Webhooks, true
}

// HasWebhooks returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasWebhooks() bool {
	if o != nil && !IsNil(o.Webhooks) {
		return true
	}

	return false
}

// SetWebhooks gets a reference to the given []string and assigns it to the Webhooks field.
func (o *CreateProductImageRequestData) SetWebhooks(v []string) {
	o.Webhooks = v
}

// GetOnHold returns the OnHold field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetOnHold() bool {
	if o == nil || IsNil(o.OnHold) {
		var ret bool
		return ret
	}
	return *o.OnHold
}

// GetOnHoldOk returns a tuple with the OnHold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetOnHoldOk() (*bool, bool) {
	if o == nil || IsNil(o.OnHold) {
		return nil, false
	}
	return o.OnHold, true
}

// HasOnHold returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasOnHold() bool {
	if o != nil && !IsNil(o.OnHold) {
		return true
	}

	return false
}

// SetOnHold gets a reference to the given bool and assigns it to the OnHold field.
func (o *CreateProductImageRequestData) SetOnHold(v bool) {
	o.OnHold = &v
}

// GetTermsOfService returns the TermsOfService field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetTermsOfService() string {
	if o == nil || IsNil(o.TermsOfService) {
		var ret string
		return ret
	}
	return *o.TermsOfService
}

// GetTermsOfServiceOk returns a tuple with the TermsOfService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetTermsOfServiceOk() (*string, bool) {
	if o == nil || IsNil(o.TermsOfService) {
		return nil, false
	}
	return o.TermsOfService, true
}

// HasTermsOfService returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasTermsOfService() bool {
	if o != nil && !IsNil(o.TermsOfService) {
		return true
	}

	return false
}

// SetTermsOfService gets a reference to the given string and assigns it to the TermsOfService field.
func (o *CreateProductImageRequestData) SetTermsOfService(v string) {
	o.TermsOfService = &v
}

// GetWarranty returns the Warranty field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetWarranty() int32 {
	if o == nil || IsNil(o.Warranty) {
		var ret int32
		return ret
	}
	return *o.Warranty
}

// GetWarrantyOk returns a tuple with the Warranty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetWarrantyOk() (*int32, bool) {
	if o == nil || IsNil(o.Warranty) {
		return nil, false
	}
	return o.Warranty, true
}

// HasWarranty returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasWarranty() bool {
	if o != nil && !IsNil(o.Warranty) {
		return true
	}

	return false
}

// SetWarranty gets a reference to the given int32 and assigns it to the Warranty field.
func (o *CreateProductImageRequestData) SetWarranty(v int32) {
	o.Warranty = &v
}

// GetWarrantyText returns the WarrantyText field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetWarrantyText() string {
	if o == nil || IsNil(o.WarrantyText) {
		var ret string
		return ret
	}
	return *o.WarrantyText
}

// GetWarrantyTextOk returns a tuple with the WarrantyText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetWarrantyTextOk() (*string, bool) {
	if o == nil || IsNil(o.WarrantyText) {
		return nil, false
	}
	return o.WarrantyText, true
}

// HasWarrantyText returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasWarrantyText() bool {
	if o != nil && !IsNil(o.WarrantyText) {
		return true
	}

	return false
}

// SetWarrantyText gets a reference to the given string and assigns it to the WarrantyText field.
func (o *CreateProductImageRequestData) SetWarrantyText(v string) {
	o.WarrantyText = &v
}

// GetRemoveImage returns the RemoveImage field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetRemoveImage() bool {
	if o == nil || IsNil(o.RemoveImage) {
		var ret bool
		return ret
	}
	return *o.RemoveImage
}

// GetRemoveImageOk returns a tuple with the RemoveImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetRemoveImageOk() (*bool, bool) {
	if o == nil || IsNil(o.RemoveImage) {
		return nil, false
	}
	return o.RemoveImage, true
}

// HasRemoveImage returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasRemoveImage() bool {
	if o != nil && !IsNil(o.RemoveImage) {
		return true
	}

	return false
}

// SetRemoveImage gets a reference to the given bool and assigns it to the RemoveImage field.
func (o *CreateProductImageRequestData) SetRemoveImage(v bool) {
	o.RemoveImage = &v
}

// GetRemoveFile returns the RemoveFile field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetRemoveFile() bool {
	if o == nil || IsNil(o.RemoveFile) {
		var ret bool
		return ret
	}
	return *o.RemoveFile
}

// GetRemoveFileOk returns a tuple with the RemoveFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetRemoveFileOk() (*bool, bool) {
	if o == nil || IsNil(o.RemoveFile) {
		return nil, false
	}
	return o.RemoveFile, true
}

// HasRemoveFile returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasRemoveFile() bool {
	if o != nil && !IsNil(o.RemoveFile) {
		return true
	}

	return false
}

// SetRemoveFile gets a reference to the given bool and assigns it to the RemoveFile field.
func (o *CreateProductImageRequestData) SetRemoveFile(v bool) {
	o.RemoveFile = &v
}

// GetVolumeDiscounts returns the VolumeDiscounts field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetVolumeDiscounts() []map[string]interface{} {
	if o == nil || IsNil(o.VolumeDiscounts) {
		var ret []map[string]interface{}
		return ret
	}
	return o.VolumeDiscounts
}

// GetVolumeDiscountsOk returns a tuple with the VolumeDiscounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetVolumeDiscountsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.VolumeDiscounts) {
		return nil, false
	}
	return o.VolumeDiscounts, true
}

// HasVolumeDiscounts returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasVolumeDiscounts() bool {
	if o != nil && !IsNil(o.VolumeDiscounts) {
		return true
	}

	return false
}

// SetVolumeDiscounts gets a reference to the given []map[string]interface{} and assigns it to the VolumeDiscounts field.
func (o *CreateProductImageRequestData) SetVolumeDiscounts(v []map[string]interface{}) {
	o.VolumeDiscounts = v
}

// GetRecurringInterval returns the RecurringInterval field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetRecurringInterval() string {
	if o == nil || IsNil(o.RecurringInterval) {
		var ret string
		return ret
	}
	return *o.RecurringInterval
}

// GetRecurringIntervalOk returns a tuple with the RecurringInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetRecurringIntervalOk() (*string, bool) {
	if o == nil || IsNil(o.RecurringInterval) {
		return nil, false
	}
	return o.RecurringInterval, true
}

// HasRecurringInterval returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasRecurringInterval() bool {
	if o != nil && !IsNil(o.RecurringInterval) {
		return true
	}

	return false
}

// SetRecurringInterval gets a reference to the given string and assigns it to the RecurringInterval field.
func (o *CreateProductImageRequestData) SetRecurringInterval(v string) {
	o.RecurringInterval = &v
}

// GetRecurringIntervalCount returns the RecurringIntervalCount field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetRecurringIntervalCount() int32 {
	if o == nil || IsNil(o.RecurringIntervalCount) {
		var ret int32
		return ret
	}
	return *o.RecurringIntervalCount
}

// GetRecurringIntervalCountOk returns a tuple with the RecurringIntervalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetRecurringIntervalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.RecurringIntervalCount) {
		return nil, false
	}
	return o.RecurringIntervalCount, true
}

// HasRecurringIntervalCount returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasRecurringIntervalCount() bool {
	if o != nil && !IsNil(o.RecurringIntervalCount) {
		return true
	}

	return false
}

// SetRecurringIntervalCount gets a reference to the given int32 and assigns it to the RecurringIntervalCount field.
func (o *CreateProductImageRequestData) SetRecurringIntervalCount(v int32) {
	o.RecurringIntervalCount = &v
}

// GetTrialPeriod returns the TrialPeriod field value if set, zero value otherwise.
func (o *CreateProductImageRequestData) GetTrialPeriod() int32 {
	if o == nil || IsNil(o.TrialPeriod) {
		var ret int32
		return ret
	}
	return *o.TrialPeriod
}

// GetTrialPeriodOk returns a tuple with the TrialPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductImageRequestData) GetTrialPeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.TrialPeriod) {
		return nil, false
	}
	return o.TrialPeriod, true
}

// HasTrialPeriod returns a boolean if a field has been set.
func (o *CreateProductImageRequestData) HasTrialPeriod() bool {
	if o != nil && !IsNil(o.TrialPeriod) {
		return true
	}

	return false
}

// SetTrialPeriod gets a reference to the given int32 and assigns it to the TrialPeriod field.
func (o *CreateProductImageRequestData) SetTrialPeriod(v int32) {
	o.TrialPeriod = &v
}

func (o CreateProductImageRequestData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateProductImageRequestData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["title"] = o.Title
	toSerialize["price"] = o.Price
	toSerialize["description"] = o.Description
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Gateways) {
		toSerialize["gateways"] = o.Gateways
	}
	toSerialize["type"] = o.Type
	if !IsNil(o.Serials) {
		toSerialize["serials"] = o.Serials
	}
	if !IsNil(o.SerialsRemoveDuplicates) {
		toSerialize["serials_remove_duplicates"] = o.SerialsRemoveDuplicates
	}
	if !IsNil(o.ServiceText) {
		toSerialize["service_text"] = o.ServiceText
	}
	if !IsNil(o.Stock) {
		toSerialize["stock"] = o.Stock
	}
	if !IsNil(o.DynamicWebhook) {
		toSerialize["dynamic_webhook"] = o.DynamicWebhook
	}
	if !IsNil(o.StockDelimiter) {
		toSerialize["stock_delimiter"] = o.StockDelimiter
	}
	if !IsNil(o.MinQuantity) {
		toSerialize["min_quantity"] = o.MinQuantity
	}
	if !IsNil(o.MaxQuantity) {
		toSerialize["max_quantity"] = o.MaxQuantity
	}
	if !IsNil(o.DeliveryText) {
		toSerialize["delivery_text"] = o.DeliveryText
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if !IsNil(o.CryptoConfirmationsNeeded) {
		toSerialize["crypto_confirmations_needed"] = o.CryptoConfirmationsNeeded
	}
	if !IsNil(o.MaxRiskLevel) {
		toSerialize["max_risk_level"] = o.MaxRiskLevel
	}
	if !IsNil(o.Unlisted) {
		toSerialize["unlisted"] = o.Unlisted
	}
	if !IsNil(o.Private) {
		toSerialize["private"] = o.Private
	}
	if !IsNil(o.BlockVpnProxies) {
		toSerialize["block_vpn_proxies"] = o.BlockVpnProxies
	}
	if !IsNil(o.SortPriority) {
		toSerialize["sort_priority"] = o.SortPriority
	}
	if !IsNil(o.Webhooks) {
		toSerialize["webhooks"] = o.Webhooks
	}
	if !IsNil(o.OnHold) {
		toSerialize["on_hold"] = o.OnHold
	}
	if !IsNil(o.TermsOfService) {
		toSerialize["terms_of_service"] = o.TermsOfService
	}
	if !IsNil(o.Warranty) {
		toSerialize["warranty"] = o.Warranty
	}
	if !IsNil(o.WarrantyText) {
		toSerialize["warranty_text"] = o.WarrantyText
	}
	if !IsNil(o.RemoveImage) {
		toSerialize["remove_image"] = o.RemoveImage
	}
	if !IsNil(o.RemoveFile) {
		toSerialize["remove_file"] = o.RemoveFile
	}
	if !IsNil(o.VolumeDiscounts) {
		toSerialize["volume_discounts"] = o.VolumeDiscounts
	}
	if !IsNil(o.RecurringInterval) {
		toSerialize["recurring_interval"] = o.RecurringInterval
	}
	if !IsNil(o.RecurringIntervalCount) {
		toSerialize["recurring_interval_count"] = o.RecurringIntervalCount
	}
	if !IsNil(o.TrialPeriod) {
		toSerialize["trial_period"] = o.TrialPeriod
	}
	return toSerialize, nil
}

func (o *CreateProductImageRequestData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"title",
		"price",
		"description",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateProductImageRequestData := _CreateProductImageRequestData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateProductImageRequestData)

	if err != nil {
		return err
	}

	*o = CreateProductImageRequestData(varCreateProductImageRequestData)

	return err
}

type NullableCreateProductImageRequestData struct {
	value *CreateProductImageRequestData
	isSet bool
}

func (v NullableCreateProductImageRequestData) Get() *CreateProductImageRequestData {
	return v.value
}

func (v *NullableCreateProductImageRequestData) Set(val *CreateProductImageRequestData) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProductImageRequestData) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProductImageRequestData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProductImageRequestData(val *CreateProductImageRequestData) *NullableCreateProductImageRequestData {
	return &NullableCreateProductImageRequestData{value: val, isSet: true}
}

func (v NullableCreateProductImageRequestData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProductImageRequestData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


