/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the InvoiceListing type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceListing{}

// InvoiceListing struct for InvoiceListing
type InvoiceListing struct {
	// ID of the resource.
	Id *int32 `json:"id,omitempty"`
	// Unique ID of the resource, used as reference across the API.
	Uniqid *string `json:"uniqid,omitempty"`
	// Invoice total, unit_price*quantity where quantity is applicable.
	Total *float64 `json:"total,omitempty"`
	// Invoice total in the currency chosen.
	TotalDisplay *float64 `json:"total_display,omitempty"`
	// Exchange rate between currency chosen and USD.
	ExchangeRate *float64 `json:"exchange_rate,omitempty"`
	// Exchange rate between the cryptocurrency chosen (if any) and USD.
	CryptoExchangeRate *float64 `json:"crypto_exchange_rate,omitempty"`
	ProductVariants []ProductVariant `json:"product_variants,omitempty"`
	Currency *Currency `json:"currency,omitempty"`
	// The shop ID to which this invoice belongs.
	ShopId *int32 `json:"shop_id,omitempty"`
	// Invoice type. For subscriptions, the invoice type is PRODUCT_SUBSCRIPTION as SUBSCRIPTION is reserved for Sellix-own plans.
	Type *string `json:"type,omitempty"`
	// Email of the customer.
	CustomerEmail *string `json:"customer_email,omitempty"`
	// If true and gateway is PAYPAL, the product will be shipped to the PayPal email on record instead of the customer email.
	PaypalEmailDelivery *bool `json:"paypal_email_delivery,omitempty"`
	// Unique ID of the product linked to this invoice, if any.
	ProductId *string `json:"product_id,omitempty"`
	// Product title.
	ProductTitle *string `json:"product_title,omitempty"`
	// Product type.
	ProductType *string `json:"product_type,omitempty"`
	Gateway *Gateway `json:"gateway,omitempty"`
	// DEPRECATED: Merchant PayPal email.
	// Deprecated
	PaypalEmail *string `json:"paypal_email,omitempty"`
	// This field contains the PayPal order ID.
	PaypalOrderId *string `json:"paypal_order_id,omitempty"`
	// This field is updated after the invoice is completed with the fee taken by PayPal over the invoice total.
	PaypalFee *string `json:"paypal_fee,omitempty"`
	// This field is updated after the invoice is completed with the PayPal's email used for the purchase.
	PaypalPayerEmail *string `json:"paypal_payer_email,omitempty"`
	// Merchant Skrill email.
	SkrillEmail *string `json:"skrill_email,omitempty"`
	// Skrill unique ID linked to the invoice.
	SkrillSid *string `json:"skrill_sid,omitempty"`
	// Skrill link to redirect the customer to.
	SkrillLink *string `json:"skrill_link,omitempty"`
	// PerfectMoney payment ID linked to the invoice.
	PerfectmoneyId *string `json:"perfectmoney_id,omitempty"`
	// Cryptocurrency address linked to this invoice.
	CryptoAddress *string `json:"crypto_address,omitempty"`
	// Cryptocurrency amount converted based on crypto_exchange_rate.
	CryptoAmount *float64 `json:"crypto_amount,omitempty"`
	// Cryptocurrency amount received, paid by the customer.
	CryptoReceived *float64 `json:"crypto_received,omitempty"`
	// URI used to create the QRCODE.
	CryptoUri *string `json:"crypto_uri,omitempty"`
	// Crypto confirmations needed to process the invoice.
	CryptoConfirmationsNeeded *int32 `json:"crypto_confirmations_needed,omitempty"`
	// CashApp cashtag used to create the QRCODE.
	CashappCashtag *string `json:"cashapp_cashtag,omitempty"`
	// Unique note for the customer to leave in the CashApp payment.
	CashappNote *string `json:"cashapp_note,omitempty"`
	// Customer country.
	Country *string `json:"country,omitempty"`
	// Customer location.
	Location *string `json:"location,omitempty"`
	// Customer IP.
	Ip *string `json:"ip,omitempty"`
	// If true, a VPN or Proxy has been detected.
	IsVpnOrProxy *bool `json:"is_vpn_or_proxy,omitempty"`
	// Customer User Agent.
	UserAgent *string `json:"user_agent,omitempty"`
	// Qauntity of product purchased.
	Quantity *int32 `json:"quantity,omitempty"`
	// Unique ID of the coupon, if used, for the discount.
	CouponId *string `json:"coupon_id,omitempty"`
	// If coupon_id is specified, coupon_code contains the code used during the checkout.
	CouponCode *string `json:"coupon_code,omitempty"`
	// key-value JSON having as key the custom field name and as value the custom field value inserted by the customer. Custom fields can both be used as inputs from the customers but also as metadata for invoices, letting you pass hidden fields for internal referencing.
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	// If true, this invoice has been created through the Developers API.
	DeveloperInvoice *bool `json:"developer_invoice,omitempty"`
	// If a product_id is not passed through the Developers API, a title must be specified.
	DeveloperTitle *string `json:"developer_title,omitempty"`
	// Additional webhook URL to which updates regarding this invoice will be sent.
	DeveloperWebhook *string `json:"developer_webhook,omitempty"`
	// If present, the customer will be redirected to this URL after the invoice has been paid.
	DeveloperReturnUrl *string `json:"developer_return_url,omitempty"`
	// Status of the invoice.
	Status *string `json:"status,omitempty"`
	// If CART_PARTIAL_OUT_OF_STOCK, the invoice has been completed but some products in the cart were out of stock.
	StatusDetails *string `json:"status_details,omitempty"`
	// If the invoice is VOIDED and the product (or all the products in the cart) were out of stock, this additional status is set.
	VoidDetails *string `json:"void_details,omitempty"`
	// If a coupon or volume_discount is used, the discount value presents the total amount of discount over the total cost of the invoice.
	Discount *float64 `json:"discount,omitempty"`
	// What cut does Sellix take out of the total. To learn more about Sellix fees please refer to https://sellix.io/fees.
	FeePercentage *int32 `json:"fee_percentage,omitempty"`
	FeeBreakdown *FeeBreakdown `json:"fee_breakdown,omitempty"`
	// DEPRECATED: Day value, number.
	// Deprecated
	DayValue *int32 `json:"day_value,omitempty"`
	// DEPRECATED: First three letters of the day name.
	// Deprecated
	Day *string `json:"day,omitempty"`
	// DEPRECATED: First three letters of the month name.
	// Deprecated
	Month *string `json:"month,omitempty"`
	// DEPRECATED: Year number.
	// Deprecated
	Year *int32 `json:"year,omitempty"`
	// Timestamp for the creation of the invoice.
	CreatedAt *int32 `json:"created_at,omitempty"`
	// Date, available if the blacklist has been edited.
	UpdatedAt *int32 `json:"updated_at,omitempty"`
	// User ID of the user who updated the invoice.
	UpdatedBy *int32 `json:"updated_by,omitempty"`
	// Whether or not the EVM transaction is approved
	IsEvmApproved *bool `json:"is_evm_approved,omitempty"`
	// Whether or not a fee was billed to the customer
	FeeBilled *bool `json:"fee_billed,omitempty"`
	CryptoScheduledPayout *InvoiceListingCryptoScheduledPayout `json:"crypto_scheduled_payout,omitempty"`
	// Whether or not to support credit cards on PayPal
	ShopPaypalCreditCard *bool `json:"shop_paypal_credit_card,omitempty"`
	// Whether or not to deliver the product to the PayPal email address
	ShopForcePaypalEmailDelivery *bool `json:"shop_force_paypal_email_delivery,omitempty"`
}

// NewInvoiceListing instantiates a new InvoiceListing object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceListing() *InvoiceListing {
	this := InvoiceListing{}
	return &this
}

// NewInvoiceListingWithDefaults instantiates a new InvoiceListing object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceListingWithDefaults() *InvoiceListing {
	this := InvoiceListing{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InvoiceListing) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InvoiceListing) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *InvoiceListing) SetId(v int32) {
	o.Id = &v
}

// GetUniqid returns the Uniqid field value if set, zero value otherwise.
func (o *InvoiceListing) GetUniqid() string {
	if o == nil || IsNil(o.Uniqid) {
		var ret string
		return ret
	}
	return *o.Uniqid
}

// GetUniqidOk returns a tuple with the Uniqid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetUniqidOk() (*string, bool) {
	if o == nil || IsNil(o.Uniqid) {
		return nil, false
	}
	return o.Uniqid, true
}

// HasUniqid returns a boolean if a field has been set.
func (o *InvoiceListing) HasUniqid() bool {
	if o != nil && !IsNil(o.Uniqid) {
		return true
	}

	return false
}

// SetUniqid gets a reference to the given string and assigns it to the Uniqid field.
func (o *InvoiceListing) SetUniqid(v string) {
	o.Uniqid = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *InvoiceListing) GetTotal() float64 {
	if o == nil || IsNil(o.Total) {
		var ret float64
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetTotalOk() (*float64, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *InvoiceListing) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given float64 and assigns it to the Total field.
func (o *InvoiceListing) SetTotal(v float64) {
	o.Total = &v
}

// GetTotalDisplay returns the TotalDisplay field value if set, zero value otherwise.
func (o *InvoiceListing) GetTotalDisplay() float64 {
	if o == nil || IsNil(o.TotalDisplay) {
		var ret float64
		return ret
	}
	return *o.TotalDisplay
}

// GetTotalDisplayOk returns a tuple with the TotalDisplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetTotalDisplayOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalDisplay) {
		return nil, false
	}
	return o.TotalDisplay, true
}

// HasTotalDisplay returns a boolean if a field has been set.
func (o *InvoiceListing) HasTotalDisplay() bool {
	if o != nil && !IsNil(o.TotalDisplay) {
		return true
	}

	return false
}

// SetTotalDisplay gets a reference to the given float64 and assigns it to the TotalDisplay field.
func (o *InvoiceListing) SetTotalDisplay(v float64) {
	o.TotalDisplay = &v
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise.
func (o *InvoiceListing) GetExchangeRate() float64 {
	if o == nil || IsNil(o.ExchangeRate) {
		var ret float64
		return ret
	}
	return *o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetExchangeRateOk() (*float64, bool) {
	if o == nil || IsNil(o.ExchangeRate) {
		return nil, false
	}
	return o.ExchangeRate, true
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *InvoiceListing) HasExchangeRate() bool {
	if o != nil && !IsNil(o.ExchangeRate) {
		return true
	}

	return false
}

// SetExchangeRate gets a reference to the given float64 and assigns it to the ExchangeRate field.
func (o *InvoiceListing) SetExchangeRate(v float64) {
	o.ExchangeRate = &v
}

// GetCryptoExchangeRate returns the CryptoExchangeRate field value if set, zero value otherwise.
func (o *InvoiceListing) GetCryptoExchangeRate() float64 {
	if o == nil || IsNil(o.CryptoExchangeRate) {
		var ret float64
		return ret
	}
	return *o.CryptoExchangeRate
}

// GetCryptoExchangeRateOk returns a tuple with the CryptoExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetCryptoExchangeRateOk() (*float64, bool) {
	if o == nil || IsNil(o.CryptoExchangeRate) {
		return nil, false
	}
	return o.CryptoExchangeRate, true
}

// HasCryptoExchangeRate returns a boolean if a field has been set.
func (o *InvoiceListing) HasCryptoExchangeRate() bool {
	if o != nil && !IsNil(o.CryptoExchangeRate) {
		return true
	}

	return false
}

// SetCryptoExchangeRate gets a reference to the given float64 and assigns it to the CryptoExchangeRate field.
func (o *InvoiceListing) SetCryptoExchangeRate(v float64) {
	o.CryptoExchangeRate = &v
}

// GetProductVariants returns the ProductVariants field value if set, zero value otherwise.
func (o *InvoiceListing) GetProductVariants() []ProductVariant {
	if o == nil || IsNil(o.ProductVariants) {
		var ret []ProductVariant
		return ret
	}
	return o.ProductVariants
}

// GetProductVariantsOk returns a tuple with the ProductVariants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetProductVariantsOk() ([]ProductVariant, bool) {
	if o == nil || IsNil(o.ProductVariants) {
		return nil, false
	}
	return o.ProductVariants, true
}

// HasProductVariants returns a boolean if a field has been set.
func (o *InvoiceListing) HasProductVariants() bool {
	if o != nil && !IsNil(o.ProductVariants) {
		return true
	}

	return false
}

// SetProductVariants gets a reference to the given []ProductVariant and assigns it to the ProductVariants field.
func (o *InvoiceListing) SetProductVariants(v []ProductVariant) {
	o.ProductVariants = v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *InvoiceListing) GetCurrency() Currency {
	if o == nil || IsNil(o.Currency) {
		var ret Currency
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *InvoiceListing) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given Currency and assigns it to the Currency field.
func (o *InvoiceListing) SetCurrency(v Currency) {
	o.Currency = &v
}

// GetShopId returns the ShopId field value if set, zero value otherwise.
func (o *InvoiceListing) GetShopId() int32 {
	if o == nil || IsNil(o.ShopId) {
		var ret int32
		return ret
	}
	return *o.ShopId
}

// GetShopIdOk returns a tuple with the ShopId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetShopIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ShopId) {
		return nil, false
	}
	return o.ShopId, true
}

// HasShopId returns a boolean if a field has been set.
func (o *InvoiceListing) HasShopId() bool {
	if o != nil && !IsNil(o.ShopId) {
		return true
	}

	return false
}

// SetShopId gets a reference to the given int32 and assigns it to the ShopId field.
func (o *InvoiceListing) SetShopId(v int32) {
	o.ShopId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *InvoiceListing) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *InvoiceListing) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *InvoiceListing) SetType(v string) {
	o.Type = &v
}

// GetCustomerEmail returns the CustomerEmail field value if set, zero value otherwise.
func (o *InvoiceListing) GetCustomerEmail() string {
	if o == nil || IsNil(o.CustomerEmail) {
		var ret string
		return ret
	}
	return *o.CustomerEmail
}

// GetCustomerEmailOk returns a tuple with the CustomerEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetCustomerEmailOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerEmail) {
		return nil, false
	}
	return o.CustomerEmail, true
}

// HasCustomerEmail returns a boolean if a field has been set.
func (o *InvoiceListing) HasCustomerEmail() bool {
	if o != nil && !IsNil(o.CustomerEmail) {
		return true
	}

	return false
}

// SetCustomerEmail gets a reference to the given string and assigns it to the CustomerEmail field.
func (o *InvoiceListing) SetCustomerEmail(v string) {
	o.CustomerEmail = &v
}

// GetPaypalEmailDelivery returns the PaypalEmailDelivery field value if set, zero value otherwise.
func (o *InvoiceListing) GetPaypalEmailDelivery() bool {
	if o == nil || IsNil(o.PaypalEmailDelivery) {
		var ret bool
		return ret
	}
	return *o.PaypalEmailDelivery
}

// GetPaypalEmailDeliveryOk returns a tuple with the PaypalEmailDelivery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetPaypalEmailDeliveryOk() (*bool, bool) {
	if o == nil || IsNil(o.PaypalEmailDelivery) {
		return nil, false
	}
	return o.PaypalEmailDelivery, true
}

// HasPaypalEmailDelivery returns a boolean if a field has been set.
func (o *InvoiceListing) HasPaypalEmailDelivery() bool {
	if o != nil && !IsNil(o.PaypalEmailDelivery) {
		return true
	}

	return false
}

// SetPaypalEmailDelivery gets a reference to the given bool and assigns it to the PaypalEmailDelivery field.
func (o *InvoiceListing) SetPaypalEmailDelivery(v bool) {
	o.PaypalEmailDelivery = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *InvoiceListing) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *InvoiceListing) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *InvoiceListing) SetProductId(v string) {
	o.ProductId = &v
}

// GetProductTitle returns the ProductTitle field value if set, zero value otherwise.
func (o *InvoiceListing) GetProductTitle() string {
	if o == nil || IsNil(o.ProductTitle) {
		var ret string
		return ret
	}
	return *o.ProductTitle
}

// GetProductTitleOk returns a tuple with the ProductTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetProductTitleOk() (*string, bool) {
	if o == nil || IsNil(o.ProductTitle) {
		return nil, false
	}
	return o.ProductTitle, true
}

// HasProductTitle returns a boolean if a field has been set.
func (o *InvoiceListing) HasProductTitle() bool {
	if o != nil && !IsNil(o.ProductTitle) {
		return true
	}

	return false
}

// SetProductTitle gets a reference to the given string and assigns it to the ProductTitle field.
func (o *InvoiceListing) SetProductTitle(v string) {
	o.ProductTitle = &v
}

// GetProductType returns the ProductType field value if set, zero value otherwise.
func (o *InvoiceListing) GetProductType() string {
	if o == nil || IsNil(o.ProductType) {
		var ret string
		return ret
	}
	return *o.ProductType
}

// GetProductTypeOk returns a tuple with the ProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetProductTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProductType) {
		return nil, false
	}
	return o.ProductType, true
}

// HasProductType returns a boolean if a field has been set.
func (o *InvoiceListing) HasProductType() bool {
	if o != nil && !IsNil(o.ProductType) {
		return true
	}

	return false
}

// SetProductType gets a reference to the given string and assigns it to the ProductType field.
func (o *InvoiceListing) SetProductType(v string) {
	o.ProductType = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *InvoiceListing) GetGateway() Gateway {
	if o == nil || IsNil(o.Gateway) {
		var ret Gateway
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetGatewayOk() (*Gateway, bool) {
	if o == nil || IsNil(o.Gateway) {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *InvoiceListing) HasGateway() bool {
	if o != nil && !IsNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given Gateway and assigns it to the Gateway field.
func (o *InvoiceListing) SetGateway(v Gateway) {
	o.Gateway = &v
}

// GetPaypalEmail returns the PaypalEmail field value if set, zero value otherwise.
// Deprecated
func (o *InvoiceListing) GetPaypalEmail() string {
	if o == nil || IsNil(o.PaypalEmail) {
		var ret string
		return ret
	}
	return *o.PaypalEmail
}

// GetPaypalEmailOk returns a tuple with the PaypalEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *InvoiceListing) GetPaypalEmailOk() (*string, bool) {
	if o == nil || IsNil(o.PaypalEmail) {
		return nil, false
	}
	return o.PaypalEmail, true
}

// HasPaypalEmail returns a boolean if a field has been set.
func (o *InvoiceListing) HasPaypalEmail() bool {
	if o != nil && !IsNil(o.PaypalEmail) {
		return true
	}

	return false
}

// SetPaypalEmail gets a reference to the given string and assigns it to the PaypalEmail field.
// Deprecated
func (o *InvoiceListing) SetPaypalEmail(v string) {
	o.PaypalEmail = &v
}

// GetPaypalOrderId returns the PaypalOrderId field value if set, zero value otherwise.
func (o *InvoiceListing) GetPaypalOrderId() string {
	if o == nil || IsNil(o.PaypalOrderId) {
		var ret string
		return ret
	}
	return *o.PaypalOrderId
}

// GetPaypalOrderIdOk returns a tuple with the PaypalOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetPaypalOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaypalOrderId) {
		return nil, false
	}
	return o.PaypalOrderId, true
}

// HasPaypalOrderId returns a boolean if a field has been set.
func (o *InvoiceListing) HasPaypalOrderId() bool {
	if o != nil && !IsNil(o.PaypalOrderId) {
		return true
	}

	return false
}

// SetPaypalOrderId gets a reference to the given string and assigns it to the PaypalOrderId field.
func (o *InvoiceListing) SetPaypalOrderId(v string) {
	o.PaypalOrderId = &v
}

// GetPaypalFee returns the PaypalFee field value if set, zero value otherwise.
func (o *InvoiceListing) GetPaypalFee() string {
	if o == nil || IsNil(o.PaypalFee) {
		var ret string
		return ret
	}
	return *o.PaypalFee
}

// GetPaypalFeeOk returns a tuple with the PaypalFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetPaypalFeeOk() (*string, bool) {
	if o == nil || IsNil(o.PaypalFee) {
		return nil, false
	}
	return o.PaypalFee, true
}

// HasPaypalFee returns a boolean if a field has been set.
func (o *InvoiceListing) HasPaypalFee() bool {
	if o != nil && !IsNil(o.PaypalFee) {
		return true
	}

	return false
}

// SetPaypalFee gets a reference to the given string and assigns it to the PaypalFee field.
func (o *InvoiceListing) SetPaypalFee(v string) {
	o.PaypalFee = &v
}

// GetPaypalPayerEmail returns the PaypalPayerEmail field value if set, zero value otherwise.
func (o *InvoiceListing) GetPaypalPayerEmail() string {
	if o == nil || IsNil(o.PaypalPayerEmail) {
		var ret string
		return ret
	}
	return *o.PaypalPayerEmail
}

// GetPaypalPayerEmailOk returns a tuple with the PaypalPayerEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetPaypalPayerEmailOk() (*string, bool) {
	if o == nil || IsNil(o.PaypalPayerEmail) {
		return nil, false
	}
	return o.PaypalPayerEmail, true
}

// HasPaypalPayerEmail returns a boolean if a field has been set.
func (o *InvoiceListing) HasPaypalPayerEmail() bool {
	if o != nil && !IsNil(o.PaypalPayerEmail) {
		return true
	}

	return false
}

// SetPaypalPayerEmail gets a reference to the given string and assigns it to the PaypalPayerEmail field.
func (o *InvoiceListing) SetPaypalPayerEmail(v string) {
	o.PaypalPayerEmail = &v
}

// GetSkrillEmail returns the SkrillEmail field value if set, zero value otherwise.
func (o *InvoiceListing) GetSkrillEmail() string {
	if o == nil || IsNil(o.SkrillEmail) {
		var ret string
		return ret
	}
	return *o.SkrillEmail
}

// GetSkrillEmailOk returns a tuple with the SkrillEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetSkrillEmailOk() (*string, bool) {
	if o == nil || IsNil(o.SkrillEmail) {
		return nil, false
	}
	return o.SkrillEmail, true
}

// HasSkrillEmail returns a boolean if a field has been set.
func (o *InvoiceListing) HasSkrillEmail() bool {
	if o != nil && !IsNil(o.SkrillEmail) {
		return true
	}

	return false
}

// SetSkrillEmail gets a reference to the given string and assigns it to the SkrillEmail field.
func (o *InvoiceListing) SetSkrillEmail(v string) {
	o.SkrillEmail = &v
}

// GetSkrillSid returns the SkrillSid field value if set, zero value otherwise.
func (o *InvoiceListing) GetSkrillSid() string {
	if o == nil || IsNil(o.SkrillSid) {
		var ret string
		return ret
	}
	return *o.SkrillSid
}

// GetSkrillSidOk returns a tuple with the SkrillSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetSkrillSidOk() (*string, bool) {
	if o == nil || IsNil(o.SkrillSid) {
		return nil, false
	}
	return o.SkrillSid, true
}

// HasSkrillSid returns a boolean if a field has been set.
func (o *InvoiceListing) HasSkrillSid() bool {
	if o != nil && !IsNil(o.SkrillSid) {
		return true
	}

	return false
}

// SetSkrillSid gets a reference to the given string and assigns it to the SkrillSid field.
func (o *InvoiceListing) SetSkrillSid(v string) {
	o.SkrillSid = &v
}

// GetSkrillLink returns the SkrillLink field value if set, zero value otherwise.
func (o *InvoiceListing) GetSkrillLink() string {
	if o == nil || IsNil(o.SkrillLink) {
		var ret string
		return ret
	}
	return *o.SkrillLink
}

// GetSkrillLinkOk returns a tuple with the SkrillLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetSkrillLinkOk() (*string, bool) {
	if o == nil || IsNil(o.SkrillLink) {
		return nil, false
	}
	return o.SkrillLink, true
}

// HasSkrillLink returns a boolean if a field has been set.
func (o *InvoiceListing) HasSkrillLink() bool {
	if o != nil && !IsNil(o.SkrillLink) {
		return true
	}

	return false
}

// SetSkrillLink gets a reference to the given string and assigns it to the SkrillLink field.
func (o *InvoiceListing) SetSkrillLink(v string) {
	o.SkrillLink = &v
}

// GetPerfectmoneyId returns the PerfectmoneyId field value if set, zero value otherwise.
func (o *InvoiceListing) GetPerfectmoneyId() string {
	if o == nil || IsNil(o.PerfectmoneyId) {
		var ret string
		return ret
	}
	return *o.PerfectmoneyId
}

// GetPerfectmoneyIdOk returns a tuple with the PerfectmoneyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetPerfectmoneyIdOk() (*string, bool) {
	if o == nil || IsNil(o.PerfectmoneyId) {
		return nil, false
	}
	return o.PerfectmoneyId, true
}

// HasPerfectmoneyId returns a boolean if a field has been set.
func (o *InvoiceListing) HasPerfectmoneyId() bool {
	if o != nil && !IsNil(o.PerfectmoneyId) {
		return true
	}

	return false
}

// SetPerfectmoneyId gets a reference to the given string and assigns it to the PerfectmoneyId field.
func (o *InvoiceListing) SetPerfectmoneyId(v string) {
	o.PerfectmoneyId = &v
}

// GetCryptoAddress returns the CryptoAddress field value if set, zero value otherwise.
func (o *InvoiceListing) GetCryptoAddress() string {
	if o == nil || IsNil(o.CryptoAddress) {
		var ret string
		return ret
	}
	return *o.CryptoAddress
}

// GetCryptoAddressOk returns a tuple with the CryptoAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetCryptoAddressOk() (*string, bool) {
	if o == nil || IsNil(o.CryptoAddress) {
		return nil, false
	}
	return o.CryptoAddress, true
}

// HasCryptoAddress returns a boolean if a field has been set.
func (o *InvoiceListing) HasCryptoAddress() bool {
	if o != nil && !IsNil(o.CryptoAddress) {
		return true
	}

	return false
}

// SetCryptoAddress gets a reference to the given string and assigns it to the CryptoAddress field.
func (o *InvoiceListing) SetCryptoAddress(v string) {
	o.CryptoAddress = &v
}

// GetCryptoAmount returns the CryptoAmount field value if set, zero value otherwise.
func (o *InvoiceListing) GetCryptoAmount() float64 {
	if o == nil || IsNil(o.CryptoAmount) {
		var ret float64
		return ret
	}
	return *o.CryptoAmount
}

// GetCryptoAmountOk returns a tuple with the CryptoAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetCryptoAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.CryptoAmount) {
		return nil, false
	}
	return o.CryptoAmount, true
}

// HasCryptoAmount returns a boolean if a field has been set.
func (o *InvoiceListing) HasCryptoAmount() bool {
	if o != nil && !IsNil(o.CryptoAmount) {
		return true
	}

	return false
}

// SetCryptoAmount gets a reference to the given float64 and assigns it to the CryptoAmount field.
func (o *InvoiceListing) SetCryptoAmount(v float64) {
	o.CryptoAmount = &v
}

// GetCryptoReceived returns the CryptoReceived field value if set, zero value otherwise.
func (o *InvoiceListing) GetCryptoReceived() float64 {
	if o == nil || IsNil(o.CryptoReceived) {
		var ret float64
		return ret
	}
	return *o.CryptoReceived
}

// GetCryptoReceivedOk returns a tuple with the CryptoReceived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetCryptoReceivedOk() (*float64, bool) {
	if o == nil || IsNil(o.CryptoReceived) {
		return nil, false
	}
	return o.CryptoReceived, true
}

// HasCryptoReceived returns a boolean if a field has been set.
func (o *InvoiceListing) HasCryptoReceived() bool {
	if o != nil && !IsNil(o.CryptoReceived) {
		return true
	}

	return false
}

// SetCryptoReceived gets a reference to the given float64 and assigns it to the CryptoReceived field.
func (o *InvoiceListing) SetCryptoReceived(v float64) {
	o.CryptoReceived = &v
}

// GetCryptoUri returns the CryptoUri field value if set, zero value otherwise.
func (o *InvoiceListing) GetCryptoUri() string {
	if o == nil || IsNil(o.CryptoUri) {
		var ret string
		return ret
	}
	return *o.CryptoUri
}

// GetCryptoUriOk returns a tuple with the CryptoUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetCryptoUriOk() (*string, bool) {
	if o == nil || IsNil(o.CryptoUri) {
		return nil, false
	}
	return o.CryptoUri, true
}

// HasCryptoUri returns a boolean if a field has been set.
func (o *InvoiceListing) HasCryptoUri() bool {
	if o != nil && !IsNil(o.CryptoUri) {
		return true
	}

	return false
}

// SetCryptoUri gets a reference to the given string and assigns it to the CryptoUri field.
func (o *InvoiceListing) SetCryptoUri(v string) {
	o.CryptoUri = &v
}

// GetCryptoConfirmationsNeeded returns the CryptoConfirmationsNeeded field value if set, zero value otherwise.
func (o *InvoiceListing) GetCryptoConfirmationsNeeded() int32 {
	if o == nil || IsNil(o.CryptoConfirmationsNeeded) {
		var ret int32
		return ret
	}
	return *o.CryptoConfirmationsNeeded
}

// GetCryptoConfirmationsNeededOk returns a tuple with the CryptoConfirmationsNeeded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetCryptoConfirmationsNeededOk() (*int32, bool) {
	if o == nil || IsNil(o.CryptoConfirmationsNeeded) {
		return nil, false
	}
	return o.CryptoConfirmationsNeeded, true
}

// HasCryptoConfirmationsNeeded returns a boolean if a field has been set.
func (o *InvoiceListing) HasCryptoConfirmationsNeeded() bool {
	if o != nil && !IsNil(o.CryptoConfirmationsNeeded) {
		return true
	}

	return false
}

// SetCryptoConfirmationsNeeded gets a reference to the given int32 and assigns it to the CryptoConfirmationsNeeded field.
func (o *InvoiceListing) SetCryptoConfirmationsNeeded(v int32) {
	o.CryptoConfirmationsNeeded = &v
}

// GetCashappCashtag returns the CashappCashtag field value if set, zero value otherwise.
func (o *InvoiceListing) GetCashappCashtag() string {
	if o == nil || IsNil(o.CashappCashtag) {
		var ret string
		return ret
	}
	return *o.CashappCashtag
}

// GetCashappCashtagOk returns a tuple with the CashappCashtag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetCashappCashtagOk() (*string, bool) {
	if o == nil || IsNil(o.CashappCashtag) {
		return nil, false
	}
	return o.CashappCashtag, true
}

// HasCashappCashtag returns a boolean if a field has been set.
func (o *InvoiceListing) HasCashappCashtag() bool {
	if o != nil && !IsNil(o.CashappCashtag) {
		return true
	}

	return false
}

// SetCashappCashtag gets a reference to the given string and assigns it to the CashappCashtag field.
func (o *InvoiceListing) SetCashappCashtag(v string) {
	o.CashappCashtag = &v
}

// GetCashappNote returns the CashappNote field value if set, zero value otherwise.
func (o *InvoiceListing) GetCashappNote() string {
	if o == nil || IsNil(o.CashappNote) {
		var ret string
		return ret
	}
	return *o.CashappNote
}

// GetCashappNoteOk returns a tuple with the CashappNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetCashappNoteOk() (*string, bool) {
	if o == nil || IsNil(o.CashappNote) {
		return nil, false
	}
	return o.CashappNote, true
}

// HasCashappNote returns a boolean if a field has been set.
func (o *InvoiceListing) HasCashappNote() bool {
	if o != nil && !IsNil(o.CashappNote) {
		return true
	}

	return false
}

// SetCashappNote gets a reference to the given string and assigns it to the CashappNote field.
func (o *InvoiceListing) SetCashappNote(v string) {
	o.CashappNote = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *InvoiceListing) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *InvoiceListing) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *InvoiceListing) SetCountry(v string) {
	o.Country = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *InvoiceListing) GetLocation() string {
	if o == nil || IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetLocationOk() (*string, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *InvoiceListing) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *InvoiceListing) SetLocation(v string) {
	o.Location = &v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *InvoiceListing) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *InvoiceListing) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *InvoiceListing) SetIp(v string) {
	o.Ip = &v
}

// GetIsVpnOrProxy returns the IsVpnOrProxy field value if set, zero value otherwise.
func (o *InvoiceListing) GetIsVpnOrProxy() bool {
	if o == nil || IsNil(o.IsVpnOrProxy) {
		var ret bool
		return ret
	}
	return *o.IsVpnOrProxy
}

// GetIsVpnOrProxyOk returns a tuple with the IsVpnOrProxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetIsVpnOrProxyOk() (*bool, bool) {
	if o == nil || IsNil(o.IsVpnOrProxy) {
		return nil, false
	}
	return o.IsVpnOrProxy, true
}

// HasIsVpnOrProxy returns a boolean if a field has been set.
func (o *InvoiceListing) HasIsVpnOrProxy() bool {
	if o != nil && !IsNil(o.IsVpnOrProxy) {
		return true
	}

	return false
}

// SetIsVpnOrProxy gets a reference to the given bool and assigns it to the IsVpnOrProxy field.
func (o *InvoiceListing) SetIsVpnOrProxy(v bool) {
	o.IsVpnOrProxy = &v
}

// GetUserAgent returns the UserAgent field value if set, zero value otherwise.
func (o *InvoiceListing) GetUserAgent() string {
	if o == nil || IsNil(o.UserAgent) {
		var ret string
		return ret
	}
	return *o.UserAgent
}

// GetUserAgentOk returns a tuple with the UserAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetUserAgentOk() (*string, bool) {
	if o == nil || IsNil(o.UserAgent) {
		return nil, false
	}
	return o.UserAgent, true
}

// HasUserAgent returns a boolean if a field has been set.
func (o *InvoiceListing) HasUserAgent() bool {
	if o != nil && !IsNil(o.UserAgent) {
		return true
	}

	return false
}

// SetUserAgent gets a reference to the given string and assigns it to the UserAgent field.
func (o *InvoiceListing) SetUserAgent(v string) {
	o.UserAgent = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *InvoiceListing) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *InvoiceListing) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *InvoiceListing) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetCouponId returns the CouponId field value if set, zero value otherwise.
func (o *InvoiceListing) GetCouponId() string {
	if o == nil || IsNil(o.CouponId) {
		var ret string
		return ret
	}
	return *o.CouponId
}

// GetCouponIdOk returns a tuple with the CouponId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetCouponIdOk() (*string, bool) {
	if o == nil || IsNil(o.CouponId) {
		return nil, false
	}
	return o.CouponId, true
}

// HasCouponId returns a boolean if a field has been set.
func (o *InvoiceListing) HasCouponId() bool {
	if o != nil && !IsNil(o.CouponId) {
		return true
	}

	return false
}

// SetCouponId gets a reference to the given string and assigns it to the CouponId field.
func (o *InvoiceListing) SetCouponId(v string) {
	o.CouponId = &v
}

// GetCouponCode returns the CouponCode field value if set, zero value otherwise.
func (o *InvoiceListing) GetCouponCode() string {
	if o == nil || IsNil(o.CouponCode) {
		var ret string
		return ret
	}
	return *o.CouponCode
}

// GetCouponCodeOk returns a tuple with the CouponCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetCouponCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CouponCode) {
		return nil, false
	}
	return o.CouponCode, true
}

// HasCouponCode returns a boolean if a field has been set.
func (o *InvoiceListing) HasCouponCode() bool {
	if o != nil && !IsNil(o.CouponCode) {
		return true
	}

	return false
}

// SetCouponCode gets a reference to the given string and assigns it to the CouponCode field.
func (o *InvoiceListing) SetCouponCode(v string) {
	o.CouponCode = &v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *InvoiceListing) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *InvoiceListing) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *InvoiceListing) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetDeveloperInvoice returns the DeveloperInvoice field value if set, zero value otherwise.
func (o *InvoiceListing) GetDeveloperInvoice() bool {
	if o == nil || IsNil(o.DeveloperInvoice) {
		var ret bool
		return ret
	}
	return *o.DeveloperInvoice
}

// GetDeveloperInvoiceOk returns a tuple with the DeveloperInvoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetDeveloperInvoiceOk() (*bool, bool) {
	if o == nil || IsNil(o.DeveloperInvoice) {
		return nil, false
	}
	return o.DeveloperInvoice, true
}

// HasDeveloperInvoice returns a boolean if a field has been set.
func (o *InvoiceListing) HasDeveloperInvoice() bool {
	if o != nil && !IsNil(o.DeveloperInvoice) {
		return true
	}

	return false
}

// SetDeveloperInvoice gets a reference to the given bool and assigns it to the DeveloperInvoice field.
func (o *InvoiceListing) SetDeveloperInvoice(v bool) {
	o.DeveloperInvoice = &v
}

// GetDeveloperTitle returns the DeveloperTitle field value if set, zero value otherwise.
func (o *InvoiceListing) GetDeveloperTitle() string {
	if o == nil || IsNil(o.DeveloperTitle) {
		var ret string
		return ret
	}
	return *o.DeveloperTitle
}

// GetDeveloperTitleOk returns a tuple with the DeveloperTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetDeveloperTitleOk() (*string, bool) {
	if o == nil || IsNil(o.DeveloperTitle) {
		return nil, false
	}
	return o.DeveloperTitle, true
}

// HasDeveloperTitle returns a boolean if a field has been set.
func (o *InvoiceListing) HasDeveloperTitle() bool {
	if o != nil && !IsNil(o.DeveloperTitle) {
		return true
	}

	return false
}

// SetDeveloperTitle gets a reference to the given string and assigns it to the DeveloperTitle field.
func (o *InvoiceListing) SetDeveloperTitle(v string) {
	o.DeveloperTitle = &v
}

// GetDeveloperWebhook returns the DeveloperWebhook field value if set, zero value otherwise.
func (o *InvoiceListing) GetDeveloperWebhook() string {
	if o == nil || IsNil(o.DeveloperWebhook) {
		var ret string
		return ret
	}
	return *o.DeveloperWebhook
}

// GetDeveloperWebhookOk returns a tuple with the DeveloperWebhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetDeveloperWebhookOk() (*string, bool) {
	if o == nil || IsNil(o.DeveloperWebhook) {
		return nil, false
	}
	return o.DeveloperWebhook, true
}

// HasDeveloperWebhook returns a boolean if a field has been set.
func (o *InvoiceListing) HasDeveloperWebhook() bool {
	if o != nil && !IsNil(o.DeveloperWebhook) {
		return true
	}

	return false
}

// SetDeveloperWebhook gets a reference to the given string and assigns it to the DeveloperWebhook field.
func (o *InvoiceListing) SetDeveloperWebhook(v string) {
	o.DeveloperWebhook = &v
}

// GetDeveloperReturnUrl returns the DeveloperReturnUrl field value if set, zero value otherwise.
func (o *InvoiceListing) GetDeveloperReturnUrl() string {
	if o == nil || IsNil(o.DeveloperReturnUrl) {
		var ret string
		return ret
	}
	return *o.DeveloperReturnUrl
}

// GetDeveloperReturnUrlOk returns a tuple with the DeveloperReturnUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetDeveloperReturnUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DeveloperReturnUrl) {
		return nil, false
	}
	return o.DeveloperReturnUrl, true
}

// HasDeveloperReturnUrl returns a boolean if a field has been set.
func (o *InvoiceListing) HasDeveloperReturnUrl() bool {
	if o != nil && !IsNil(o.DeveloperReturnUrl) {
		return true
	}

	return false
}

// SetDeveloperReturnUrl gets a reference to the given string and assigns it to the DeveloperReturnUrl field.
func (o *InvoiceListing) SetDeveloperReturnUrl(v string) {
	o.DeveloperReturnUrl = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InvoiceListing) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InvoiceListing) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InvoiceListing) SetStatus(v string) {
	o.Status = &v
}

// GetStatusDetails returns the StatusDetails field value if set, zero value otherwise.
func (o *InvoiceListing) GetStatusDetails() string {
	if o == nil || IsNil(o.StatusDetails) {
		var ret string
		return ret
	}
	return *o.StatusDetails
}

// GetStatusDetailsOk returns a tuple with the StatusDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetStatusDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.StatusDetails) {
		return nil, false
	}
	return o.StatusDetails, true
}

// HasStatusDetails returns a boolean if a field has been set.
func (o *InvoiceListing) HasStatusDetails() bool {
	if o != nil && !IsNil(o.StatusDetails) {
		return true
	}

	return false
}

// SetStatusDetails gets a reference to the given string and assigns it to the StatusDetails field.
func (o *InvoiceListing) SetStatusDetails(v string) {
	o.StatusDetails = &v
}

// GetVoidDetails returns the VoidDetails field value if set, zero value otherwise.
func (o *InvoiceListing) GetVoidDetails() string {
	if o == nil || IsNil(o.VoidDetails) {
		var ret string
		return ret
	}
	return *o.VoidDetails
}

// GetVoidDetailsOk returns a tuple with the VoidDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetVoidDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.VoidDetails) {
		return nil, false
	}
	return o.VoidDetails, true
}

// HasVoidDetails returns a boolean if a field has been set.
func (o *InvoiceListing) HasVoidDetails() bool {
	if o != nil && !IsNil(o.VoidDetails) {
		return true
	}

	return false
}

// SetVoidDetails gets a reference to the given string and assigns it to the VoidDetails field.
func (o *InvoiceListing) SetVoidDetails(v string) {
	o.VoidDetails = &v
}

// GetDiscount returns the Discount field value if set, zero value otherwise.
func (o *InvoiceListing) GetDiscount() float64 {
	if o == nil || IsNil(o.Discount) {
		var ret float64
		return ret
	}
	return *o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetDiscountOk() (*float64, bool) {
	if o == nil || IsNil(o.Discount) {
		return nil, false
	}
	return o.Discount, true
}

// HasDiscount returns a boolean if a field has been set.
func (o *InvoiceListing) HasDiscount() bool {
	if o != nil && !IsNil(o.Discount) {
		return true
	}

	return false
}

// SetDiscount gets a reference to the given float64 and assigns it to the Discount field.
func (o *InvoiceListing) SetDiscount(v float64) {
	o.Discount = &v
}

// GetFeePercentage returns the FeePercentage field value if set, zero value otherwise.
func (o *InvoiceListing) GetFeePercentage() int32 {
	if o == nil || IsNil(o.FeePercentage) {
		var ret int32
		return ret
	}
	return *o.FeePercentage
}

// GetFeePercentageOk returns a tuple with the FeePercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetFeePercentageOk() (*int32, bool) {
	if o == nil || IsNil(o.FeePercentage) {
		return nil, false
	}
	return o.FeePercentage, true
}

// HasFeePercentage returns a boolean if a field has been set.
func (o *InvoiceListing) HasFeePercentage() bool {
	if o != nil && !IsNil(o.FeePercentage) {
		return true
	}

	return false
}

// SetFeePercentage gets a reference to the given int32 and assigns it to the FeePercentage field.
func (o *InvoiceListing) SetFeePercentage(v int32) {
	o.FeePercentage = &v
}

// GetFeeBreakdown returns the FeeBreakdown field value if set, zero value otherwise.
func (o *InvoiceListing) GetFeeBreakdown() FeeBreakdown {
	if o == nil || IsNil(o.FeeBreakdown) {
		var ret FeeBreakdown
		return ret
	}
	return *o.FeeBreakdown
}

// GetFeeBreakdownOk returns a tuple with the FeeBreakdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetFeeBreakdownOk() (*FeeBreakdown, bool) {
	if o == nil || IsNil(o.FeeBreakdown) {
		return nil, false
	}
	return o.FeeBreakdown, true
}

// HasFeeBreakdown returns a boolean if a field has been set.
func (o *InvoiceListing) HasFeeBreakdown() bool {
	if o != nil && !IsNil(o.FeeBreakdown) {
		return true
	}

	return false
}

// SetFeeBreakdown gets a reference to the given FeeBreakdown and assigns it to the FeeBreakdown field.
func (o *InvoiceListing) SetFeeBreakdown(v FeeBreakdown) {
	o.FeeBreakdown = &v
}

// GetDayValue returns the DayValue field value if set, zero value otherwise.
// Deprecated
func (o *InvoiceListing) GetDayValue() int32 {
	if o == nil || IsNil(o.DayValue) {
		var ret int32
		return ret
	}
	return *o.DayValue
}

// GetDayValueOk returns a tuple with the DayValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *InvoiceListing) GetDayValueOk() (*int32, bool) {
	if o == nil || IsNil(o.DayValue) {
		return nil, false
	}
	return o.DayValue, true
}

// HasDayValue returns a boolean if a field has been set.
func (o *InvoiceListing) HasDayValue() bool {
	if o != nil && !IsNil(o.DayValue) {
		return true
	}

	return false
}

// SetDayValue gets a reference to the given int32 and assigns it to the DayValue field.
// Deprecated
func (o *InvoiceListing) SetDayValue(v int32) {
	o.DayValue = &v
}

// GetDay returns the Day field value if set, zero value otherwise.
// Deprecated
func (o *InvoiceListing) GetDay() string {
	if o == nil || IsNil(o.Day) {
		var ret string
		return ret
	}
	return *o.Day
}

// GetDayOk returns a tuple with the Day field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *InvoiceListing) GetDayOk() (*string, bool) {
	if o == nil || IsNil(o.Day) {
		return nil, false
	}
	return o.Day, true
}

// HasDay returns a boolean if a field has been set.
func (o *InvoiceListing) HasDay() bool {
	if o != nil && !IsNil(o.Day) {
		return true
	}

	return false
}

// SetDay gets a reference to the given string and assigns it to the Day field.
// Deprecated
func (o *InvoiceListing) SetDay(v string) {
	o.Day = &v
}

// GetMonth returns the Month field value if set, zero value otherwise.
// Deprecated
func (o *InvoiceListing) GetMonth() string {
	if o == nil || IsNil(o.Month) {
		var ret string
		return ret
	}
	return *o.Month
}

// GetMonthOk returns a tuple with the Month field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *InvoiceListing) GetMonthOk() (*string, bool) {
	if o == nil || IsNil(o.Month) {
		return nil, false
	}
	return o.Month, true
}

// HasMonth returns a boolean if a field has been set.
func (o *InvoiceListing) HasMonth() bool {
	if o != nil && !IsNil(o.Month) {
		return true
	}

	return false
}

// SetMonth gets a reference to the given string and assigns it to the Month field.
// Deprecated
func (o *InvoiceListing) SetMonth(v string) {
	o.Month = &v
}

// GetYear returns the Year field value if set, zero value otherwise.
// Deprecated
func (o *InvoiceListing) GetYear() int32 {
	if o == nil || IsNil(o.Year) {
		var ret int32
		return ret
	}
	return *o.Year
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *InvoiceListing) GetYearOk() (*int32, bool) {
	if o == nil || IsNil(o.Year) {
		return nil, false
	}
	return o.Year, true
}

// HasYear returns a boolean if a field has been set.
func (o *InvoiceListing) HasYear() bool {
	if o != nil && !IsNil(o.Year) {
		return true
	}

	return false
}

// SetYear gets a reference to the given int32 and assigns it to the Year field.
// Deprecated
func (o *InvoiceListing) SetYear(v int32) {
	o.Year = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *InvoiceListing) GetCreatedAt() int32 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetCreatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *InvoiceListing) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *InvoiceListing) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *InvoiceListing) GetUpdatedAt() int32 {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *InvoiceListing) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *InvoiceListing) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *InvoiceListing) GetUpdatedBy() int32 {
	if o == nil || IsNil(o.UpdatedBy) {
		var ret int32
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetUpdatedByOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdatedBy) {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *InvoiceListing) HasUpdatedBy() bool {
	if o != nil && !IsNil(o.UpdatedBy) {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given int32 and assigns it to the UpdatedBy field.
func (o *InvoiceListing) SetUpdatedBy(v int32) {
	o.UpdatedBy = &v
}

// GetIsEvmApproved returns the IsEvmApproved field value if set, zero value otherwise.
func (o *InvoiceListing) GetIsEvmApproved() bool {
	if o == nil || IsNil(o.IsEvmApproved) {
		var ret bool
		return ret
	}
	return *o.IsEvmApproved
}

// GetIsEvmApprovedOk returns a tuple with the IsEvmApproved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetIsEvmApprovedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEvmApproved) {
		return nil, false
	}
	return o.IsEvmApproved, true
}

// HasIsEvmApproved returns a boolean if a field has been set.
func (o *InvoiceListing) HasIsEvmApproved() bool {
	if o != nil && !IsNil(o.IsEvmApproved) {
		return true
	}

	return false
}

// SetIsEvmApproved gets a reference to the given bool and assigns it to the IsEvmApproved field.
func (o *InvoiceListing) SetIsEvmApproved(v bool) {
	o.IsEvmApproved = &v
}

// GetFeeBilled returns the FeeBilled field value if set, zero value otherwise.
func (o *InvoiceListing) GetFeeBilled() bool {
	if o == nil || IsNil(o.FeeBilled) {
		var ret bool
		return ret
	}
	return *o.FeeBilled
}

// GetFeeBilledOk returns a tuple with the FeeBilled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetFeeBilledOk() (*bool, bool) {
	if o == nil || IsNil(o.FeeBilled) {
		return nil, false
	}
	return o.FeeBilled, true
}

// HasFeeBilled returns a boolean if a field has been set.
func (o *InvoiceListing) HasFeeBilled() bool {
	if o != nil && !IsNil(o.FeeBilled) {
		return true
	}

	return false
}

// SetFeeBilled gets a reference to the given bool and assigns it to the FeeBilled field.
func (o *InvoiceListing) SetFeeBilled(v bool) {
	o.FeeBilled = &v
}

// GetCryptoScheduledPayout returns the CryptoScheduledPayout field value if set, zero value otherwise.
func (o *InvoiceListing) GetCryptoScheduledPayout() InvoiceListingCryptoScheduledPayout {
	if o == nil || IsNil(o.CryptoScheduledPayout) {
		var ret InvoiceListingCryptoScheduledPayout
		return ret
	}
	return *o.CryptoScheduledPayout
}

// GetCryptoScheduledPayoutOk returns a tuple with the CryptoScheduledPayout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetCryptoScheduledPayoutOk() (*InvoiceListingCryptoScheduledPayout, bool) {
	if o == nil || IsNil(o.CryptoScheduledPayout) {
		return nil, false
	}
	return o.CryptoScheduledPayout, true
}

// HasCryptoScheduledPayout returns a boolean if a field has been set.
func (o *InvoiceListing) HasCryptoScheduledPayout() bool {
	if o != nil && !IsNil(o.CryptoScheduledPayout) {
		return true
	}

	return false
}

// SetCryptoScheduledPayout gets a reference to the given InvoiceListingCryptoScheduledPayout and assigns it to the CryptoScheduledPayout field.
func (o *InvoiceListing) SetCryptoScheduledPayout(v InvoiceListingCryptoScheduledPayout) {
	o.CryptoScheduledPayout = &v
}

// GetShopPaypalCreditCard returns the ShopPaypalCreditCard field value if set, zero value otherwise.
func (o *InvoiceListing) GetShopPaypalCreditCard() bool {
	if o == nil || IsNil(o.ShopPaypalCreditCard) {
		var ret bool
		return ret
	}
	return *o.ShopPaypalCreditCard
}

// GetShopPaypalCreditCardOk returns a tuple with the ShopPaypalCreditCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetShopPaypalCreditCardOk() (*bool, bool) {
	if o == nil || IsNil(o.ShopPaypalCreditCard) {
		return nil, false
	}
	return o.ShopPaypalCreditCard, true
}

// HasShopPaypalCreditCard returns a boolean if a field has been set.
func (o *InvoiceListing) HasShopPaypalCreditCard() bool {
	if o != nil && !IsNil(o.ShopPaypalCreditCard) {
		return true
	}

	return false
}

// SetShopPaypalCreditCard gets a reference to the given bool and assigns it to the ShopPaypalCreditCard field.
func (o *InvoiceListing) SetShopPaypalCreditCard(v bool) {
	o.ShopPaypalCreditCard = &v
}

// GetShopForcePaypalEmailDelivery returns the ShopForcePaypalEmailDelivery field value if set, zero value otherwise.
func (o *InvoiceListing) GetShopForcePaypalEmailDelivery() bool {
	if o == nil || IsNil(o.ShopForcePaypalEmailDelivery) {
		var ret bool
		return ret
	}
	return *o.ShopForcePaypalEmailDelivery
}

// GetShopForcePaypalEmailDeliveryOk returns a tuple with the ShopForcePaypalEmailDelivery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListing) GetShopForcePaypalEmailDeliveryOk() (*bool, bool) {
	if o == nil || IsNil(o.ShopForcePaypalEmailDelivery) {
		return nil, false
	}
	return o.ShopForcePaypalEmailDelivery, true
}

// HasShopForcePaypalEmailDelivery returns a boolean if a field has been set.
func (o *InvoiceListing) HasShopForcePaypalEmailDelivery() bool {
	if o != nil && !IsNil(o.ShopForcePaypalEmailDelivery) {
		return true
	}

	return false
}

// SetShopForcePaypalEmailDelivery gets a reference to the given bool and assigns it to the ShopForcePaypalEmailDelivery field.
func (o *InvoiceListing) SetShopForcePaypalEmailDelivery(v bool) {
	o.ShopForcePaypalEmailDelivery = &v
}

func (o InvoiceListing) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceListing) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Uniqid) {
		toSerialize["uniqid"] = o.Uniqid
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.TotalDisplay) {
		toSerialize["total_display"] = o.TotalDisplay
	}
	if !IsNil(o.ExchangeRate) {
		toSerialize["exchange_rate"] = o.ExchangeRate
	}
	if !IsNil(o.CryptoExchangeRate) {
		toSerialize["crypto_exchange_rate"] = o.CryptoExchangeRate
	}
	if !IsNil(o.ProductVariants) {
		toSerialize["product_variants"] = o.ProductVariants
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.ShopId) {
		toSerialize["shop_id"] = o.ShopId
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.CustomerEmail) {
		toSerialize["customer_email"] = o.CustomerEmail
	}
	if !IsNil(o.PaypalEmailDelivery) {
		toSerialize["paypal_email_delivery"] = o.PaypalEmailDelivery
	}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.ProductTitle) {
		toSerialize["product_title"] = o.ProductTitle
	}
	if !IsNil(o.ProductType) {
		toSerialize["product_type"] = o.ProductType
	}
	if !IsNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	if !IsNil(o.PaypalEmail) {
		toSerialize["paypal_email"] = o.PaypalEmail
	}
	if !IsNil(o.PaypalOrderId) {
		toSerialize["paypal_order_id"] = o.PaypalOrderId
	}
	if !IsNil(o.PaypalFee) {
		toSerialize["paypal_fee"] = o.PaypalFee
	}
	if !IsNil(o.PaypalPayerEmail) {
		toSerialize["paypal_payer_email"] = o.PaypalPayerEmail
	}
	if !IsNil(o.SkrillEmail) {
		toSerialize["skrill_email"] = o.SkrillEmail
	}
	if !IsNil(o.SkrillSid) {
		toSerialize["skrill_sid"] = o.SkrillSid
	}
	if !IsNil(o.SkrillLink) {
		toSerialize["skrill_link"] = o.SkrillLink
	}
	if !IsNil(o.PerfectmoneyId) {
		toSerialize["perfectmoney_id"] = o.PerfectmoneyId
	}
	if !IsNil(o.CryptoAddress) {
		toSerialize["crypto_address"] = o.CryptoAddress
	}
	if !IsNil(o.CryptoAmount) {
		toSerialize["crypto_amount"] = o.CryptoAmount
	}
	if !IsNil(o.CryptoReceived) {
		toSerialize["crypto_received"] = o.CryptoReceived
	}
	if !IsNil(o.CryptoUri) {
		toSerialize["crypto_uri"] = o.CryptoUri
	}
	if !IsNil(o.CryptoConfirmationsNeeded) {
		toSerialize["crypto_confirmations_needed"] = o.CryptoConfirmationsNeeded
	}
	if !IsNil(o.CashappCashtag) {
		toSerialize["cashapp_cashtag"] = o.CashappCashtag
	}
	if !IsNil(o.CashappNote) {
		toSerialize["cashapp_note"] = o.CashappNote
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.IsVpnOrProxy) {
		toSerialize["is_vpn_or_proxy"] = o.IsVpnOrProxy
	}
	if !IsNil(o.UserAgent) {
		toSerialize["user_agent"] = o.UserAgent
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.CouponId) {
		toSerialize["coupon_id"] = o.CouponId
	}
	if !IsNil(o.CouponCode) {
		toSerialize["coupon_code"] = o.CouponCode
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if !IsNil(o.DeveloperInvoice) {
		toSerialize["developer_invoice"] = o.DeveloperInvoice
	}
	if !IsNil(o.DeveloperTitle) {
		toSerialize["developer_title"] = o.DeveloperTitle
	}
	if !IsNil(o.DeveloperWebhook) {
		toSerialize["developer_webhook"] = o.DeveloperWebhook
	}
	if !IsNil(o.DeveloperReturnUrl) {
		toSerialize["developer_return_url"] = o.DeveloperReturnUrl
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusDetails) {
		toSerialize["status_details"] = o.StatusDetails
	}
	if !IsNil(o.VoidDetails) {
		toSerialize["void_details"] = o.VoidDetails
	}
	if !IsNil(o.Discount) {
		toSerialize["discount"] = o.Discount
	}
	if !IsNil(o.FeePercentage) {
		toSerialize["fee_percentage"] = o.FeePercentage
	}
	if !IsNil(o.FeeBreakdown) {
		toSerialize["fee_breakdown"] = o.FeeBreakdown
	}
	if !IsNil(o.DayValue) {
		toSerialize["day_value"] = o.DayValue
	}
	if !IsNil(o.Day) {
		toSerialize["day"] = o.Day
	}
	if !IsNil(o.Month) {
		toSerialize["month"] = o.Month
	}
	if !IsNil(o.Year) {
		toSerialize["year"] = o.Year
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.UpdatedBy) {
		toSerialize["updated_by"] = o.UpdatedBy
	}
	if !IsNil(o.IsEvmApproved) {
		toSerialize["is_evm_approved"] = o.IsEvmApproved
	}
	if !IsNil(o.FeeBilled) {
		toSerialize["fee_billed"] = o.FeeBilled
	}
	if !IsNil(o.CryptoScheduledPayout) {
		toSerialize["crypto_scheduled_payout"] = o.CryptoScheduledPayout
	}
	if !IsNil(o.ShopPaypalCreditCard) {
		toSerialize["shop_paypal_credit_card"] = o.ShopPaypalCreditCard
	}
	if !IsNil(o.ShopForcePaypalEmailDelivery) {
		toSerialize["shop_force_paypal_email_delivery"] = o.ShopForcePaypalEmailDelivery
	}
	return toSerialize, nil
}

type NullableInvoiceListing struct {
	value *InvoiceListing
	isSet bool
}

func (v NullableInvoiceListing) Get() *InvoiceListing {
	return v.value
}

func (v *NullableInvoiceListing) Set(val *InvoiceListing) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceListing) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceListing) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceListing(val *InvoiceListing) *NullableInvoiceListing {
	return &NullableInvoiceListing{value: val, isSet: true}
}

func (v NullableInvoiceListing) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceListing) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


