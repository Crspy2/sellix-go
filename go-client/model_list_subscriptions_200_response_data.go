/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListSubscriptions200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListSubscriptions200ResponseData{}

// ListSubscriptions200ResponseData struct for ListSubscriptions200ResponseData
type ListSubscriptions200ResponseData struct {
	Subscriptions []SubscriptionListing `json:"subscriptions,omitempty"`
}

// NewListSubscriptions200ResponseData instantiates a new ListSubscriptions200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListSubscriptions200ResponseData() *ListSubscriptions200ResponseData {
	this := ListSubscriptions200ResponseData{}
	return &this
}

// NewListSubscriptions200ResponseDataWithDefaults instantiates a new ListSubscriptions200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListSubscriptions200ResponseDataWithDefaults() *ListSubscriptions200ResponseData {
	this := ListSubscriptions200ResponseData{}
	return &this
}

// GetSubscriptions returns the Subscriptions field value if set, zero value otherwise.
func (o *ListSubscriptions200ResponseData) GetSubscriptions() []SubscriptionListing {
	if o == nil || IsNil(o.Subscriptions) {
		var ret []SubscriptionListing
		return ret
	}
	return o.Subscriptions
}

// GetSubscriptionsOk returns a tuple with the Subscriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListSubscriptions200ResponseData) GetSubscriptionsOk() ([]SubscriptionListing, bool) {
	if o == nil || IsNil(o.Subscriptions) {
		return nil, false
	}
	return o.Subscriptions, true
}

// HasSubscriptions returns a boolean if a field has been set.
func (o *ListSubscriptions200ResponseData) HasSubscriptions() bool {
	if o != nil && !IsNil(o.Subscriptions) {
		return true
	}

	return false
}

// SetSubscriptions gets a reference to the given []SubscriptionListing and assigns it to the Subscriptions field.
func (o *ListSubscriptions200ResponseData) SetSubscriptions(v []SubscriptionListing) {
	o.Subscriptions = v
}

func (o ListSubscriptions200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListSubscriptions200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Subscriptions) {
		toSerialize["subscriptions"] = o.Subscriptions
	}
	return toSerialize, nil
}

type NullableListSubscriptions200ResponseData struct {
	value *ListSubscriptions200ResponseData
	isSet bool
}

func (v NullableListSubscriptions200ResponseData) Get() *ListSubscriptions200ResponseData {
	return v.value
}

func (v *NullableListSubscriptions200ResponseData) Set(val *ListSubscriptions200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableListSubscriptions200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableListSubscriptions200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListSubscriptions200ResponseData(val *ListSubscriptions200ResponseData) *NullableListSubscriptions200ResponseData {
	return &NullableListSubscriptions200ResponseData{value: val, isSet: true}
}

func (v NullableListSubscriptions200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListSubscriptions200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


