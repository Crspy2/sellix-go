/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FeedbackListing type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FeedbackListing{}

// FeedbackListing struct for FeedbackListing
type FeedbackListing struct {
	// ID of the resource
	Id *int32 `json:"id,omitempty"`
	// Unique ID of the resource, used as reference across the API.
	Uniqid *string `json:"uniqid,omitempty"`
	// Unique ID of the invoice for which this feedback has been posted.
	InvoiceId *string `json:"invoice_id,omitempty"`
	// Unique ID of the product for which this feedback has been posted.
	ProductId *string `json:"product_id,omitempty"`
	// Title of the product for which this feedback has been posted.
	ProductTitle *string `json:"product_title,omitempty"`
	// The shop ID to which this feedback belongs.
	ShopId *int32 `json:"shop_id,omitempty"`
	// Message left by the customer.
	Message *string `json:"message,omitempty"`
	// Reply left by the merchant.
	Reply *string `json:"reply,omitempty"`
	// Score left by the customer, if 0 no score has been left.
	Score *int32 `json:"score,omitempty"`
	// If true, an appeal has been created for this feedback.
	Appealed *bool `json:"appealed,omitempty"`
	// The outcome of the appeal.
	AppealOutcome *string `json:"appeal_outcome,omitempty"`
	// Timestamp for the creation of the feedback.
	CreatedAt *int32 `json:"created_at,omitempty"`
	// Date, available if the product has been edited.
	UpdatedAt *int32 `json:"updated_at,omitempty"`
	// If true, this feedback has been blocked after an appeal.
	Blocked *bool `json:"blocked,omitempty"`
}

// NewFeedbackListing instantiates a new FeedbackListing object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeedbackListing() *FeedbackListing {
	this := FeedbackListing{}
	return &this
}

// NewFeedbackListingWithDefaults instantiates a new FeedbackListing object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeedbackListingWithDefaults() *FeedbackListing {
	this := FeedbackListing{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FeedbackListing) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackListing) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FeedbackListing) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *FeedbackListing) SetId(v int32) {
	o.Id = &v
}

// GetUniqid returns the Uniqid field value if set, zero value otherwise.
func (o *FeedbackListing) GetUniqid() string {
	if o == nil || IsNil(o.Uniqid) {
		var ret string
		return ret
	}
	return *o.Uniqid
}

// GetUniqidOk returns a tuple with the Uniqid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackListing) GetUniqidOk() (*string, bool) {
	if o == nil || IsNil(o.Uniqid) {
		return nil, false
	}
	return o.Uniqid, true
}

// HasUniqid returns a boolean if a field has been set.
func (o *FeedbackListing) HasUniqid() bool {
	if o != nil && !IsNil(o.Uniqid) {
		return true
	}

	return false
}

// SetUniqid gets a reference to the given string and assigns it to the Uniqid field.
func (o *FeedbackListing) SetUniqid(v string) {
	o.Uniqid = &v
}

// GetInvoiceId returns the InvoiceId field value if set, zero value otherwise.
func (o *FeedbackListing) GetInvoiceId() string {
	if o == nil || IsNil(o.InvoiceId) {
		var ret string
		return ret
	}
	return *o.InvoiceId
}

// GetInvoiceIdOk returns a tuple with the InvoiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackListing) GetInvoiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceId) {
		return nil, false
	}
	return o.InvoiceId, true
}

// HasInvoiceId returns a boolean if a field has been set.
func (o *FeedbackListing) HasInvoiceId() bool {
	if o != nil && !IsNil(o.InvoiceId) {
		return true
	}

	return false
}

// SetInvoiceId gets a reference to the given string and assigns it to the InvoiceId field.
func (o *FeedbackListing) SetInvoiceId(v string) {
	o.InvoiceId = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *FeedbackListing) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackListing) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *FeedbackListing) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *FeedbackListing) SetProductId(v string) {
	o.ProductId = &v
}

// GetProductTitle returns the ProductTitle field value if set, zero value otherwise.
func (o *FeedbackListing) GetProductTitle() string {
	if o == nil || IsNil(o.ProductTitle) {
		var ret string
		return ret
	}
	return *o.ProductTitle
}

// GetProductTitleOk returns a tuple with the ProductTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackListing) GetProductTitleOk() (*string, bool) {
	if o == nil || IsNil(o.ProductTitle) {
		return nil, false
	}
	return o.ProductTitle, true
}

// HasProductTitle returns a boolean if a field has been set.
func (o *FeedbackListing) HasProductTitle() bool {
	if o != nil && !IsNil(o.ProductTitle) {
		return true
	}

	return false
}

// SetProductTitle gets a reference to the given string and assigns it to the ProductTitle field.
func (o *FeedbackListing) SetProductTitle(v string) {
	o.ProductTitle = &v
}

// GetShopId returns the ShopId field value if set, zero value otherwise.
func (o *FeedbackListing) GetShopId() int32 {
	if o == nil || IsNil(o.ShopId) {
		var ret int32
		return ret
	}
	return *o.ShopId
}

// GetShopIdOk returns a tuple with the ShopId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackListing) GetShopIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ShopId) {
		return nil, false
	}
	return o.ShopId, true
}

// HasShopId returns a boolean if a field has been set.
func (o *FeedbackListing) HasShopId() bool {
	if o != nil && !IsNil(o.ShopId) {
		return true
	}

	return false
}

// SetShopId gets a reference to the given int32 and assigns it to the ShopId field.
func (o *FeedbackListing) SetShopId(v int32) {
	o.ShopId = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *FeedbackListing) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackListing) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *FeedbackListing) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *FeedbackListing) SetMessage(v string) {
	o.Message = &v
}

// GetReply returns the Reply field value if set, zero value otherwise.
func (o *FeedbackListing) GetReply() string {
	if o == nil || IsNil(o.Reply) {
		var ret string
		return ret
	}
	return *o.Reply
}

// GetReplyOk returns a tuple with the Reply field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackListing) GetReplyOk() (*string, bool) {
	if o == nil || IsNil(o.Reply) {
		return nil, false
	}
	return o.Reply, true
}

// HasReply returns a boolean if a field has been set.
func (o *FeedbackListing) HasReply() bool {
	if o != nil && !IsNil(o.Reply) {
		return true
	}

	return false
}

// SetReply gets a reference to the given string and assigns it to the Reply field.
func (o *FeedbackListing) SetReply(v string) {
	o.Reply = &v
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *FeedbackListing) GetScore() int32 {
	if o == nil || IsNil(o.Score) {
		var ret int32
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackListing) GetScoreOk() (*int32, bool) {
	if o == nil || IsNil(o.Score) {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *FeedbackListing) HasScore() bool {
	if o != nil && !IsNil(o.Score) {
		return true
	}

	return false
}

// SetScore gets a reference to the given int32 and assigns it to the Score field.
func (o *FeedbackListing) SetScore(v int32) {
	o.Score = &v
}

// GetAppealed returns the Appealed field value if set, zero value otherwise.
func (o *FeedbackListing) GetAppealed() bool {
	if o == nil || IsNil(o.Appealed) {
		var ret bool
		return ret
	}
	return *o.Appealed
}

// GetAppealedOk returns a tuple with the Appealed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackListing) GetAppealedOk() (*bool, bool) {
	if o == nil || IsNil(o.Appealed) {
		return nil, false
	}
	return o.Appealed, true
}

// HasAppealed returns a boolean if a field has been set.
func (o *FeedbackListing) HasAppealed() bool {
	if o != nil && !IsNil(o.Appealed) {
		return true
	}

	return false
}

// SetAppealed gets a reference to the given bool and assigns it to the Appealed field.
func (o *FeedbackListing) SetAppealed(v bool) {
	o.Appealed = &v
}

// GetAppealOutcome returns the AppealOutcome field value if set, zero value otherwise.
func (o *FeedbackListing) GetAppealOutcome() string {
	if o == nil || IsNil(o.AppealOutcome) {
		var ret string
		return ret
	}
	return *o.AppealOutcome
}

// GetAppealOutcomeOk returns a tuple with the AppealOutcome field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackListing) GetAppealOutcomeOk() (*string, bool) {
	if o == nil || IsNil(o.AppealOutcome) {
		return nil, false
	}
	return o.AppealOutcome, true
}

// HasAppealOutcome returns a boolean if a field has been set.
func (o *FeedbackListing) HasAppealOutcome() bool {
	if o != nil && !IsNil(o.AppealOutcome) {
		return true
	}

	return false
}

// SetAppealOutcome gets a reference to the given string and assigns it to the AppealOutcome field.
func (o *FeedbackListing) SetAppealOutcome(v string) {
	o.AppealOutcome = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *FeedbackListing) GetCreatedAt() int32 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackListing) GetCreatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *FeedbackListing) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *FeedbackListing) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *FeedbackListing) GetUpdatedAt() int32 {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackListing) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *FeedbackListing) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *FeedbackListing) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

// GetBlocked returns the Blocked field value if set, zero value otherwise.
func (o *FeedbackListing) GetBlocked() bool {
	if o == nil || IsNil(o.Blocked) {
		var ret bool
		return ret
	}
	return *o.Blocked
}

// GetBlockedOk returns a tuple with the Blocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackListing) GetBlockedOk() (*bool, bool) {
	if o == nil || IsNil(o.Blocked) {
		return nil, false
	}
	return o.Blocked, true
}

// HasBlocked returns a boolean if a field has been set.
func (o *FeedbackListing) HasBlocked() bool {
	if o != nil && !IsNil(o.Blocked) {
		return true
	}

	return false
}

// SetBlocked gets a reference to the given bool and assigns it to the Blocked field.
func (o *FeedbackListing) SetBlocked(v bool) {
	o.Blocked = &v
}

func (o FeedbackListing) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FeedbackListing) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Uniqid) {
		toSerialize["uniqid"] = o.Uniqid
	}
	if !IsNil(o.InvoiceId) {
		toSerialize["invoice_id"] = o.InvoiceId
	}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.ProductTitle) {
		toSerialize["product_title"] = o.ProductTitle
	}
	if !IsNil(o.ShopId) {
		toSerialize["shop_id"] = o.ShopId
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Reply) {
		toSerialize["reply"] = o.Reply
	}
	if !IsNil(o.Score) {
		toSerialize["score"] = o.Score
	}
	if !IsNil(o.Appealed) {
		toSerialize["appealed"] = o.Appealed
	}
	if !IsNil(o.AppealOutcome) {
		toSerialize["appeal_outcome"] = o.AppealOutcome
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Blocked) {
		toSerialize["blocked"] = o.Blocked
	}
	return toSerialize, nil
}

type NullableFeedbackListing struct {
	value *FeedbackListing
	isSet bool
}

func (v NullableFeedbackListing) Get() *FeedbackListing {
	return v.value
}

func (v *NullableFeedbackListing) Set(val *FeedbackListing) {
	v.value = val
	v.isSet = true
}

func (v NullableFeedbackListing) IsSet() bool {
	return v.isSet
}

func (v *NullableFeedbackListing) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeedbackListing(val *FeedbackListing) *NullableFeedbackListing {
	return &NullableFeedbackListing{value: val, isSet: true}
}

func (v NullableFeedbackListing) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeedbackListing) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


