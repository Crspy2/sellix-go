/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AmlWalletContributionsDestinationInnerContributionValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AmlWalletContributionsDestinationInnerContributionValue{}

// AmlWalletContributionsDestinationInnerContributionValue struct for AmlWalletContributionsDestinationInnerContributionValue
type AmlWalletContributionsDestinationInnerContributionValue struct {
	// Contribution value in USD.
	Usd *float64 `json:"usd,omitempty"`
}

// NewAmlWalletContributionsDestinationInnerContributionValue instantiates a new AmlWalletContributionsDestinationInnerContributionValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmlWalletContributionsDestinationInnerContributionValue() *AmlWalletContributionsDestinationInnerContributionValue {
	this := AmlWalletContributionsDestinationInnerContributionValue{}
	return &this
}

// NewAmlWalletContributionsDestinationInnerContributionValueWithDefaults instantiates a new AmlWalletContributionsDestinationInnerContributionValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmlWalletContributionsDestinationInnerContributionValueWithDefaults() *AmlWalletContributionsDestinationInnerContributionValue {
	this := AmlWalletContributionsDestinationInnerContributionValue{}
	return &this
}

// GetUsd returns the Usd field value if set, zero value otherwise.
func (o *AmlWalletContributionsDestinationInnerContributionValue) GetUsd() float64 {
	if o == nil || IsNil(o.Usd) {
		var ret float64
		return ret
	}
	return *o.Usd
}

// GetUsdOk returns a tuple with the Usd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmlWalletContributionsDestinationInnerContributionValue) GetUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.Usd) {
		return nil, false
	}
	return o.Usd, true
}

// HasUsd returns a boolean if a field has been set.
func (o *AmlWalletContributionsDestinationInnerContributionValue) HasUsd() bool {
	if o != nil && !IsNil(o.Usd) {
		return true
	}

	return false
}

// SetUsd gets a reference to the given float64 and assigns it to the Usd field.
func (o *AmlWalletContributionsDestinationInnerContributionValue) SetUsd(v float64) {
	o.Usd = &v
}

func (o AmlWalletContributionsDestinationInnerContributionValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AmlWalletContributionsDestinationInnerContributionValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Usd) {
		toSerialize["usd"] = o.Usd
	}
	return toSerialize, nil
}

type NullableAmlWalletContributionsDestinationInnerContributionValue struct {
	value *AmlWalletContributionsDestinationInnerContributionValue
	isSet bool
}

func (v NullableAmlWalletContributionsDestinationInnerContributionValue) Get() *AmlWalletContributionsDestinationInnerContributionValue {
	return v.value
}

func (v *NullableAmlWalletContributionsDestinationInnerContributionValue) Set(val *AmlWalletContributionsDestinationInnerContributionValue) {
	v.value = val
	v.isSet = true
}

func (v NullableAmlWalletContributionsDestinationInnerContributionValue) IsSet() bool {
	return v.isSet
}

func (v *NullableAmlWalletContributionsDestinationInnerContributionValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmlWalletContributionsDestinationInnerContributionValue(val *AmlWalletContributionsDestinationInnerContributionValue) *NullableAmlWalletContributionsDestinationInnerContributionValue {
	return &NullableAmlWalletContributionsDestinationInnerContributionValue{value: val, isSet: true}
}

func (v NullableAmlWalletContributionsDestinationInnerContributionValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmlWalletContributionsDestinationInnerContributionValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


