/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the AmlWalletEvaluationDetailInnerSourceInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AmlWalletEvaluationDetailInnerSourceInner{}

// AmlWalletEvaluationDetailInnerSourceInner struct for AmlWalletEvaluationDetailInnerSourceInner
type AmlWalletEvaluationDetailInnerSourceInner struct {
	// Rule ID.
	RuleId *string `json:"rule_id,omitempty"`
	// Rule name.
	RuleName *string `json:"rule_name,omitempty"`
	// Risk score.
	RiskScore *float64 `json:"risk_score,omitempty"`
	MatchedElements []AmlWalletEvaluationDetailInnerSourceInnerMatchedElementsInner `json:"matched_elements,omitempty"`
}

// NewAmlWalletEvaluationDetailInnerSourceInner instantiates a new AmlWalletEvaluationDetailInnerSourceInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmlWalletEvaluationDetailInnerSourceInner() *AmlWalletEvaluationDetailInnerSourceInner {
	this := AmlWalletEvaluationDetailInnerSourceInner{}
	return &this
}

// NewAmlWalletEvaluationDetailInnerSourceInnerWithDefaults instantiates a new AmlWalletEvaluationDetailInnerSourceInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmlWalletEvaluationDetailInnerSourceInnerWithDefaults() *AmlWalletEvaluationDetailInnerSourceInner {
	this := AmlWalletEvaluationDetailInnerSourceInner{}
	return &this
}

// GetRuleId returns the RuleId field value if set, zero value otherwise.
func (o *AmlWalletEvaluationDetailInnerSourceInner) GetRuleId() string {
	if o == nil || IsNil(o.RuleId) {
		var ret string
		return ret
	}
	return *o.RuleId
}

// GetRuleIdOk returns a tuple with the RuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmlWalletEvaluationDetailInnerSourceInner) GetRuleIdOk() (*string, bool) {
	if o == nil || IsNil(o.RuleId) {
		return nil, false
	}
	return o.RuleId, true
}

// HasRuleId returns a boolean if a field has been set.
func (o *AmlWalletEvaluationDetailInnerSourceInner) HasRuleId() bool {
	if o != nil && !IsNil(o.RuleId) {
		return true
	}

	return false
}

// SetRuleId gets a reference to the given string and assigns it to the RuleId field.
func (o *AmlWalletEvaluationDetailInnerSourceInner) SetRuleId(v string) {
	o.RuleId = &v
}

// GetRuleName returns the RuleName field value if set, zero value otherwise.
func (o *AmlWalletEvaluationDetailInnerSourceInner) GetRuleName() string {
	if o == nil || IsNil(o.RuleName) {
		var ret string
		return ret
	}
	return *o.RuleName
}

// GetRuleNameOk returns a tuple with the RuleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmlWalletEvaluationDetailInnerSourceInner) GetRuleNameOk() (*string, bool) {
	if o == nil || IsNil(o.RuleName) {
		return nil, false
	}
	return o.RuleName, true
}

// HasRuleName returns a boolean if a field has been set.
func (o *AmlWalletEvaluationDetailInnerSourceInner) HasRuleName() bool {
	if o != nil && !IsNil(o.RuleName) {
		return true
	}

	return false
}

// SetRuleName gets a reference to the given string and assigns it to the RuleName field.
func (o *AmlWalletEvaluationDetailInnerSourceInner) SetRuleName(v string) {
	o.RuleName = &v
}

// GetRiskScore returns the RiskScore field value if set, zero value otherwise.
func (o *AmlWalletEvaluationDetailInnerSourceInner) GetRiskScore() float64 {
	if o == nil || IsNil(o.RiskScore) {
		var ret float64
		return ret
	}
	return *o.RiskScore
}

// GetRiskScoreOk returns a tuple with the RiskScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmlWalletEvaluationDetailInnerSourceInner) GetRiskScoreOk() (*float64, bool) {
	if o == nil || IsNil(o.RiskScore) {
		return nil, false
	}
	return o.RiskScore, true
}

// HasRiskScore returns a boolean if a field has been set.
func (o *AmlWalletEvaluationDetailInnerSourceInner) HasRiskScore() bool {
	if o != nil && !IsNil(o.RiskScore) {
		return true
	}

	return false
}

// SetRiskScore gets a reference to the given float64 and assigns it to the RiskScore field.
func (o *AmlWalletEvaluationDetailInnerSourceInner) SetRiskScore(v float64) {
	o.RiskScore = &v
}

// GetMatchedElements returns the MatchedElements field value if set, zero value otherwise.
func (o *AmlWalletEvaluationDetailInnerSourceInner) GetMatchedElements() []AmlWalletEvaluationDetailInnerSourceInnerMatchedElementsInner {
	if o == nil || IsNil(o.MatchedElements) {
		var ret []AmlWalletEvaluationDetailInnerSourceInnerMatchedElementsInner
		return ret
	}
	return o.MatchedElements
}

// GetMatchedElementsOk returns a tuple with the MatchedElements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmlWalletEvaluationDetailInnerSourceInner) GetMatchedElementsOk() ([]AmlWalletEvaluationDetailInnerSourceInnerMatchedElementsInner, bool) {
	if o == nil || IsNil(o.MatchedElements) {
		return nil, false
	}
	return o.MatchedElements, true
}

// HasMatchedElements returns a boolean if a field has been set.
func (o *AmlWalletEvaluationDetailInnerSourceInner) HasMatchedElements() bool {
	if o != nil && !IsNil(o.MatchedElements) {
		return true
	}

	return false
}

// SetMatchedElements gets a reference to the given []AmlWalletEvaluationDetailInnerSourceInnerMatchedElementsInner and assigns it to the MatchedElements field.
func (o *AmlWalletEvaluationDetailInnerSourceInner) SetMatchedElements(v []AmlWalletEvaluationDetailInnerSourceInnerMatchedElementsInner) {
	o.MatchedElements = v
}

func (o AmlWalletEvaluationDetailInnerSourceInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AmlWalletEvaluationDetailInnerSourceInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RuleId) {
		toSerialize["rule_id"] = o.RuleId
	}
	if !IsNil(o.RuleName) {
		toSerialize["rule_name"] = o.RuleName
	}
	if !IsNil(o.RiskScore) {
		toSerialize["risk_score"] = o.RiskScore
	}
	if !IsNil(o.MatchedElements) {
		toSerialize["matched_elements"] = o.MatchedElements
	}
	return toSerialize, nil
}

type NullableAmlWalletEvaluationDetailInnerSourceInner struct {
	value *AmlWalletEvaluationDetailInnerSourceInner
	isSet bool
}

func (v NullableAmlWalletEvaluationDetailInnerSourceInner) Get() *AmlWalletEvaluationDetailInnerSourceInner {
	return v.value
}

func (v *NullableAmlWalletEvaluationDetailInnerSourceInner) Set(val *AmlWalletEvaluationDetailInnerSourceInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAmlWalletEvaluationDetailInnerSourceInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAmlWalletEvaluationDetailInnerSourceInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmlWalletEvaluationDetailInnerSourceInner(val *AmlWalletEvaluationDetailInnerSourceInner) *NullableAmlWalletEvaluationDetailInnerSourceInner {
	return &NullableAmlWalletEvaluationDetailInnerSourceInner{value: val, isSet: true}
}

func (v NullableAmlWalletEvaluationDetailInnerSourceInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmlWalletEvaluationDetailInnerSourceInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


