/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the AmlWalletContributions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AmlWalletContributions{}

// AmlWalletContributions struct for AmlWalletContributions
type AmlWalletContributions struct {
	Source []AmlWalletContributionsSourceInner `json:"source,omitempty"`
	Destination []AmlWalletContributionsDestinationInner `json:"destination,omitempty"`
}

// NewAmlWalletContributions instantiates a new AmlWalletContributions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmlWalletContributions() *AmlWalletContributions {
	this := AmlWalletContributions{}
	return &this
}

// NewAmlWalletContributionsWithDefaults instantiates a new AmlWalletContributions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmlWalletContributionsWithDefaults() *AmlWalletContributions {
	this := AmlWalletContributions{}
	return &this
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *AmlWalletContributions) GetSource() []AmlWalletContributionsSourceInner {
	if o == nil || IsNil(o.Source) {
		var ret []AmlWalletContributionsSourceInner
		return ret
	}
	return o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmlWalletContributions) GetSourceOk() ([]AmlWalletContributionsSourceInner, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *AmlWalletContributions) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given []AmlWalletContributionsSourceInner and assigns it to the Source field.
func (o *AmlWalletContributions) SetSource(v []AmlWalletContributionsSourceInner) {
	o.Source = v
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *AmlWalletContributions) GetDestination() []AmlWalletContributionsDestinationInner {
	if o == nil || IsNil(o.Destination) {
		var ret []AmlWalletContributionsDestinationInner
		return ret
	}
	return o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmlWalletContributions) GetDestinationOk() ([]AmlWalletContributionsDestinationInner, bool) {
	if o == nil || IsNil(o.Destination) {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *AmlWalletContributions) HasDestination() bool {
	if o != nil && !IsNil(o.Destination) {
		return true
	}

	return false
}

// SetDestination gets a reference to the given []AmlWalletContributionsDestinationInner and assigns it to the Destination field.
func (o *AmlWalletContributions) SetDestination(v []AmlWalletContributionsDestinationInner) {
	o.Destination = v
}

func (o AmlWalletContributions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AmlWalletContributions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Destination) {
		toSerialize["destination"] = o.Destination
	}
	return toSerialize, nil
}

type NullableAmlWalletContributions struct {
	value *AmlWalletContributions
	isSet bool
}

func (v NullableAmlWalletContributions) Get() *AmlWalletContributions {
	return v.value
}

func (v *NullableAmlWalletContributions) Set(val *AmlWalletContributions) {
	v.value = val
	v.isSet = true
}

func (v NullableAmlWalletContributions) IsSet() bool {
	return v.isSet
}

func (v *NullableAmlWalletContributions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmlWalletContributions(val *AmlWalletContributions) *NullableAmlWalletContributions {
	return &NullableAmlWalletContributions{value: val, isSet: true}
}

func (v NullableAmlWalletContributions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmlWalletContributions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


