/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetCustomer200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCustomer200ResponseData{}

// GetCustomer200ResponseData struct for GetCustomer200ResponseData
type GetCustomer200ResponseData struct {
	Customer *Customer `json:"customer,omitempty"`
}

// NewGetCustomer200ResponseData instantiates a new GetCustomer200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCustomer200ResponseData() *GetCustomer200ResponseData {
	this := GetCustomer200ResponseData{}
	return &this
}

// NewGetCustomer200ResponseDataWithDefaults instantiates a new GetCustomer200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCustomer200ResponseDataWithDefaults() *GetCustomer200ResponseData {
	this := GetCustomer200ResponseData{}
	return &this
}

// GetCustomer returns the Customer field value if set, zero value otherwise.
func (o *GetCustomer200ResponseData) GetCustomer() Customer {
	if o == nil || IsNil(o.Customer) {
		var ret Customer
		return ret
	}
	return *o.Customer
}

// GetCustomerOk returns a tuple with the Customer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCustomer200ResponseData) GetCustomerOk() (*Customer, bool) {
	if o == nil || IsNil(o.Customer) {
		return nil, false
	}
	return o.Customer, true
}

// HasCustomer returns a boolean if a field has been set.
func (o *GetCustomer200ResponseData) HasCustomer() bool {
	if o != nil && !IsNil(o.Customer) {
		return true
	}

	return false
}

// SetCustomer gets a reference to the given Customer and assigns it to the Customer field.
func (o *GetCustomer200ResponseData) SetCustomer(v Customer) {
	o.Customer = &v
}

func (o GetCustomer200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetCustomer200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Customer) {
		toSerialize["customer"] = o.Customer
	}
	return toSerialize, nil
}

type NullableGetCustomer200ResponseData struct {
	value *GetCustomer200ResponseData
	isSet bool
}

func (v NullableGetCustomer200ResponseData) Get() *GetCustomer200ResponseData {
	return v.value
}

func (v *NullableGetCustomer200ResponseData) Set(val *GetCustomer200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCustomer200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCustomer200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCustomer200ResponseData(val *GetCustomer200ResponseData) *NullableGetCustomer200ResponseData {
	return &NullableGetCustomer200ResponseData{value: val, isSet: true}
}

func (v NullableGetCustomer200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCustomer200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


