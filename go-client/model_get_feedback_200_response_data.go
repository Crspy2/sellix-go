/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the GetFeedback200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetFeedback200ResponseData{}

// GetFeedback200ResponseData struct for GetFeedback200ResponseData
type GetFeedback200ResponseData struct {
	Feedback *Feedback `json:"feedback,omitempty"`
}

// NewGetFeedback200ResponseData instantiates a new GetFeedback200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetFeedback200ResponseData() *GetFeedback200ResponseData {
	this := GetFeedback200ResponseData{}
	return &this
}

// NewGetFeedback200ResponseDataWithDefaults instantiates a new GetFeedback200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetFeedback200ResponseDataWithDefaults() *GetFeedback200ResponseData {
	this := GetFeedback200ResponseData{}
	return &this
}

// GetFeedback returns the Feedback field value if set, zero value otherwise.
func (o *GetFeedback200ResponseData) GetFeedback() Feedback {
	if o == nil || IsNil(o.Feedback) {
		var ret Feedback
		return ret
	}
	return *o.Feedback
}

// GetFeedbackOk returns a tuple with the Feedback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFeedback200ResponseData) GetFeedbackOk() (*Feedback, bool) {
	if o == nil || IsNil(o.Feedback) {
		return nil, false
	}
	return o.Feedback, true
}

// HasFeedback returns a boolean if a field has been set.
func (o *GetFeedback200ResponseData) HasFeedback() bool {
	if o != nil && !IsNil(o.Feedback) {
		return true
	}

	return false
}

// SetFeedback gets a reference to the given Feedback and assigns it to the Feedback field.
func (o *GetFeedback200ResponseData) SetFeedback(v Feedback) {
	o.Feedback = &v
}

func (o GetFeedback200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetFeedback200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Feedback) {
		toSerialize["feedback"] = o.Feedback
	}
	return toSerialize, nil
}

type NullableGetFeedback200ResponseData struct {
	value *GetFeedback200ResponseData
	isSet bool
}

func (v NullableGetFeedback200ResponseData) Get() *GetFeedback200ResponseData {
	return v.value
}

func (v *NullableGetFeedback200ResponseData) Set(val *GetFeedback200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetFeedback200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetFeedback200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetFeedback200ResponseData(val *GetFeedback200ResponseData) *NullableGetFeedback200ResponseData {
	return &NullableGetFeedback200ResponseData{value: val, isSet: true}
}

func (v NullableGetFeedback200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetFeedback200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


