/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CustomFieldsArrayInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomFieldsArrayInner{}

// CustomFieldsArrayInner struct for CustomFieldsArrayInner
type CustomFieldsArrayInner struct {
	// Type of the custom field.
	Type *string `json:"type,omitempty"`
	// Custom field name displayed to the customer.
	Name *string `json:"name,omitempty"`
	// Regex that the custom field value must match.
	Regex *string `json:"regex,omitempty"`
	// Placeholder for the custom field input.
	Placeholder *string `json:"placeholder,omitempty"`
	// Default value if the customer leaves the input empty.
	Default *string `json:"default,omitempty"`
	// Whether or not this custom field is required to proceed with the purchase.
	Required *bool `json:"required,omitempty"`
}

// NewCustomFieldsArrayInner instantiates a new CustomFieldsArrayInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomFieldsArrayInner() *CustomFieldsArrayInner {
	this := CustomFieldsArrayInner{}
	return &this
}

// NewCustomFieldsArrayInnerWithDefaults instantiates a new CustomFieldsArrayInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomFieldsArrayInnerWithDefaults() *CustomFieldsArrayInner {
	this := CustomFieldsArrayInner{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CustomFieldsArrayInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomFieldsArrayInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CustomFieldsArrayInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CustomFieldsArrayInner) SetType(v string) {
	o.Type = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CustomFieldsArrayInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomFieldsArrayInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CustomFieldsArrayInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CustomFieldsArrayInner) SetName(v string) {
	o.Name = &v
}

// GetRegex returns the Regex field value if set, zero value otherwise.
func (o *CustomFieldsArrayInner) GetRegex() string {
	if o == nil || IsNil(o.Regex) {
		var ret string
		return ret
	}
	return *o.Regex
}

// GetRegexOk returns a tuple with the Regex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomFieldsArrayInner) GetRegexOk() (*string, bool) {
	if o == nil || IsNil(o.Regex) {
		return nil, false
	}
	return o.Regex, true
}

// HasRegex returns a boolean if a field has been set.
func (o *CustomFieldsArrayInner) HasRegex() bool {
	if o != nil && !IsNil(o.Regex) {
		return true
	}

	return false
}

// SetRegex gets a reference to the given string and assigns it to the Regex field.
func (o *CustomFieldsArrayInner) SetRegex(v string) {
	o.Regex = &v
}

// GetPlaceholder returns the Placeholder field value if set, zero value otherwise.
func (o *CustomFieldsArrayInner) GetPlaceholder() string {
	if o == nil || IsNil(o.Placeholder) {
		var ret string
		return ret
	}
	return *o.Placeholder
}

// GetPlaceholderOk returns a tuple with the Placeholder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomFieldsArrayInner) GetPlaceholderOk() (*string, bool) {
	if o == nil || IsNil(o.Placeholder) {
		return nil, false
	}
	return o.Placeholder, true
}

// HasPlaceholder returns a boolean if a field has been set.
func (o *CustomFieldsArrayInner) HasPlaceholder() bool {
	if o != nil && !IsNil(o.Placeholder) {
		return true
	}

	return false
}

// SetPlaceholder gets a reference to the given string and assigns it to the Placeholder field.
func (o *CustomFieldsArrayInner) SetPlaceholder(v string) {
	o.Placeholder = &v
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *CustomFieldsArrayInner) GetDefault() string {
	if o == nil || IsNil(o.Default) {
		var ret string
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomFieldsArrayInner) GetDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.Default) {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *CustomFieldsArrayInner) HasDefault() bool {
	if o != nil && !IsNil(o.Default) {
		return true
	}

	return false
}

// SetDefault gets a reference to the given string and assigns it to the Default field.
func (o *CustomFieldsArrayInner) SetDefault(v string) {
	o.Default = &v
}

// GetRequired returns the Required field value if set, zero value otherwise.
func (o *CustomFieldsArrayInner) GetRequired() bool {
	if o == nil || IsNil(o.Required) {
		var ret bool
		return ret
	}
	return *o.Required
}

// GetRequiredOk returns a tuple with the Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomFieldsArrayInner) GetRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.Required) {
		return nil, false
	}
	return o.Required, true
}

// HasRequired returns a boolean if a field has been set.
func (o *CustomFieldsArrayInner) HasRequired() bool {
	if o != nil && !IsNil(o.Required) {
		return true
	}

	return false
}

// SetRequired gets a reference to the given bool and assigns it to the Required field.
func (o *CustomFieldsArrayInner) SetRequired(v bool) {
	o.Required = &v
}

func (o CustomFieldsArrayInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomFieldsArrayInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Regex) {
		toSerialize["regex"] = o.Regex
	}
	if !IsNil(o.Placeholder) {
		toSerialize["placeholder"] = o.Placeholder
	}
	if !IsNil(o.Default) {
		toSerialize["default"] = o.Default
	}
	if !IsNil(o.Required) {
		toSerialize["required"] = o.Required
	}
	return toSerialize, nil
}

type NullableCustomFieldsArrayInner struct {
	value *CustomFieldsArrayInner
	isSet bool
}

func (v NullableCustomFieldsArrayInner) Get() *CustomFieldsArrayInner {
	return v.value
}

func (v *NullableCustomFieldsArrayInner) Set(val *CustomFieldsArrayInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomFieldsArrayInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomFieldsArrayInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomFieldsArrayInner(val *CustomFieldsArrayInner) *NullableCustomFieldsArrayInner {
	return &NullableCustomFieldsArrayInner{value: val, isSet: true}
}

func (v NullableCustomFieldsArrayInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomFieldsArrayInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


