/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the ProductTaxDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductTaxDetails{}

// ProductTaxDetails struct for ProductTaxDetails
type ProductTaxDetails struct {
	VatPercentage *string `json:"vat_percentage,omitempty"`
	TaxConfiguration *string `json:"tax_configuration,omitempty"`
	TaxConfigurationData []string `json:"tax_configuration_data,omitempty"`
	DisplayTaxOnStorefront *int32 `json:"display_tax_on_storefront,omitempty"`
	DisplayTaxCustomFields *int32 `json:"display_tax_custom_fields,omitempty"`
	ValidationOnlyForCompanies *int32 `json:"validation_only_for_companies,omitempty"`
	ValidateVatNumber *int32 `json:"validate_vat_number,omitempty"`
	PricesTaxInclusive *int32 `json:"prices_tax_inclusive,omitempty"`
}

// NewProductTaxDetails instantiates a new ProductTaxDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductTaxDetails() *ProductTaxDetails {
	this := ProductTaxDetails{}
	return &this
}

// NewProductTaxDetailsWithDefaults instantiates a new ProductTaxDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductTaxDetailsWithDefaults() *ProductTaxDetails {
	this := ProductTaxDetails{}
	return &this
}

// GetVatPercentage returns the VatPercentage field value if set, zero value otherwise.
func (o *ProductTaxDetails) GetVatPercentage() string {
	if o == nil || IsNil(o.VatPercentage) {
		var ret string
		return ret
	}
	return *o.VatPercentage
}

// GetVatPercentageOk returns a tuple with the VatPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductTaxDetails) GetVatPercentageOk() (*string, bool) {
	if o == nil || IsNil(o.VatPercentage) {
		return nil, false
	}
	return o.VatPercentage, true
}

// HasVatPercentage returns a boolean if a field has been set.
func (o *ProductTaxDetails) HasVatPercentage() bool {
	if o != nil && !IsNil(o.VatPercentage) {
		return true
	}

	return false
}

// SetVatPercentage gets a reference to the given string and assigns it to the VatPercentage field.
func (o *ProductTaxDetails) SetVatPercentage(v string) {
	o.VatPercentage = &v
}

// GetTaxConfiguration returns the TaxConfiguration field value if set, zero value otherwise.
func (o *ProductTaxDetails) GetTaxConfiguration() string {
	if o == nil || IsNil(o.TaxConfiguration) {
		var ret string
		return ret
	}
	return *o.TaxConfiguration
}

// GetTaxConfigurationOk returns a tuple with the TaxConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductTaxDetails) GetTaxConfigurationOk() (*string, bool) {
	if o == nil || IsNil(o.TaxConfiguration) {
		return nil, false
	}
	return o.TaxConfiguration, true
}

// HasTaxConfiguration returns a boolean if a field has been set.
func (o *ProductTaxDetails) HasTaxConfiguration() bool {
	if o != nil && !IsNil(o.TaxConfiguration) {
		return true
	}

	return false
}

// SetTaxConfiguration gets a reference to the given string and assigns it to the TaxConfiguration field.
func (o *ProductTaxDetails) SetTaxConfiguration(v string) {
	o.TaxConfiguration = &v
}

// GetTaxConfigurationData returns the TaxConfigurationData field value if set, zero value otherwise.
func (o *ProductTaxDetails) GetTaxConfigurationData() []string {
	if o == nil || IsNil(o.TaxConfigurationData) {
		var ret []string
		return ret
	}
	return o.TaxConfigurationData
}

// GetTaxConfigurationDataOk returns a tuple with the TaxConfigurationData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductTaxDetails) GetTaxConfigurationDataOk() ([]string, bool) {
	if o == nil || IsNil(o.TaxConfigurationData) {
		return nil, false
	}
	return o.TaxConfigurationData, true
}

// HasTaxConfigurationData returns a boolean if a field has been set.
func (o *ProductTaxDetails) HasTaxConfigurationData() bool {
	if o != nil && !IsNil(o.TaxConfigurationData) {
		return true
	}

	return false
}

// SetTaxConfigurationData gets a reference to the given []string and assigns it to the TaxConfigurationData field.
func (o *ProductTaxDetails) SetTaxConfigurationData(v []string) {
	o.TaxConfigurationData = v
}

// GetDisplayTaxOnStorefront returns the DisplayTaxOnStorefront field value if set, zero value otherwise.
func (o *ProductTaxDetails) GetDisplayTaxOnStorefront() int32 {
	if o == nil || IsNil(o.DisplayTaxOnStorefront) {
		var ret int32
		return ret
	}
	return *o.DisplayTaxOnStorefront
}

// GetDisplayTaxOnStorefrontOk returns a tuple with the DisplayTaxOnStorefront field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductTaxDetails) GetDisplayTaxOnStorefrontOk() (*int32, bool) {
	if o == nil || IsNil(o.DisplayTaxOnStorefront) {
		return nil, false
	}
	return o.DisplayTaxOnStorefront, true
}

// HasDisplayTaxOnStorefront returns a boolean if a field has been set.
func (o *ProductTaxDetails) HasDisplayTaxOnStorefront() bool {
	if o != nil && !IsNil(o.DisplayTaxOnStorefront) {
		return true
	}

	return false
}

// SetDisplayTaxOnStorefront gets a reference to the given int32 and assigns it to the DisplayTaxOnStorefront field.
func (o *ProductTaxDetails) SetDisplayTaxOnStorefront(v int32) {
	o.DisplayTaxOnStorefront = &v
}

// GetDisplayTaxCustomFields returns the DisplayTaxCustomFields field value if set, zero value otherwise.
func (o *ProductTaxDetails) GetDisplayTaxCustomFields() int32 {
	if o == nil || IsNil(o.DisplayTaxCustomFields) {
		var ret int32
		return ret
	}
	return *o.DisplayTaxCustomFields
}

// GetDisplayTaxCustomFieldsOk returns a tuple with the DisplayTaxCustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductTaxDetails) GetDisplayTaxCustomFieldsOk() (*int32, bool) {
	if o == nil || IsNil(o.DisplayTaxCustomFields) {
		return nil, false
	}
	return o.DisplayTaxCustomFields, true
}

// HasDisplayTaxCustomFields returns a boolean if a field has been set.
func (o *ProductTaxDetails) HasDisplayTaxCustomFields() bool {
	if o != nil && !IsNil(o.DisplayTaxCustomFields) {
		return true
	}

	return false
}

// SetDisplayTaxCustomFields gets a reference to the given int32 and assigns it to the DisplayTaxCustomFields field.
func (o *ProductTaxDetails) SetDisplayTaxCustomFields(v int32) {
	o.DisplayTaxCustomFields = &v
}

// GetValidationOnlyForCompanies returns the ValidationOnlyForCompanies field value if set, zero value otherwise.
func (o *ProductTaxDetails) GetValidationOnlyForCompanies() int32 {
	if o == nil || IsNil(o.ValidationOnlyForCompanies) {
		var ret int32
		return ret
	}
	return *o.ValidationOnlyForCompanies
}

// GetValidationOnlyForCompaniesOk returns a tuple with the ValidationOnlyForCompanies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductTaxDetails) GetValidationOnlyForCompaniesOk() (*int32, bool) {
	if o == nil || IsNil(o.ValidationOnlyForCompanies) {
		return nil, false
	}
	return o.ValidationOnlyForCompanies, true
}

// HasValidationOnlyForCompanies returns a boolean if a field has been set.
func (o *ProductTaxDetails) HasValidationOnlyForCompanies() bool {
	if o != nil && !IsNil(o.ValidationOnlyForCompanies) {
		return true
	}

	return false
}

// SetValidationOnlyForCompanies gets a reference to the given int32 and assigns it to the ValidationOnlyForCompanies field.
func (o *ProductTaxDetails) SetValidationOnlyForCompanies(v int32) {
	o.ValidationOnlyForCompanies = &v
}

// GetValidateVatNumber returns the ValidateVatNumber field value if set, zero value otherwise.
func (o *ProductTaxDetails) GetValidateVatNumber() int32 {
	if o == nil || IsNil(o.ValidateVatNumber) {
		var ret int32
		return ret
	}
	return *o.ValidateVatNumber
}

// GetValidateVatNumberOk returns a tuple with the ValidateVatNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductTaxDetails) GetValidateVatNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.ValidateVatNumber) {
		return nil, false
	}
	return o.ValidateVatNumber, true
}

// HasValidateVatNumber returns a boolean if a field has been set.
func (o *ProductTaxDetails) HasValidateVatNumber() bool {
	if o != nil && !IsNil(o.ValidateVatNumber) {
		return true
	}

	return false
}

// SetValidateVatNumber gets a reference to the given int32 and assigns it to the ValidateVatNumber field.
func (o *ProductTaxDetails) SetValidateVatNumber(v int32) {
	o.ValidateVatNumber = &v
}

// GetPricesTaxInclusive returns the PricesTaxInclusive field value if set, zero value otherwise.
func (o *ProductTaxDetails) GetPricesTaxInclusive() int32 {
	if o == nil || IsNil(o.PricesTaxInclusive) {
		var ret int32
		return ret
	}
	return *o.PricesTaxInclusive
}

// GetPricesTaxInclusiveOk returns a tuple with the PricesTaxInclusive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductTaxDetails) GetPricesTaxInclusiveOk() (*int32, bool) {
	if o == nil || IsNil(o.PricesTaxInclusive) {
		return nil, false
	}
	return o.PricesTaxInclusive, true
}

// HasPricesTaxInclusive returns a boolean if a field has been set.
func (o *ProductTaxDetails) HasPricesTaxInclusive() bool {
	if o != nil && !IsNil(o.PricesTaxInclusive) {
		return true
	}

	return false
}

// SetPricesTaxInclusive gets a reference to the given int32 and assigns it to the PricesTaxInclusive field.
func (o *ProductTaxDetails) SetPricesTaxInclusive(v int32) {
	o.PricesTaxInclusive = &v
}

func (o ProductTaxDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductTaxDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VatPercentage) {
		toSerialize["vat_percentage"] = o.VatPercentage
	}
	if !IsNil(o.TaxConfiguration) {
		toSerialize["tax_configuration"] = o.TaxConfiguration
	}
	if !IsNil(o.TaxConfigurationData) {
		toSerialize["tax_configuration_data"] = o.TaxConfigurationData
	}
	if !IsNil(o.DisplayTaxOnStorefront) {
		toSerialize["display_tax_on_storefront"] = o.DisplayTaxOnStorefront
	}
	if !IsNil(o.DisplayTaxCustomFields) {
		toSerialize["display_tax_custom_fields"] = o.DisplayTaxCustomFields
	}
	if !IsNil(o.ValidationOnlyForCompanies) {
		toSerialize["validation_only_for_companies"] = o.ValidationOnlyForCompanies
	}
	if !IsNil(o.ValidateVatNumber) {
		toSerialize["validate_vat_number"] = o.ValidateVatNumber
	}
	if !IsNil(o.PricesTaxInclusive) {
		toSerialize["prices_tax_inclusive"] = o.PricesTaxInclusive
	}
	return toSerialize, nil
}

type NullableProductTaxDetails struct {
	value *ProductTaxDetails
	isSet bool
}

func (v NullableProductTaxDetails) Get() *ProductTaxDetails {
	return v.value
}

func (v *NullableProductTaxDetails) Set(val *ProductTaxDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableProductTaxDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableProductTaxDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductTaxDetails(val *ProductTaxDetails) *NullableProductTaxDetails {
	return &NullableProductTaxDetails{value: val, isSet: true}
}

func (v NullableProductTaxDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductTaxDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


