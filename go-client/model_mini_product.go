/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the MiniProduct type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MiniProduct{}

// MiniProduct struct for MiniProduct
type MiniProduct struct {
	// Unique ID of the resource, used as reference across the API.
	Uniqid *string `json:"uniqid,omitempty"`
	// Product price.
	Price *string `json:"price,omitempty"`
	// Product price in currency.
	PriceDisplay *string `json:"price_display,omitempty"`
	// The discount price on the purchased goods.
	PriceDiscount *float32 `json:"price_discount,omitempty"`
	Currency *Currency `json:"currency,omitempty"`
	// Whether or not the product is shown on the storefront.
	Unlisted *int32 `json:"unlisted,omitempty"`
	// The title of the product
	Title *string `json:"title,omitempty"`
	// DEPRECATED: Unique id of the image attachment for this product.
	ImageAttachment *string `json:"image_attachment,omitempty"`
	// The description of the product
	Description *string `json:"description,omitempty"`
	// Minimum quantity purchasable of this product.
	QuantityMin *int32 `json:"quantity_min,omitempty"`
	// Maximum quantity purchasable of this product.
	QuantityMax *int32 `json:"quantity_max,omitempty"`
	// At which product quantity should we send a webhook and email warning the merchant.
	QuantityWarning *int32 `json:"quantity_warning,omitempty"`
	CustomFields []CustomFieldsArrayInner `json:"custom_fields,omitempty"`
	// Product type.
	Type *string `json:"type,omitempty"`
	// The shop ID to which this resource belongs.
	ShopId *float32 `json:"shop_id,omitempty"`
	// A list of gateways available on this product.
	Gateways *string `json:"gateways,omitempty"`
	// Minimum number of confirmations for a crypto payment to be accepted.
	CryptoConfirmationsNeeded *int32 `json:"crypto_confirmations_needed,omitempty"`
	// Whether or not the product is private and cannot be purchased.
	Private *int32 `json:"private,omitempty"`
	// Stock of the current product, can be -1 for unlimited stock.
	Stock *int32 `json:"stock,omitempty"`
	// Sort order of this product.
	SortPriority *int32 `json:"sort_priority,omitempty"`
	// Whether or not the product is on hold and purchaseable.
	OnHold *int32 `json:"on_hold,omitempty"`
	// Timestamp for the creation of the product.
	CreatedAt *int32 `json:"created_at,omitempty"`
	// Date, available if the product has been edited.
	UpdatedAt *int32 `json:"updated_at,omitempty"`
	// The uniqid of the product
	ProductId *string `json:"product_id,omitempty"`
	// If the product is in a group, this is the group_id of that group.
	GroupId *string `json:"group_id,omitempty"`
	// The average rating of the product.
	AverageScore *string `json:"average_score,omitempty"`
}

// NewMiniProduct instantiates a new MiniProduct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMiniProduct() *MiniProduct {
	this := MiniProduct{}
	return &this
}

// NewMiniProductWithDefaults instantiates a new MiniProduct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMiniProductWithDefaults() *MiniProduct {
	this := MiniProduct{}
	return &this
}

// GetUniqid returns the Uniqid field value if set, zero value otherwise.
func (o *MiniProduct) GetUniqid() string {
	if o == nil || IsNil(o.Uniqid) {
		var ret string
		return ret
	}
	return *o.Uniqid
}

// GetUniqidOk returns a tuple with the Uniqid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniProduct) GetUniqidOk() (*string, bool) {
	if o == nil || IsNil(o.Uniqid) {
		return nil, false
	}
	return o.Uniqid, true
}

// HasUniqid returns a boolean if a field has been set.
func (o *MiniProduct) HasUniqid() bool {
	if o != nil && !IsNil(o.Uniqid) {
		return true
	}

	return false
}

// SetUniqid gets a reference to the given string and assigns it to the Uniqid field.
func (o *MiniProduct) SetUniqid(v string) {
	o.Uniqid = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *MiniProduct) GetPrice() string {
	if o == nil || IsNil(o.Price) {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniProduct) GetPriceOk() (*string, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *MiniProduct) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *MiniProduct) SetPrice(v string) {
	o.Price = &v
}

// GetPriceDisplay returns the PriceDisplay field value if set, zero value otherwise.
func (o *MiniProduct) GetPriceDisplay() string {
	if o == nil || IsNil(o.PriceDisplay) {
		var ret string
		return ret
	}
	return *o.PriceDisplay
}

// GetPriceDisplayOk returns a tuple with the PriceDisplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniProduct) GetPriceDisplayOk() (*string, bool) {
	if o == nil || IsNil(o.PriceDisplay) {
		return nil, false
	}
	return o.PriceDisplay, true
}

// HasPriceDisplay returns a boolean if a field has been set.
func (o *MiniProduct) HasPriceDisplay() bool {
	if o != nil && !IsNil(o.PriceDisplay) {
		return true
	}

	return false
}

// SetPriceDisplay gets a reference to the given string and assigns it to the PriceDisplay field.
func (o *MiniProduct) SetPriceDisplay(v string) {
	o.PriceDisplay = &v
}

// GetPriceDiscount returns the PriceDiscount field value if set, zero value otherwise.
func (o *MiniProduct) GetPriceDiscount() float32 {
	if o == nil || IsNil(o.PriceDiscount) {
		var ret float32
		return ret
	}
	return *o.PriceDiscount
}

// GetPriceDiscountOk returns a tuple with the PriceDiscount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniProduct) GetPriceDiscountOk() (*float32, bool) {
	if o == nil || IsNil(o.PriceDiscount) {
		return nil, false
	}
	return o.PriceDiscount, true
}

// HasPriceDiscount returns a boolean if a field has been set.
func (o *MiniProduct) HasPriceDiscount() bool {
	if o != nil && !IsNil(o.PriceDiscount) {
		return true
	}

	return false
}

// SetPriceDiscount gets a reference to the given float32 and assigns it to the PriceDiscount field.
func (o *MiniProduct) SetPriceDiscount(v float32) {
	o.PriceDiscount = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *MiniProduct) GetCurrency() Currency {
	if o == nil || IsNil(o.Currency) {
		var ret Currency
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniProduct) GetCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *MiniProduct) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given Currency and assigns it to the Currency field.
func (o *MiniProduct) SetCurrency(v Currency) {
	o.Currency = &v
}

// GetUnlisted returns the Unlisted field value if set, zero value otherwise.
func (o *MiniProduct) GetUnlisted() int32 {
	if o == nil || IsNil(o.Unlisted) {
		var ret int32
		return ret
	}
	return *o.Unlisted
}

// GetUnlistedOk returns a tuple with the Unlisted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniProduct) GetUnlistedOk() (*int32, bool) {
	if o == nil || IsNil(o.Unlisted) {
		return nil, false
	}
	return o.Unlisted, true
}

// HasUnlisted returns a boolean if a field has been set.
func (o *MiniProduct) HasUnlisted() bool {
	if o != nil && !IsNil(o.Unlisted) {
		return true
	}

	return false
}

// SetUnlisted gets a reference to the given int32 and assigns it to the Unlisted field.
func (o *MiniProduct) SetUnlisted(v int32) {
	o.Unlisted = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *MiniProduct) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniProduct) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *MiniProduct) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *MiniProduct) SetTitle(v string) {
	o.Title = &v
}

// GetImageAttachment returns the ImageAttachment field value if set, zero value otherwise.
func (o *MiniProduct) GetImageAttachment() string {
	if o == nil || IsNil(o.ImageAttachment) {
		var ret string
		return ret
	}
	return *o.ImageAttachment
}

// GetImageAttachmentOk returns a tuple with the ImageAttachment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniProduct) GetImageAttachmentOk() (*string, bool) {
	if o == nil || IsNil(o.ImageAttachment) {
		return nil, false
	}
	return o.ImageAttachment, true
}

// HasImageAttachment returns a boolean if a field has been set.
func (o *MiniProduct) HasImageAttachment() bool {
	if o != nil && !IsNil(o.ImageAttachment) {
		return true
	}

	return false
}

// SetImageAttachment gets a reference to the given string and assigns it to the ImageAttachment field.
func (o *MiniProduct) SetImageAttachment(v string) {
	o.ImageAttachment = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MiniProduct) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniProduct) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MiniProduct) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MiniProduct) SetDescription(v string) {
	o.Description = &v
}

// GetQuantityMin returns the QuantityMin field value if set, zero value otherwise.
func (o *MiniProduct) GetQuantityMin() int32 {
	if o == nil || IsNil(o.QuantityMin) {
		var ret int32
		return ret
	}
	return *o.QuantityMin
}

// GetQuantityMinOk returns a tuple with the QuantityMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniProduct) GetQuantityMinOk() (*int32, bool) {
	if o == nil || IsNil(o.QuantityMin) {
		return nil, false
	}
	return o.QuantityMin, true
}

// HasQuantityMin returns a boolean if a field has been set.
func (o *MiniProduct) HasQuantityMin() bool {
	if o != nil && !IsNil(o.QuantityMin) {
		return true
	}

	return false
}

// SetQuantityMin gets a reference to the given int32 and assigns it to the QuantityMin field.
func (o *MiniProduct) SetQuantityMin(v int32) {
	o.QuantityMin = &v
}

// GetQuantityMax returns the QuantityMax field value if set, zero value otherwise.
func (o *MiniProduct) GetQuantityMax() int32 {
	if o == nil || IsNil(o.QuantityMax) {
		var ret int32
		return ret
	}
	return *o.QuantityMax
}

// GetQuantityMaxOk returns a tuple with the QuantityMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniProduct) GetQuantityMaxOk() (*int32, bool) {
	if o == nil || IsNil(o.QuantityMax) {
		return nil, false
	}
	return o.QuantityMax, true
}

// HasQuantityMax returns a boolean if a field has been set.
func (o *MiniProduct) HasQuantityMax() bool {
	if o != nil && !IsNil(o.QuantityMax) {
		return true
	}

	return false
}

// SetQuantityMax gets a reference to the given int32 and assigns it to the QuantityMax field.
func (o *MiniProduct) SetQuantityMax(v int32) {
	o.QuantityMax = &v
}

// GetQuantityWarning returns the QuantityWarning field value if set, zero value otherwise.
func (o *MiniProduct) GetQuantityWarning() int32 {
	if o == nil || IsNil(o.QuantityWarning) {
		var ret int32
		return ret
	}
	return *o.QuantityWarning
}

// GetQuantityWarningOk returns a tuple with the QuantityWarning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniProduct) GetQuantityWarningOk() (*int32, bool) {
	if o == nil || IsNil(o.QuantityWarning) {
		return nil, false
	}
	return o.QuantityWarning, true
}

// HasQuantityWarning returns a boolean if a field has been set.
func (o *MiniProduct) HasQuantityWarning() bool {
	if o != nil && !IsNil(o.QuantityWarning) {
		return true
	}

	return false
}

// SetQuantityWarning gets a reference to the given int32 and assigns it to the QuantityWarning field.
func (o *MiniProduct) SetQuantityWarning(v int32) {
	o.QuantityWarning = &v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *MiniProduct) GetCustomFields() []CustomFieldsArrayInner {
	if o == nil || IsNil(o.CustomFields) {
		var ret []CustomFieldsArrayInner
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniProduct) GetCustomFieldsOk() ([]CustomFieldsArrayInner, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *MiniProduct) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given []CustomFieldsArrayInner and assigns it to the CustomFields field.
func (o *MiniProduct) SetCustomFields(v []CustomFieldsArrayInner) {
	o.CustomFields = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MiniProduct) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniProduct) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MiniProduct) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *MiniProduct) SetType(v string) {
	o.Type = &v
}

// GetShopId returns the ShopId field value if set, zero value otherwise.
func (o *MiniProduct) GetShopId() float32 {
	if o == nil || IsNil(o.ShopId) {
		var ret float32
		return ret
	}
	return *o.ShopId
}

// GetShopIdOk returns a tuple with the ShopId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniProduct) GetShopIdOk() (*float32, bool) {
	if o == nil || IsNil(o.ShopId) {
		return nil, false
	}
	return o.ShopId, true
}

// HasShopId returns a boolean if a field has been set.
func (o *MiniProduct) HasShopId() bool {
	if o != nil && !IsNil(o.ShopId) {
		return true
	}

	return false
}

// SetShopId gets a reference to the given float32 and assigns it to the ShopId field.
func (o *MiniProduct) SetShopId(v float32) {
	o.ShopId = &v
}

// GetGateways returns the Gateways field value if set, zero value otherwise.
func (o *MiniProduct) GetGateways() string {
	if o == nil || IsNil(o.Gateways) {
		var ret string
		return ret
	}
	return *o.Gateways
}

// GetGatewaysOk returns a tuple with the Gateways field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniProduct) GetGatewaysOk() (*string, bool) {
	if o == nil || IsNil(o.Gateways) {
		return nil, false
	}
	return o.Gateways, true
}

// HasGateways returns a boolean if a field has been set.
func (o *MiniProduct) HasGateways() bool {
	if o != nil && !IsNil(o.Gateways) {
		return true
	}

	return false
}

// SetGateways gets a reference to the given string and assigns it to the Gateways field.
func (o *MiniProduct) SetGateways(v string) {
	o.Gateways = &v
}

// GetCryptoConfirmationsNeeded returns the CryptoConfirmationsNeeded field value if set, zero value otherwise.
func (o *MiniProduct) GetCryptoConfirmationsNeeded() int32 {
	if o == nil || IsNil(o.CryptoConfirmationsNeeded) {
		var ret int32
		return ret
	}
	return *o.CryptoConfirmationsNeeded
}

// GetCryptoConfirmationsNeededOk returns a tuple with the CryptoConfirmationsNeeded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniProduct) GetCryptoConfirmationsNeededOk() (*int32, bool) {
	if o == nil || IsNil(o.CryptoConfirmationsNeeded) {
		return nil, false
	}
	return o.CryptoConfirmationsNeeded, true
}

// HasCryptoConfirmationsNeeded returns a boolean if a field has been set.
func (o *MiniProduct) HasCryptoConfirmationsNeeded() bool {
	if o != nil && !IsNil(o.CryptoConfirmationsNeeded) {
		return true
	}

	return false
}

// SetCryptoConfirmationsNeeded gets a reference to the given int32 and assigns it to the CryptoConfirmationsNeeded field.
func (o *MiniProduct) SetCryptoConfirmationsNeeded(v int32) {
	o.CryptoConfirmationsNeeded = &v
}

// GetPrivate returns the Private field value if set, zero value otherwise.
func (o *MiniProduct) GetPrivate() int32 {
	if o == nil || IsNil(o.Private) {
		var ret int32
		return ret
	}
	return *o.Private
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniProduct) GetPrivateOk() (*int32, bool) {
	if o == nil || IsNil(o.Private) {
		return nil, false
	}
	return o.Private, true
}

// HasPrivate returns a boolean if a field has been set.
func (o *MiniProduct) HasPrivate() bool {
	if o != nil && !IsNil(o.Private) {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given int32 and assigns it to the Private field.
func (o *MiniProduct) SetPrivate(v int32) {
	o.Private = &v
}

// GetStock returns the Stock field value if set, zero value otherwise.
func (o *MiniProduct) GetStock() int32 {
	if o == nil || IsNil(o.Stock) {
		var ret int32
		return ret
	}
	return *o.Stock
}

// GetStockOk returns a tuple with the Stock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniProduct) GetStockOk() (*int32, bool) {
	if o == nil || IsNil(o.Stock) {
		return nil, false
	}
	return o.Stock, true
}

// HasStock returns a boolean if a field has been set.
func (o *MiniProduct) HasStock() bool {
	if o != nil && !IsNil(o.Stock) {
		return true
	}

	return false
}

// SetStock gets a reference to the given int32 and assigns it to the Stock field.
func (o *MiniProduct) SetStock(v int32) {
	o.Stock = &v
}

// GetSortPriority returns the SortPriority field value if set, zero value otherwise.
func (o *MiniProduct) GetSortPriority() int32 {
	if o == nil || IsNil(o.SortPriority) {
		var ret int32
		return ret
	}
	return *o.SortPriority
}

// GetSortPriorityOk returns a tuple with the SortPriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniProduct) GetSortPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.SortPriority) {
		return nil, false
	}
	return o.SortPriority, true
}

// HasSortPriority returns a boolean if a field has been set.
func (o *MiniProduct) HasSortPriority() bool {
	if o != nil && !IsNil(o.SortPriority) {
		return true
	}

	return false
}

// SetSortPriority gets a reference to the given int32 and assigns it to the SortPriority field.
func (o *MiniProduct) SetSortPriority(v int32) {
	o.SortPriority = &v
}

// GetOnHold returns the OnHold field value if set, zero value otherwise.
func (o *MiniProduct) GetOnHold() int32 {
	if o == nil || IsNil(o.OnHold) {
		var ret int32
		return ret
	}
	return *o.OnHold
}

// GetOnHoldOk returns a tuple with the OnHold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniProduct) GetOnHoldOk() (*int32, bool) {
	if o == nil || IsNil(o.OnHold) {
		return nil, false
	}
	return o.OnHold, true
}

// HasOnHold returns a boolean if a field has been set.
func (o *MiniProduct) HasOnHold() bool {
	if o != nil && !IsNil(o.OnHold) {
		return true
	}

	return false
}

// SetOnHold gets a reference to the given int32 and assigns it to the OnHold field.
func (o *MiniProduct) SetOnHold(v int32) {
	o.OnHold = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *MiniProduct) GetCreatedAt() int32 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniProduct) GetCreatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *MiniProduct) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *MiniProduct) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *MiniProduct) GetUpdatedAt() int32 {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniProduct) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *MiniProduct) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *MiniProduct) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *MiniProduct) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniProduct) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *MiniProduct) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *MiniProduct) SetProductId(v string) {
	o.ProductId = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *MiniProduct) GetGroupId() string {
	if o == nil || IsNil(o.GroupId) {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniProduct) GetGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.GroupId) {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *MiniProduct) HasGroupId() bool {
	if o != nil && !IsNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *MiniProduct) SetGroupId(v string) {
	o.GroupId = &v
}

// GetAverageScore returns the AverageScore field value if set, zero value otherwise.
func (o *MiniProduct) GetAverageScore() string {
	if o == nil || IsNil(o.AverageScore) {
		var ret string
		return ret
	}
	return *o.AverageScore
}

// GetAverageScoreOk returns a tuple with the AverageScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiniProduct) GetAverageScoreOk() (*string, bool) {
	if o == nil || IsNil(o.AverageScore) {
		return nil, false
	}
	return o.AverageScore, true
}

// HasAverageScore returns a boolean if a field has been set.
func (o *MiniProduct) HasAverageScore() bool {
	if o != nil && !IsNil(o.AverageScore) {
		return true
	}

	return false
}

// SetAverageScore gets a reference to the given string and assigns it to the AverageScore field.
func (o *MiniProduct) SetAverageScore(v string) {
	o.AverageScore = &v
}

func (o MiniProduct) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MiniProduct) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Uniqid) {
		toSerialize["uniqid"] = o.Uniqid
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.PriceDisplay) {
		toSerialize["price_display"] = o.PriceDisplay
	}
	if !IsNil(o.PriceDiscount) {
		toSerialize["price_discount"] = o.PriceDiscount
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Unlisted) {
		toSerialize["unlisted"] = o.Unlisted
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.ImageAttachment) {
		toSerialize["image_attachment"] = o.ImageAttachment
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.QuantityMin) {
		toSerialize["quantity_min"] = o.QuantityMin
	}
	if !IsNil(o.QuantityMax) {
		toSerialize["quantity_max"] = o.QuantityMax
	}
	if !IsNil(o.QuantityWarning) {
		toSerialize["quantity_warning"] = o.QuantityWarning
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.ShopId) {
		toSerialize["shop_id"] = o.ShopId
	}
	if !IsNil(o.Gateways) {
		toSerialize["gateways"] = o.Gateways
	}
	if !IsNil(o.CryptoConfirmationsNeeded) {
		toSerialize["crypto_confirmations_needed"] = o.CryptoConfirmationsNeeded
	}
	if !IsNil(o.Private) {
		toSerialize["private"] = o.Private
	}
	if !IsNil(o.Stock) {
		toSerialize["stock"] = o.Stock
	}
	if !IsNil(o.SortPriority) {
		toSerialize["sort_priority"] = o.SortPriority
	}
	if !IsNil(o.OnHold) {
		toSerialize["on_hold"] = o.OnHold
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.GroupId) {
		toSerialize["group_id"] = o.GroupId
	}
	if !IsNil(o.AverageScore) {
		toSerialize["average_score"] = o.AverageScore
	}
	return toSerialize, nil
}

type NullableMiniProduct struct {
	value *MiniProduct
	isSet bool
}

func (v NullableMiniProduct) Get() *MiniProduct {
	return v.value
}

func (v *NullableMiniProduct) Set(val *MiniProduct) {
	v.value = val
	v.isSet = true
}

func (v NullableMiniProduct) IsSet() bool {
	return v.isSet
}

func (v *NullableMiniProduct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMiniProduct(val *MiniProduct) *NullableMiniProduct {
	return &NullableMiniProduct{value: val, isSet: true}
}

func (v NullableMiniProduct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMiniProduct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


