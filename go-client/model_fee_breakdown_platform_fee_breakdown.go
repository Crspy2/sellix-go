/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FeeBreakdownPlatformFeeBreakdown type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FeeBreakdownPlatformFeeBreakdown{}

// FeeBreakdownPlatformFeeBreakdown struct for FeeBreakdownPlatformFeeBreakdown
type FeeBreakdownPlatformFeeBreakdown struct {
	Flat *FeeBreakdownPlatformFeeBreakdownFlat `json:"flat,omitempty"`
	Percentage *FeeBreakdownAmlAnalysisBreakdownFlat `json:"percentage,omitempty"`
}

// NewFeeBreakdownPlatformFeeBreakdown instantiates a new FeeBreakdownPlatformFeeBreakdown object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeeBreakdownPlatformFeeBreakdown() *FeeBreakdownPlatformFeeBreakdown {
	this := FeeBreakdownPlatformFeeBreakdown{}
	return &this
}

// NewFeeBreakdownPlatformFeeBreakdownWithDefaults instantiates a new FeeBreakdownPlatformFeeBreakdown object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeeBreakdownPlatformFeeBreakdownWithDefaults() *FeeBreakdownPlatformFeeBreakdown {
	this := FeeBreakdownPlatformFeeBreakdown{}
	return &this
}

// GetFlat returns the Flat field value if set, zero value otherwise.
func (o *FeeBreakdownPlatformFeeBreakdown) GetFlat() FeeBreakdownPlatformFeeBreakdownFlat {
	if o == nil || IsNil(o.Flat) {
		var ret FeeBreakdownPlatformFeeBreakdownFlat
		return ret
	}
	return *o.Flat
}

// GetFlatOk returns a tuple with the Flat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeeBreakdownPlatformFeeBreakdown) GetFlatOk() (*FeeBreakdownPlatformFeeBreakdownFlat, bool) {
	if o == nil || IsNil(o.Flat) {
		return nil, false
	}
	return o.Flat, true
}

// HasFlat returns a boolean if a field has been set.
func (o *FeeBreakdownPlatformFeeBreakdown) HasFlat() bool {
	if o != nil && !IsNil(o.Flat) {
		return true
	}

	return false
}

// SetFlat gets a reference to the given FeeBreakdownPlatformFeeBreakdownFlat and assigns it to the Flat field.
func (o *FeeBreakdownPlatformFeeBreakdown) SetFlat(v FeeBreakdownPlatformFeeBreakdownFlat) {
	o.Flat = &v
}

// GetPercentage returns the Percentage field value if set, zero value otherwise.
func (o *FeeBreakdownPlatformFeeBreakdown) GetPercentage() FeeBreakdownAmlAnalysisBreakdownFlat {
	if o == nil || IsNil(o.Percentage) {
		var ret FeeBreakdownAmlAnalysisBreakdownFlat
		return ret
	}
	return *o.Percentage
}

// GetPercentageOk returns a tuple with the Percentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeeBreakdownPlatformFeeBreakdown) GetPercentageOk() (*FeeBreakdownAmlAnalysisBreakdownFlat, bool) {
	if o == nil || IsNil(o.Percentage) {
		return nil, false
	}
	return o.Percentage, true
}

// HasPercentage returns a boolean if a field has been set.
func (o *FeeBreakdownPlatformFeeBreakdown) HasPercentage() bool {
	if o != nil && !IsNil(o.Percentage) {
		return true
	}

	return false
}

// SetPercentage gets a reference to the given FeeBreakdownAmlAnalysisBreakdownFlat and assigns it to the Percentage field.
func (o *FeeBreakdownPlatformFeeBreakdown) SetPercentage(v FeeBreakdownAmlAnalysisBreakdownFlat) {
	o.Percentage = &v
}

func (o FeeBreakdownPlatformFeeBreakdown) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FeeBreakdownPlatformFeeBreakdown) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Flat) {
		toSerialize["flat"] = o.Flat
	}
	if !IsNil(o.Percentage) {
		toSerialize["percentage"] = o.Percentage
	}
	return toSerialize, nil
}

type NullableFeeBreakdownPlatformFeeBreakdown struct {
	value *FeeBreakdownPlatformFeeBreakdown
	isSet bool
}

func (v NullableFeeBreakdownPlatformFeeBreakdown) Get() *FeeBreakdownPlatformFeeBreakdown {
	return v.value
}

func (v *NullableFeeBreakdownPlatformFeeBreakdown) Set(val *FeeBreakdownPlatformFeeBreakdown) {
	v.value = val
	v.isSet = true
}

func (v NullableFeeBreakdownPlatformFeeBreakdown) IsSet() bool {
	return v.isSet
}

func (v *NullableFeeBreakdownPlatformFeeBreakdown) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeeBreakdownPlatformFeeBreakdown(val *FeeBreakdownPlatformFeeBreakdown) *NullableFeeBreakdownPlatformFeeBreakdown {
	return &NullableFeeBreakdownPlatformFeeBreakdown{value: val, isSet: true}
}

func (v NullableFeeBreakdownPlatformFeeBreakdown) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeeBreakdownPlatformFeeBreakdown) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


