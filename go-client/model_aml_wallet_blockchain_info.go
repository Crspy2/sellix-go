/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AmlWalletBlockchainInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AmlWalletBlockchainInfo{}

// AmlWalletBlockchainInfo struct for AmlWalletBlockchainInfo
type AmlWalletBlockchainInfo struct {
	Cluster *AmlWalletBlockchainInfoCluster `json:"cluster,omitempty"`
}

// NewAmlWalletBlockchainInfo instantiates a new AmlWalletBlockchainInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmlWalletBlockchainInfo() *AmlWalletBlockchainInfo {
	this := AmlWalletBlockchainInfo{}
	return &this
}

// NewAmlWalletBlockchainInfoWithDefaults instantiates a new AmlWalletBlockchainInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmlWalletBlockchainInfoWithDefaults() *AmlWalletBlockchainInfo {
	this := AmlWalletBlockchainInfo{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *AmlWalletBlockchainInfo) GetCluster() AmlWalletBlockchainInfoCluster {
	if o == nil || IsNil(o.Cluster) {
		var ret AmlWalletBlockchainInfoCluster
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmlWalletBlockchainInfo) GetClusterOk() (*AmlWalletBlockchainInfoCluster, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *AmlWalletBlockchainInfo) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given AmlWalletBlockchainInfoCluster and assigns it to the Cluster field.
func (o *AmlWalletBlockchainInfo) SetCluster(v AmlWalletBlockchainInfoCluster) {
	o.Cluster = &v
}

func (o AmlWalletBlockchainInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AmlWalletBlockchainInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	return toSerialize, nil
}

type NullableAmlWalletBlockchainInfo struct {
	value *AmlWalletBlockchainInfo
	isSet bool
}

func (v NullableAmlWalletBlockchainInfo) Get() *AmlWalletBlockchainInfo {
	return v.value
}

func (v *NullableAmlWalletBlockchainInfo) Set(val *AmlWalletBlockchainInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAmlWalletBlockchainInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAmlWalletBlockchainInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmlWalletBlockchainInfo(val *AmlWalletBlockchainInfo) *NullableAmlWalletBlockchainInfo {
	return &NullableAmlWalletBlockchainInfo{value: val, isSet: true}
}

func (v NullableAmlWalletBlockchainInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmlWalletBlockchainInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


