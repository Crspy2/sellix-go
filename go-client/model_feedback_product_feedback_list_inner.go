/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the FeedbackProductFeedbackListInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FeedbackProductFeedbackListInner{}

// FeedbackProductFeedbackListInner struct for FeedbackProductFeedbackListInner
type FeedbackProductFeedbackListInner struct {
	// The rating for the feedback
	Score *float32 `json:"score,omitempty"`
	// The message for the feedback
	Message *string `json:"message,omitempty"`
	// The reply to the original feedback message
	Reply *string `json:"reply,omitempty"`
	// Timestamp for the time when the feedback was created
	CreatedAt *float32 `json:"created_at,omitempty"`
	// Timestamp for the time when the feedback was last updated
	UpdatedAt *float32 `json:"updated_at,omitempty"`
}

// NewFeedbackProductFeedbackListInner instantiates a new FeedbackProductFeedbackListInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeedbackProductFeedbackListInner() *FeedbackProductFeedbackListInner {
	this := FeedbackProductFeedbackListInner{}
	return &this
}

// NewFeedbackProductFeedbackListInnerWithDefaults instantiates a new FeedbackProductFeedbackListInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeedbackProductFeedbackListInnerWithDefaults() *FeedbackProductFeedbackListInner {
	this := FeedbackProductFeedbackListInner{}
	return &this
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *FeedbackProductFeedbackListInner) GetScore() float32 {
	if o == nil || IsNil(o.Score) {
		var ret float32
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackProductFeedbackListInner) GetScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.Score) {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *FeedbackProductFeedbackListInner) HasScore() bool {
	if o != nil && !IsNil(o.Score) {
		return true
	}

	return false
}

// SetScore gets a reference to the given float32 and assigns it to the Score field.
func (o *FeedbackProductFeedbackListInner) SetScore(v float32) {
	o.Score = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *FeedbackProductFeedbackListInner) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackProductFeedbackListInner) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *FeedbackProductFeedbackListInner) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *FeedbackProductFeedbackListInner) SetMessage(v string) {
	o.Message = &v
}

// GetReply returns the Reply field value if set, zero value otherwise.
func (o *FeedbackProductFeedbackListInner) GetReply() string {
	if o == nil || IsNil(o.Reply) {
		var ret string
		return ret
	}
	return *o.Reply
}

// GetReplyOk returns a tuple with the Reply field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackProductFeedbackListInner) GetReplyOk() (*string, bool) {
	if o == nil || IsNil(o.Reply) {
		return nil, false
	}
	return o.Reply, true
}

// HasReply returns a boolean if a field has been set.
func (o *FeedbackProductFeedbackListInner) HasReply() bool {
	if o != nil && !IsNil(o.Reply) {
		return true
	}

	return false
}

// SetReply gets a reference to the given string and assigns it to the Reply field.
func (o *FeedbackProductFeedbackListInner) SetReply(v string) {
	o.Reply = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *FeedbackProductFeedbackListInner) GetCreatedAt() float32 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret float32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackProductFeedbackListInner) GetCreatedAtOk() (*float32, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *FeedbackProductFeedbackListInner) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given float32 and assigns it to the CreatedAt field.
func (o *FeedbackProductFeedbackListInner) SetCreatedAt(v float32) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *FeedbackProductFeedbackListInner) GetUpdatedAt() float32 {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret float32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackProductFeedbackListInner) GetUpdatedAtOk() (*float32, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *FeedbackProductFeedbackListInner) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given float32 and assigns it to the UpdatedAt field.
func (o *FeedbackProductFeedbackListInner) SetUpdatedAt(v float32) {
	o.UpdatedAt = &v
}

func (o FeedbackProductFeedbackListInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FeedbackProductFeedbackListInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Score) {
		toSerialize["score"] = o.Score
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Reply) {
		toSerialize["reply"] = o.Reply
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableFeedbackProductFeedbackListInner struct {
	value *FeedbackProductFeedbackListInner
	isSet bool
}

func (v NullableFeedbackProductFeedbackListInner) Get() *FeedbackProductFeedbackListInner {
	return v.value
}

func (v *NullableFeedbackProductFeedbackListInner) Set(val *FeedbackProductFeedbackListInner) {
	v.value = val
	v.isSet = true
}

func (v NullableFeedbackProductFeedbackListInner) IsSet() bool {
	return v.isSet
}

func (v *NullableFeedbackProductFeedbackListInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeedbackProductFeedbackListInner(val *FeedbackProductFeedbackListInner) *NullableFeedbackProductFeedbackListInner {
	return &NullableFeedbackProductFeedbackListInner{value: val, isSet: true}
}

func (v NullableFeedbackProductFeedbackListInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeedbackProductFeedbackListInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


