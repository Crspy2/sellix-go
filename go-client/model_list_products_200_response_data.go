/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListProducts200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListProducts200ResponseData{}

// ListProducts200ResponseData struct for ListProducts200ResponseData
type ListProducts200ResponseData struct {
	Products []ListedProduct `json:"products,omitempty"`
}

// NewListProducts200ResponseData instantiates a new ListProducts200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListProducts200ResponseData() *ListProducts200ResponseData {
	this := ListProducts200ResponseData{}
	return &this
}

// NewListProducts200ResponseDataWithDefaults instantiates a new ListProducts200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListProducts200ResponseDataWithDefaults() *ListProducts200ResponseData {
	this := ListProducts200ResponseData{}
	return &this
}

// GetProducts returns the Products field value if set, zero value otherwise.
func (o *ListProducts200ResponseData) GetProducts() []ListedProduct {
	if o == nil || IsNil(o.Products) {
		var ret []ListedProduct
		return ret
	}
	return o.Products
}

// GetProductsOk returns a tuple with the Products field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProducts200ResponseData) GetProductsOk() ([]ListedProduct, bool) {
	if o == nil || IsNil(o.Products) {
		return nil, false
	}
	return o.Products, true
}

// HasProducts returns a boolean if a field has been set.
func (o *ListProducts200ResponseData) HasProducts() bool {
	if o != nil && !IsNil(o.Products) {
		return true
	}

	return false
}

// SetProducts gets a reference to the given []ListedProduct and assigns it to the Products field.
func (o *ListProducts200ResponseData) SetProducts(v []ListedProduct) {
	o.Products = v
}

func (o ListProducts200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListProducts200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Products) {
		toSerialize["products"] = o.Products
	}
	return toSerialize, nil
}

type NullableListProducts200ResponseData struct {
	value *ListProducts200ResponseData
	isSet bool
}

func (v NullableListProducts200ResponseData) Get() *ListProducts200ResponseData {
	return v.value
}

func (v *NullableListProducts200ResponseData) Set(val *ListProducts200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableListProducts200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableListProducts200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListProducts200ResponseData(val *ListProducts200ResponseData) *NullableListProducts200ResponseData {
	return &NullableListProducts200ResponseData{value: val, isSet: true}
}

func (v NullableListProducts200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListProducts200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


