/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the ListFeedback200ResponseDataDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListFeedback200ResponseDataDetails{}

// ListFeedback200ResponseDataDetails struct for ListFeedback200ResponseDataDetails
type ListFeedback200ResponseDataDetails struct {
	Positive *float32 `json:"positive,omitempty"`
	Neutral *float32 `json:"neutral,omitempty"`
	Negative *float32 `json:"negative,omitempty"`
	Total *float32 `json:"total,omitempty"`
}

// NewListFeedback200ResponseDataDetails instantiates a new ListFeedback200ResponseDataDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListFeedback200ResponseDataDetails() *ListFeedback200ResponseDataDetails {
	this := ListFeedback200ResponseDataDetails{}
	return &this
}

// NewListFeedback200ResponseDataDetailsWithDefaults instantiates a new ListFeedback200ResponseDataDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListFeedback200ResponseDataDetailsWithDefaults() *ListFeedback200ResponseDataDetails {
	this := ListFeedback200ResponseDataDetails{}
	return &this
}

// GetPositive returns the Positive field value if set, zero value otherwise.
func (o *ListFeedback200ResponseDataDetails) GetPositive() float32 {
	if o == nil || IsNil(o.Positive) {
		var ret float32
		return ret
	}
	return *o.Positive
}

// GetPositiveOk returns a tuple with the Positive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListFeedback200ResponseDataDetails) GetPositiveOk() (*float32, bool) {
	if o == nil || IsNil(o.Positive) {
		return nil, false
	}
	return o.Positive, true
}

// HasPositive returns a boolean if a field has been set.
func (o *ListFeedback200ResponseDataDetails) HasPositive() bool {
	if o != nil && !IsNil(o.Positive) {
		return true
	}

	return false
}

// SetPositive gets a reference to the given float32 and assigns it to the Positive field.
func (o *ListFeedback200ResponseDataDetails) SetPositive(v float32) {
	o.Positive = &v
}

// GetNeutral returns the Neutral field value if set, zero value otherwise.
func (o *ListFeedback200ResponseDataDetails) GetNeutral() float32 {
	if o == nil || IsNil(o.Neutral) {
		var ret float32
		return ret
	}
	return *o.Neutral
}

// GetNeutralOk returns a tuple with the Neutral field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListFeedback200ResponseDataDetails) GetNeutralOk() (*float32, bool) {
	if o == nil || IsNil(o.Neutral) {
		return nil, false
	}
	return o.Neutral, true
}

// HasNeutral returns a boolean if a field has been set.
func (o *ListFeedback200ResponseDataDetails) HasNeutral() bool {
	if o != nil && !IsNil(o.Neutral) {
		return true
	}

	return false
}

// SetNeutral gets a reference to the given float32 and assigns it to the Neutral field.
func (o *ListFeedback200ResponseDataDetails) SetNeutral(v float32) {
	o.Neutral = &v
}

// GetNegative returns the Negative field value if set, zero value otherwise.
func (o *ListFeedback200ResponseDataDetails) GetNegative() float32 {
	if o == nil || IsNil(o.Negative) {
		var ret float32
		return ret
	}
	return *o.Negative
}

// GetNegativeOk returns a tuple with the Negative field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListFeedback200ResponseDataDetails) GetNegativeOk() (*float32, bool) {
	if o == nil || IsNil(o.Negative) {
		return nil, false
	}
	return o.Negative, true
}

// HasNegative returns a boolean if a field has been set.
func (o *ListFeedback200ResponseDataDetails) HasNegative() bool {
	if o != nil && !IsNil(o.Negative) {
		return true
	}

	return false
}

// SetNegative gets a reference to the given float32 and assigns it to the Negative field.
func (o *ListFeedback200ResponseDataDetails) SetNegative(v float32) {
	o.Negative = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *ListFeedback200ResponseDataDetails) GetTotal() float32 {
	if o == nil || IsNil(o.Total) {
		var ret float32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListFeedback200ResponseDataDetails) GetTotalOk() (*float32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *ListFeedback200ResponseDataDetails) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given float32 and assigns it to the Total field.
func (o *ListFeedback200ResponseDataDetails) SetTotal(v float32) {
	o.Total = &v
}

func (o ListFeedback200ResponseDataDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListFeedback200ResponseDataDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Positive) {
		toSerialize["positive"] = o.Positive
	}
	if !IsNil(o.Neutral) {
		toSerialize["neutral"] = o.Neutral
	}
	if !IsNil(o.Negative) {
		toSerialize["negative"] = o.Negative
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	return toSerialize, nil
}

type NullableListFeedback200ResponseDataDetails struct {
	value *ListFeedback200ResponseDataDetails
	isSet bool
}

func (v NullableListFeedback200ResponseDataDetails) Get() *ListFeedback200ResponseDataDetails {
	return v.value
}

func (v *NullableListFeedback200ResponseDataDetails) Set(val *ListFeedback200ResponseDataDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableListFeedback200ResponseDataDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableListFeedback200ResponseDataDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListFeedback200ResponseDataDetails(val *ListFeedback200ResponseDataDetails) *NullableListFeedback200ResponseDataDetails {
	return &NullableListFeedback200ResponseDataDetails{value: val, isSet: true}
}

func (v NullableListFeedback200ResponseDataDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListFeedback200ResponseDataDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


