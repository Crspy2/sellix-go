/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IpInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IpInfo{}

// IpInfo Additional info on the customer IP.
type IpInfo struct {
	// IP info retrieved successfully.
	Success *bool `json:"success,omitempty"`
	// Any other details linked to this IP.
	Message *string `json:"message,omitempty"`
	// IP Fraud Score details.
	FraudScore *int32 `json:"fraud_score,omitempty"`
	// IP country code.
	CountryCode *string `json:"country_code,omitempty"`
	// IP region.
	Region *string `json:"region,omitempty"`
	// IP city.
	City *string `json:"city,omitempty"`
	// IP ISP
	ISP *string `json:"ISP,omitempty"`
	// ISP ASN
	ASN *int32 `json:"ASN,omitempty"`
	// Customer device operating system.
	OperatingSystem *string `json:"operating_system,omitempty"`
	// Customer device browser.
	Browser *string `json:"browser,omitempty"`
	// IP organization.
	Organization *string `json:"organization,omitempty"`
	// If true, the IP has been recently detected as a crawler.
	IsCrawler *bool `json:"is_crawler,omitempty"`
	// Customer timezone.
	Timezone *string `json:"timezone,omitempty"`
	// If true, the customer used a mobile device.
	Mobile *bool `json:"mobile,omitempty"`
	// ISP host.
	Host *string `json:"host,omitempty"`
	// If true, the IP has been recently detected using a proxy.
	Proxy *bool `json:"proxy,omitempty"`
	// If true, the IP has been recently detected using a VPN.
	Vpn *bool `json:"vpn,omitempty"`
	// If true, the IP has been recently detected using TOR.
	Tor *bool `json:"tor,omitempty"`
	// If true, the IP has an active VPN connection.
	ActiveVpn *bool `json:"active_vpn,omitempty"`
	// If true, the IP has an active TOR connection.
	ActiveTor *bool `json:"active_tor,omitempty"`
	// Customer device brand.
	DeviceBrand *string `json:"device_brand,omitempty"`
	// Customer device model.
	DeviceModel *string `json:"device_model,omitempty"`
	// If true, the IP has been recently detected in an online abuse.
	RecentAbuse *bool `json:"recent_abuse,omitempty"`
	// If true, the IP has been recently detected as a BOT.
	BotStatus *bool `json:"bot_status,omitempty"`
	// Customer connection type.
	ConnectionType *string `json:"connection_type,omitempty"`
	// IP abuse velocity.
	AbuseVelocity *string `json:"abuse_velocity,omitempty"`
	// If detected, customer ZIP code.
	ZipCode *string `json:"zip_code,omitempty"`
	// IP latitude.
	Latitude *float64 `json:"latitude,omitempty"`
	// IP longitude.
	Longitude *float64 `json:"longitude,omitempty"`
	// IP request ID used for internal reference.
	RequestId *string `json:"request_id,omitempty"`
}

// NewIpInfo instantiates a new IpInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpInfo() *IpInfo {
	this := IpInfo{}
	return &this
}

// NewIpInfoWithDefaults instantiates a new IpInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpInfoWithDefaults() *IpInfo {
	this := IpInfo{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *IpInfo) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *IpInfo) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *IpInfo) SetSuccess(v bool) {
	o.Success = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *IpInfo) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *IpInfo) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *IpInfo) SetMessage(v string) {
	o.Message = &v
}

// GetFraudScore returns the FraudScore field value if set, zero value otherwise.
func (o *IpInfo) GetFraudScore() int32 {
	if o == nil || IsNil(o.FraudScore) {
		var ret int32
		return ret
	}
	return *o.FraudScore
}

// GetFraudScoreOk returns a tuple with the FraudScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetFraudScoreOk() (*int32, bool) {
	if o == nil || IsNil(o.FraudScore) {
		return nil, false
	}
	return o.FraudScore, true
}

// HasFraudScore returns a boolean if a field has been set.
func (o *IpInfo) HasFraudScore() bool {
	if o != nil && !IsNil(o.FraudScore) {
		return true
	}

	return false
}

// SetFraudScore gets a reference to the given int32 and assigns it to the FraudScore field.
func (o *IpInfo) SetFraudScore(v int32) {
	o.FraudScore = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *IpInfo) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *IpInfo) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *IpInfo) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *IpInfo) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *IpInfo) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *IpInfo) SetRegion(v string) {
	o.Region = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *IpInfo) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *IpInfo) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *IpInfo) SetCity(v string) {
	o.City = &v
}

// GetISP returns the ISP field value if set, zero value otherwise.
func (o *IpInfo) GetISP() string {
	if o == nil || IsNil(o.ISP) {
		var ret string
		return ret
	}
	return *o.ISP
}

// GetISPOk returns a tuple with the ISP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetISPOk() (*string, bool) {
	if o == nil || IsNil(o.ISP) {
		return nil, false
	}
	return o.ISP, true
}

// HasISP returns a boolean if a field has been set.
func (o *IpInfo) HasISP() bool {
	if o != nil && !IsNil(o.ISP) {
		return true
	}

	return false
}

// SetISP gets a reference to the given string and assigns it to the ISP field.
func (o *IpInfo) SetISP(v string) {
	o.ISP = &v
}

// GetASN returns the ASN field value if set, zero value otherwise.
func (o *IpInfo) GetASN() int32 {
	if o == nil || IsNil(o.ASN) {
		var ret int32
		return ret
	}
	return *o.ASN
}

// GetASNOk returns a tuple with the ASN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetASNOk() (*int32, bool) {
	if o == nil || IsNil(o.ASN) {
		return nil, false
	}
	return o.ASN, true
}

// HasASN returns a boolean if a field has been set.
func (o *IpInfo) HasASN() bool {
	if o != nil && !IsNil(o.ASN) {
		return true
	}

	return false
}

// SetASN gets a reference to the given int32 and assigns it to the ASN field.
func (o *IpInfo) SetASN(v int32) {
	o.ASN = &v
}

// GetOperatingSystem returns the OperatingSystem field value if set, zero value otherwise.
func (o *IpInfo) GetOperatingSystem() string {
	if o == nil || IsNil(o.OperatingSystem) {
		var ret string
		return ret
	}
	return *o.OperatingSystem
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetOperatingSystemOk() (*string, bool) {
	if o == nil || IsNil(o.OperatingSystem) {
		return nil, false
	}
	return o.OperatingSystem, true
}

// HasOperatingSystem returns a boolean if a field has been set.
func (o *IpInfo) HasOperatingSystem() bool {
	if o != nil && !IsNil(o.OperatingSystem) {
		return true
	}

	return false
}

// SetOperatingSystem gets a reference to the given string and assigns it to the OperatingSystem field.
func (o *IpInfo) SetOperatingSystem(v string) {
	o.OperatingSystem = &v
}

// GetBrowser returns the Browser field value if set, zero value otherwise.
func (o *IpInfo) GetBrowser() string {
	if o == nil || IsNil(o.Browser) {
		var ret string
		return ret
	}
	return *o.Browser
}

// GetBrowserOk returns a tuple with the Browser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetBrowserOk() (*string, bool) {
	if o == nil || IsNil(o.Browser) {
		return nil, false
	}
	return o.Browser, true
}

// HasBrowser returns a boolean if a field has been set.
func (o *IpInfo) HasBrowser() bool {
	if o != nil && !IsNil(o.Browser) {
		return true
	}

	return false
}

// SetBrowser gets a reference to the given string and assigns it to the Browser field.
func (o *IpInfo) SetBrowser(v string) {
	o.Browser = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *IpInfo) GetOrganization() string {
	if o == nil || IsNil(o.Organization) {
		var ret string
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetOrganizationOk() (*string, bool) {
	if o == nil || IsNil(o.Organization) {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *IpInfo) HasOrganization() bool {
	if o != nil && !IsNil(o.Organization) {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given string and assigns it to the Organization field.
func (o *IpInfo) SetOrganization(v string) {
	o.Organization = &v
}

// GetIsCrawler returns the IsCrawler field value if set, zero value otherwise.
func (o *IpInfo) GetIsCrawler() bool {
	if o == nil || IsNil(o.IsCrawler) {
		var ret bool
		return ret
	}
	return *o.IsCrawler
}

// GetIsCrawlerOk returns a tuple with the IsCrawler field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetIsCrawlerOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCrawler) {
		return nil, false
	}
	return o.IsCrawler, true
}

// HasIsCrawler returns a boolean if a field has been set.
func (o *IpInfo) HasIsCrawler() bool {
	if o != nil && !IsNil(o.IsCrawler) {
		return true
	}

	return false
}

// SetIsCrawler gets a reference to the given bool and assigns it to the IsCrawler field.
func (o *IpInfo) SetIsCrawler(v bool) {
	o.IsCrawler = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *IpInfo) GetTimezone() string {
	if o == nil || IsNil(o.Timezone) {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetTimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.Timezone) {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *IpInfo) HasTimezone() bool {
	if o != nil && !IsNil(o.Timezone) {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *IpInfo) SetTimezone(v string) {
	o.Timezone = &v
}

// GetMobile returns the Mobile field value if set, zero value otherwise.
func (o *IpInfo) GetMobile() bool {
	if o == nil || IsNil(o.Mobile) {
		var ret bool
		return ret
	}
	return *o.Mobile
}

// GetMobileOk returns a tuple with the Mobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetMobileOk() (*bool, bool) {
	if o == nil || IsNil(o.Mobile) {
		return nil, false
	}
	return o.Mobile, true
}

// HasMobile returns a boolean if a field has been set.
func (o *IpInfo) HasMobile() bool {
	if o != nil && !IsNil(o.Mobile) {
		return true
	}

	return false
}

// SetMobile gets a reference to the given bool and assigns it to the Mobile field.
func (o *IpInfo) SetMobile(v bool) {
	o.Mobile = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *IpInfo) GetHost() string {
	if o == nil || IsNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetHostOk() (*string, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *IpInfo) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *IpInfo) SetHost(v string) {
	o.Host = &v
}

// GetProxy returns the Proxy field value if set, zero value otherwise.
func (o *IpInfo) GetProxy() bool {
	if o == nil || IsNil(o.Proxy) {
		var ret bool
		return ret
	}
	return *o.Proxy
}

// GetProxyOk returns a tuple with the Proxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetProxyOk() (*bool, bool) {
	if o == nil || IsNil(o.Proxy) {
		return nil, false
	}
	return o.Proxy, true
}

// HasProxy returns a boolean if a field has been set.
func (o *IpInfo) HasProxy() bool {
	if o != nil && !IsNil(o.Proxy) {
		return true
	}

	return false
}

// SetProxy gets a reference to the given bool and assigns it to the Proxy field.
func (o *IpInfo) SetProxy(v bool) {
	o.Proxy = &v
}

// GetVpn returns the Vpn field value if set, zero value otherwise.
func (o *IpInfo) GetVpn() bool {
	if o == nil || IsNil(o.Vpn) {
		var ret bool
		return ret
	}
	return *o.Vpn
}

// GetVpnOk returns a tuple with the Vpn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetVpnOk() (*bool, bool) {
	if o == nil || IsNil(o.Vpn) {
		return nil, false
	}
	return o.Vpn, true
}

// HasVpn returns a boolean if a field has been set.
func (o *IpInfo) HasVpn() bool {
	if o != nil && !IsNil(o.Vpn) {
		return true
	}

	return false
}

// SetVpn gets a reference to the given bool and assigns it to the Vpn field.
func (o *IpInfo) SetVpn(v bool) {
	o.Vpn = &v
}

// GetTor returns the Tor field value if set, zero value otherwise.
func (o *IpInfo) GetTor() bool {
	if o == nil || IsNil(o.Tor) {
		var ret bool
		return ret
	}
	return *o.Tor
}

// GetTorOk returns a tuple with the Tor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetTorOk() (*bool, bool) {
	if o == nil || IsNil(o.Tor) {
		return nil, false
	}
	return o.Tor, true
}

// HasTor returns a boolean if a field has been set.
func (o *IpInfo) HasTor() bool {
	if o != nil && !IsNil(o.Tor) {
		return true
	}

	return false
}

// SetTor gets a reference to the given bool and assigns it to the Tor field.
func (o *IpInfo) SetTor(v bool) {
	o.Tor = &v
}

// GetActiveVpn returns the ActiveVpn field value if set, zero value otherwise.
func (o *IpInfo) GetActiveVpn() bool {
	if o == nil || IsNil(o.ActiveVpn) {
		var ret bool
		return ret
	}
	return *o.ActiveVpn
}

// GetActiveVpnOk returns a tuple with the ActiveVpn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetActiveVpnOk() (*bool, bool) {
	if o == nil || IsNil(o.ActiveVpn) {
		return nil, false
	}
	return o.ActiveVpn, true
}

// HasActiveVpn returns a boolean if a field has been set.
func (o *IpInfo) HasActiveVpn() bool {
	if o != nil && !IsNil(o.ActiveVpn) {
		return true
	}

	return false
}

// SetActiveVpn gets a reference to the given bool and assigns it to the ActiveVpn field.
func (o *IpInfo) SetActiveVpn(v bool) {
	o.ActiveVpn = &v
}

// GetActiveTor returns the ActiveTor field value if set, zero value otherwise.
func (o *IpInfo) GetActiveTor() bool {
	if o == nil || IsNil(o.ActiveTor) {
		var ret bool
		return ret
	}
	return *o.ActiveTor
}

// GetActiveTorOk returns a tuple with the ActiveTor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetActiveTorOk() (*bool, bool) {
	if o == nil || IsNil(o.ActiveTor) {
		return nil, false
	}
	return o.ActiveTor, true
}

// HasActiveTor returns a boolean if a field has been set.
func (o *IpInfo) HasActiveTor() bool {
	if o != nil && !IsNil(o.ActiveTor) {
		return true
	}

	return false
}

// SetActiveTor gets a reference to the given bool and assigns it to the ActiveTor field.
func (o *IpInfo) SetActiveTor(v bool) {
	o.ActiveTor = &v
}

// GetDeviceBrand returns the DeviceBrand field value if set, zero value otherwise.
func (o *IpInfo) GetDeviceBrand() string {
	if o == nil || IsNil(o.DeviceBrand) {
		var ret string
		return ret
	}
	return *o.DeviceBrand
}

// GetDeviceBrandOk returns a tuple with the DeviceBrand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetDeviceBrandOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceBrand) {
		return nil, false
	}
	return o.DeviceBrand, true
}

// HasDeviceBrand returns a boolean if a field has been set.
func (o *IpInfo) HasDeviceBrand() bool {
	if o != nil && !IsNil(o.DeviceBrand) {
		return true
	}

	return false
}

// SetDeviceBrand gets a reference to the given string and assigns it to the DeviceBrand field.
func (o *IpInfo) SetDeviceBrand(v string) {
	o.DeviceBrand = &v
}

// GetDeviceModel returns the DeviceModel field value if set, zero value otherwise.
func (o *IpInfo) GetDeviceModel() string {
	if o == nil || IsNil(o.DeviceModel) {
		var ret string
		return ret
	}
	return *o.DeviceModel
}

// GetDeviceModelOk returns a tuple with the DeviceModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetDeviceModelOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceModel) {
		return nil, false
	}
	return o.DeviceModel, true
}

// HasDeviceModel returns a boolean if a field has been set.
func (o *IpInfo) HasDeviceModel() bool {
	if o != nil && !IsNil(o.DeviceModel) {
		return true
	}

	return false
}

// SetDeviceModel gets a reference to the given string and assigns it to the DeviceModel field.
func (o *IpInfo) SetDeviceModel(v string) {
	o.DeviceModel = &v
}

// GetRecentAbuse returns the RecentAbuse field value if set, zero value otherwise.
func (o *IpInfo) GetRecentAbuse() bool {
	if o == nil || IsNil(o.RecentAbuse) {
		var ret bool
		return ret
	}
	return *o.RecentAbuse
}

// GetRecentAbuseOk returns a tuple with the RecentAbuse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetRecentAbuseOk() (*bool, bool) {
	if o == nil || IsNil(o.RecentAbuse) {
		return nil, false
	}
	return o.RecentAbuse, true
}

// HasRecentAbuse returns a boolean if a field has been set.
func (o *IpInfo) HasRecentAbuse() bool {
	if o != nil && !IsNil(o.RecentAbuse) {
		return true
	}

	return false
}

// SetRecentAbuse gets a reference to the given bool and assigns it to the RecentAbuse field.
func (o *IpInfo) SetRecentAbuse(v bool) {
	o.RecentAbuse = &v
}

// GetBotStatus returns the BotStatus field value if set, zero value otherwise.
func (o *IpInfo) GetBotStatus() bool {
	if o == nil || IsNil(o.BotStatus) {
		var ret bool
		return ret
	}
	return *o.BotStatus
}

// GetBotStatusOk returns a tuple with the BotStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetBotStatusOk() (*bool, bool) {
	if o == nil || IsNil(o.BotStatus) {
		return nil, false
	}
	return o.BotStatus, true
}

// HasBotStatus returns a boolean if a field has been set.
func (o *IpInfo) HasBotStatus() bool {
	if o != nil && !IsNil(o.BotStatus) {
		return true
	}

	return false
}

// SetBotStatus gets a reference to the given bool and assigns it to the BotStatus field.
func (o *IpInfo) SetBotStatus(v bool) {
	o.BotStatus = &v
}

// GetConnectionType returns the ConnectionType field value if set, zero value otherwise.
func (o *IpInfo) GetConnectionType() string {
	if o == nil || IsNil(o.ConnectionType) {
		var ret string
		return ret
	}
	return *o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetConnectionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionType) {
		return nil, false
	}
	return o.ConnectionType, true
}

// HasConnectionType returns a boolean if a field has been set.
func (o *IpInfo) HasConnectionType() bool {
	if o != nil && !IsNil(o.ConnectionType) {
		return true
	}

	return false
}

// SetConnectionType gets a reference to the given string and assigns it to the ConnectionType field.
func (o *IpInfo) SetConnectionType(v string) {
	o.ConnectionType = &v
}

// GetAbuseVelocity returns the AbuseVelocity field value if set, zero value otherwise.
func (o *IpInfo) GetAbuseVelocity() string {
	if o == nil || IsNil(o.AbuseVelocity) {
		var ret string
		return ret
	}
	return *o.AbuseVelocity
}

// GetAbuseVelocityOk returns a tuple with the AbuseVelocity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetAbuseVelocityOk() (*string, bool) {
	if o == nil || IsNil(o.AbuseVelocity) {
		return nil, false
	}
	return o.AbuseVelocity, true
}

// HasAbuseVelocity returns a boolean if a field has been set.
func (o *IpInfo) HasAbuseVelocity() bool {
	if o != nil && !IsNil(o.AbuseVelocity) {
		return true
	}

	return false
}

// SetAbuseVelocity gets a reference to the given string and assigns it to the AbuseVelocity field.
func (o *IpInfo) SetAbuseVelocity(v string) {
	o.AbuseVelocity = &v
}

// GetZipCode returns the ZipCode field value if set, zero value otherwise.
func (o *IpInfo) GetZipCode() string {
	if o == nil || IsNil(o.ZipCode) {
		var ret string
		return ret
	}
	return *o.ZipCode
}

// GetZipCodeOk returns a tuple with the ZipCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetZipCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ZipCode) {
		return nil, false
	}
	return o.ZipCode, true
}

// HasZipCode returns a boolean if a field has been set.
func (o *IpInfo) HasZipCode() bool {
	if o != nil && !IsNil(o.ZipCode) {
		return true
	}

	return false
}

// SetZipCode gets a reference to the given string and assigns it to the ZipCode field.
func (o *IpInfo) SetZipCode(v string) {
	o.ZipCode = &v
}

// GetLatitude returns the Latitude field value if set, zero value otherwise.
func (o *IpInfo) GetLatitude() float64 {
	if o == nil || IsNil(o.Latitude) {
		var ret float64
		return ret
	}
	return *o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetLatitudeOk() (*float64, bool) {
	if o == nil || IsNil(o.Latitude) {
		return nil, false
	}
	return o.Latitude, true
}

// HasLatitude returns a boolean if a field has been set.
func (o *IpInfo) HasLatitude() bool {
	if o != nil && !IsNil(o.Latitude) {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given float64 and assigns it to the Latitude field.
func (o *IpInfo) SetLatitude(v float64) {
	o.Latitude = &v
}

// GetLongitude returns the Longitude field value if set, zero value otherwise.
func (o *IpInfo) GetLongitude() float64 {
	if o == nil || IsNil(o.Longitude) {
		var ret float64
		return ret
	}
	return *o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetLongitudeOk() (*float64, bool) {
	if o == nil || IsNil(o.Longitude) {
		return nil, false
	}
	return o.Longitude, true
}

// HasLongitude returns a boolean if a field has been set.
func (o *IpInfo) HasLongitude() bool {
	if o != nil && !IsNil(o.Longitude) {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given float64 and assigns it to the Longitude field.
func (o *IpInfo) SetLongitude(v float64) {
	o.Longitude = &v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *IpInfo) GetRequestId() string {
	if o == nil || IsNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpInfo) GetRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *IpInfo) HasRequestId() bool {
	if o != nil && !IsNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *IpInfo) SetRequestId(v string) {
	o.RequestId = &v
}

func (o IpInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IpInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.FraudScore) {
		toSerialize["fraud_score"] = o.FraudScore
	}
	if !IsNil(o.CountryCode) {
		toSerialize["country_code"] = o.CountryCode
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.ISP) {
		toSerialize["ISP"] = o.ISP
	}
	if !IsNil(o.ASN) {
		toSerialize["ASN"] = o.ASN
	}
	if !IsNil(o.OperatingSystem) {
		toSerialize["operating_system"] = o.OperatingSystem
	}
	if !IsNil(o.Browser) {
		toSerialize["browser"] = o.Browser
	}
	if !IsNil(o.Organization) {
		toSerialize["organization"] = o.Organization
	}
	if !IsNil(o.IsCrawler) {
		toSerialize["is_crawler"] = o.IsCrawler
	}
	if !IsNil(o.Timezone) {
		toSerialize["timezone"] = o.Timezone
	}
	if !IsNil(o.Mobile) {
		toSerialize["mobile"] = o.Mobile
	}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Proxy) {
		toSerialize["proxy"] = o.Proxy
	}
	if !IsNil(o.Vpn) {
		toSerialize["vpn"] = o.Vpn
	}
	if !IsNil(o.Tor) {
		toSerialize["tor"] = o.Tor
	}
	if !IsNil(o.ActiveVpn) {
		toSerialize["active_vpn"] = o.ActiveVpn
	}
	if !IsNil(o.ActiveTor) {
		toSerialize["active_tor"] = o.ActiveTor
	}
	if !IsNil(o.DeviceBrand) {
		toSerialize["device_brand"] = o.DeviceBrand
	}
	if !IsNil(o.DeviceModel) {
		toSerialize["device_model"] = o.DeviceModel
	}
	if !IsNil(o.RecentAbuse) {
		toSerialize["recent_abuse"] = o.RecentAbuse
	}
	if !IsNil(o.BotStatus) {
		toSerialize["bot_status"] = o.BotStatus
	}
	if !IsNil(o.ConnectionType) {
		toSerialize["connection_type"] = o.ConnectionType
	}
	if !IsNil(o.AbuseVelocity) {
		toSerialize["abuse_velocity"] = o.AbuseVelocity
	}
	if !IsNil(o.ZipCode) {
		toSerialize["zip_code"] = o.ZipCode
	}
	if !IsNil(o.Latitude) {
		toSerialize["latitude"] = o.Latitude
	}
	if !IsNil(o.Longitude) {
		toSerialize["longitude"] = o.Longitude
	}
	if !IsNil(o.RequestId) {
		toSerialize["request_id"] = o.RequestId
	}
	return toSerialize, nil
}

type NullableIpInfo struct {
	value *IpInfo
	isSet bool
}

func (v NullableIpInfo) Get() *IpInfo {
	return v.value
}

func (v *NullableIpInfo) Set(val *IpInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableIpInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableIpInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpInfo(val *IpInfo) *NullableIpInfo {
	return &NullableIpInfo{value: val, isSet: true}
}

func (v NullableIpInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


