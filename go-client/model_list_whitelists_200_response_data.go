/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListWhitelists200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListWhitelists200ResponseData{}

// ListWhitelists200ResponseData struct for ListWhitelists200ResponseData
type ListWhitelists200ResponseData struct {
	Whitelists []Whitelist `json:"whitelists,omitempty"`
}

// NewListWhitelists200ResponseData instantiates a new ListWhitelists200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListWhitelists200ResponseData() *ListWhitelists200ResponseData {
	this := ListWhitelists200ResponseData{}
	return &this
}

// NewListWhitelists200ResponseDataWithDefaults instantiates a new ListWhitelists200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListWhitelists200ResponseDataWithDefaults() *ListWhitelists200ResponseData {
	this := ListWhitelists200ResponseData{}
	return &this
}

// GetWhitelists returns the Whitelists field value if set, zero value otherwise.
func (o *ListWhitelists200ResponseData) GetWhitelists() []Whitelist {
	if o == nil || IsNil(o.Whitelists) {
		var ret []Whitelist
		return ret
	}
	return o.Whitelists
}

// GetWhitelistsOk returns a tuple with the Whitelists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWhitelists200ResponseData) GetWhitelistsOk() ([]Whitelist, bool) {
	if o == nil || IsNil(o.Whitelists) {
		return nil, false
	}
	return o.Whitelists, true
}

// HasWhitelists returns a boolean if a field has been set.
func (o *ListWhitelists200ResponseData) HasWhitelists() bool {
	if o != nil && !IsNil(o.Whitelists) {
		return true
	}

	return false
}

// SetWhitelists gets a reference to the given []Whitelist and assigns it to the Whitelists field.
func (o *ListWhitelists200ResponseData) SetWhitelists(v []Whitelist) {
	o.Whitelists = v
}

func (o ListWhitelists200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListWhitelists200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Whitelists) {
		toSerialize["whitelists"] = o.Whitelists
	}
	return toSerialize, nil
}

type NullableListWhitelists200ResponseData struct {
	value *ListWhitelists200ResponseData
	isSet bool
}

func (v NullableListWhitelists200ResponseData) Get() *ListWhitelists200ResponseData {
	return v.value
}

func (v *NullableListWhitelists200ResponseData) Set(val *ListWhitelists200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableListWhitelists200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableListWhitelists200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListWhitelists200ResponseData(val *ListWhitelists200ResponseData) *NullableListWhitelists200ResponseData {
	return &NullableListWhitelists200ResponseData{value: val, isSet: true}
}

func (v NullableListWhitelists200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListWhitelists200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


