/*
Sellix Developers API

Sellix public API for developers to access merchant resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sellix

import (
	"encoding/json"
)

// checks if the GetBlacklist200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBlacklist200ResponseData{}

// GetBlacklist200ResponseData struct for GetBlacklist200ResponseData
type GetBlacklist200ResponseData struct {
	Blacklist *Blacklist `json:"blacklist,omitempty"`
}

// NewGetBlacklist200ResponseData instantiates a new GetBlacklist200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBlacklist200ResponseData() *GetBlacklist200ResponseData {
	this := GetBlacklist200ResponseData{}
	return &this
}

// NewGetBlacklist200ResponseDataWithDefaults instantiates a new GetBlacklist200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBlacklist200ResponseDataWithDefaults() *GetBlacklist200ResponseData {
	this := GetBlacklist200ResponseData{}
	return &this
}

// GetBlacklist returns the Blacklist field value if set, zero value otherwise.
func (o *GetBlacklist200ResponseData) GetBlacklist() Blacklist {
	if o == nil || IsNil(o.Blacklist) {
		var ret Blacklist
		return ret
	}
	return *o.Blacklist
}

// GetBlacklistOk returns a tuple with the Blacklist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBlacklist200ResponseData) GetBlacklistOk() (*Blacklist, bool) {
	if o == nil || IsNil(o.Blacklist) {
		return nil, false
	}
	return o.Blacklist, true
}

// HasBlacklist returns a boolean if a field has been set.
func (o *GetBlacklist200ResponseData) HasBlacklist() bool {
	if o != nil && !IsNil(o.Blacklist) {
		return true
	}

	return false
}

// SetBlacklist gets a reference to the given Blacklist and assigns it to the Blacklist field.
func (o *GetBlacklist200ResponseData) SetBlacklist(v Blacklist) {
	o.Blacklist = &v
}

func (o GetBlacklist200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBlacklist200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Blacklist) {
		toSerialize["blacklist"] = o.Blacklist
	}
	return toSerialize, nil
}

type NullableGetBlacklist200ResponseData struct {
	value *GetBlacklist200ResponseData
	isSet bool
}

func (v NullableGetBlacklist200ResponseData) Get() *GetBlacklist200ResponseData {
	return v.value
}

func (v *NullableGetBlacklist200ResponseData) Set(val *GetBlacklist200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBlacklist200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBlacklist200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBlacklist200ResponseData(val *GetBlacklist200ResponseData) *NullableGetBlacklist200ResponseData {
	return &NullableGetBlacklist200ResponseData{value: val, isSet: true}
}

func (v NullableGetBlacklist200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBlacklist200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


